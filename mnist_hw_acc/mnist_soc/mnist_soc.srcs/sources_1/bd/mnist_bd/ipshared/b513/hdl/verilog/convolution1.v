// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY,
        m_axi_input_r_AWADDR,
        m_axi_input_r_AWID,
        m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID,
        m_axi_input_r_WREADY,
        m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST,
        m_axi_input_r_WID,
        m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY,
        m_axi_input_r_ARADDR,
        m_axi_input_r_ARID,
        m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID,
        m_axi_input_r_RREADY,
        m_axi_input_r_RDATA,
        m_axi_input_r_RLAST,
        m_axi_input_r_RID,
        m_axi_input_r_RUSER,
        m_axi_input_r_RRESP,
        m_axi_input_r_BVALID,
        m_axi_input_r_BREADY,
        m_axi_input_r_BRESP,
        m_axi_input_r_BID,
        m_axi_input_r_BUSER,
        input_offset,
        weights_0_address0,
        weights_0_ce0,
        weights_0_q0,
        weights_0_address1,
        weights_0_ce1,
        weights_0_q1,
        bias_address0,
        bias_ce0,
        bias_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_pp0_stage0 = 27'd2;
parameter    ap_ST_fsm_pp0_stage1 = 27'd4;
parameter    ap_ST_fsm_pp0_stage2 = 27'd8;
parameter    ap_ST_fsm_pp0_stage3 = 27'd16;
parameter    ap_ST_fsm_pp0_stage4 = 27'd32;
parameter    ap_ST_fsm_pp0_stage5 = 27'd64;
parameter    ap_ST_fsm_pp0_stage6 = 27'd128;
parameter    ap_ST_fsm_pp0_stage7 = 27'd256;
parameter    ap_ST_fsm_pp0_stage8 = 27'd512;
parameter    ap_ST_fsm_pp0_stage9 = 27'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 27'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 27'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 27'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 27'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 27'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 27'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 27'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 27'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 27'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 27'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 27'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 27'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 27'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 27'd33554432;
parameter    ap_ST_fsm_state147 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_input_r_AWVALID;
input   m_axi_input_r_AWREADY;
output  [31:0] m_axi_input_r_AWADDR;
output  [0:0] m_axi_input_r_AWID;
output  [31:0] m_axi_input_r_AWLEN;
output  [2:0] m_axi_input_r_AWSIZE;
output  [1:0] m_axi_input_r_AWBURST;
output  [1:0] m_axi_input_r_AWLOCK;
output  [3:0] m_axi_input_r_AWCACHE;
output  [2:0] m_axi_input_r_AWPROT;
output  [3:0] m_axi_input_r_AWQOS;
output  [3:0] m_axi_input_r_AWREGION;
output  [0:0] m_axi_input_r_AWUSER;
output   m_axi_input_r_WVALID;
input   m_axi_input_r_WREADY;
output  [31:0] m_axi_input_r_WDATA;
output  [3:0] m_axi_input_r_WSTRB;
output   m_axi_input_r_WLAST;
output  [0:0] m_axi_input_r_WID;
output  [0:0] m_axi_input_r_WUSER;
output   m_axi_input_r_ARVALID;
input   m_axi_input_r_ARREADY;
output  [31:0] m_axi_input_r_ARADDR;
output  [0:0] m_axi_input_r_ARID;
output  [31:0] m_axi_input_r_ARLEN;
output  [2:0] m_axi_input_r_ARSIZE;
output  [1:0] m_axi_input_r_ARBURST;
output  [1:0] m_axi_input_r_ARLOCK;
output  [3:0] m_axi_input_r_ARCACHE;
output  [2:0] m_axi_input_r_ARPROT;
output  [3:0] m_axi_input_r_ARQOS;
output  [3:0] m_axi_input_r_ARREGION;
output  [0:0] m_axi_input_r_ARUSER;
input   m_axi_input_r_RVALID;
output   m_axi_input_r_RREADY;
input  [31:0] m_axi_input_r_RDATA;
input   m_axi_input_r_RLAST;
input  [0:0] m_axi_input_r_RID;
input  [0:0] m_axi_input_r_RUSER;
input  [1:0] m_axi_input_r_RRESP;
input   m_axi_input_r_BVALID;
output   m_axi_input_r_BREADY;
input  [1:0] m_axi_input_r_BRESP;
input  [0:0] m_axi_input_r_BID;
input  [0:0] m_axi_input_r_BUSER;
input  [29:0] input_offset;
output  [7:0] weights_0_address0;
output   weights_0_ce0;
input  [31:0] weights_0_q0;
output  [7:0] weights_0_address1;
output   weights_0_ce1;
input  [31:0] weights_0_q1;
output  [2:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_input_r_ARVALID;
reg[31:0] m_axi_input_r_ARADDR;
reg m_axi_input_r_RREADY;
reg[7:0] weights_0_address0;
reg weights_0_ce0;
reg[7:0] weights_0_address1;
reg weights_0_ce1;
reg bias_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_r_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln9_reg_1980;
reg    input_r_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3;
reg   [0:0] icmp_ln9_reg_1980_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [12:0] indvar_flatten61_reg_697;
reg   [2:0] co_0_reg_708;
reg   [9:0] indvar_flatten_reg_719;
reg   [4:0] h_0_reg_731;
reg   [4:0] w_0_reg_743;
wire   [31:0] grp_fu_754_p2;
reg   [31:0] reg_767;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_state19_io;
wire    ap_block_state44_pp0_stage17_iter1;
wire    ap_block_state69_pp0_stage17_iter2;
wire    ap_block_state94_pp0_stage17_iter3;
wire    ap_block_state119_pp0_stage17_iter4;
wire    ap_block_state144_pp0_stage17_iter5;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state24_pp0_stage22_iter0;
reg    ap_block_state24_io;
wire    ap_block_state49_pp0_stage22_iter1;
wire    ap_block_state74_pp0_stage22_iter2;
wire    ap_block_state99_pp0_stage22_iter3;
wire    ap_block_state124_pp0_stage22_iter4;
reg    ap_block_pp0_stage22_11001;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state4_io;
reg    ap_block_state29_pp0_stage2_iter1;
wire    ap_block_state54_pp0_stage2_iter2;
wire    ap_block_state79_pp0_stage2_iter3;
wire    ap_block_state104_pp0_stage2_iter4;
wire    ap_block_state129_pp0_stage2_iter5;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state9_io;
reg    ap_block_state34_pp0_stage7_iter1;
wire    ap_block_state59_pp0_stage7_iter2;
wire    ap_block_state84_pp0_stage7_iter3;
wire    ap_block_state109_pp0_stage7_iter4;
wire    ap_block_state134_pp0_stage7_iter5;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] reg_772;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_state14_io;
wire    ap_block_state39_pp0_stage12_iter1;
wire    ap_block_state64_pp0_stage12_iter2;
wire    ap_block_state89_pp0_stage12_iter3;
wire    ap_block_state114_pp0_stage12_iter4;
wire    ap_block_state139_pp0_stage12_iter5;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state20_pp0_stage18_iter0;
reg    ap_block_state20_io;
wire    ap_block_state45_pp0_stage18_iter1;
wire    ap_block_state70_pp0_stage18_iter2;
wire    ap_block_state95_pp0_stage18_iter3;
wire    ap_block_state120_pp0_stage18_iter4;
wire    ap_block_state145_pp0_stage18_iter5;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_state25_io;
wire    ap_block_state50_pp0_stage23_iter1;
wire    ap_block_state75_pp0_stage23_iter2;
wire    ap_block_state100_pp0_stage23_iter3;
wire    ap_block_state125_pp0_stage23_iter4;
reg    ap_block_pp0_stage23_11001;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_state5_io;
reg    ap_block_state30_pp0_stage3_iter1;
wire    ap_block_state55_pp0_stage3_iter2;
wire    ap_block_state80_pp0_stage3_iter3;
wire    ap_block_state105_pp0_stage3_iter4;
wire    ap_block_state130_pp0_stage3_iter5;
reg    ap_block_pp0_stage3_11001;
reg   [0:0] icmp_ln9_reg_1980_pp0_iter2_reg;
reg   [31:0] reg_777;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state10_io;
wire    ap_block_state35_pp0_stage8_iter1;
wire    ap_block_state60_pp0_stage8_iter2;
wire    ap_block_state85_pp0_stage8_iter3;
wire    ap_block_state110_pp0_stage8_iter4;
wire    ap_block_state135_pp0_stage8_iter5;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_state15_io;
wire    ap_block_state40_pp0_stage13_iter1;
wire    ap_block_state65_pp0_stage13_iter2;
wire    ap_block_state90_pp0_stage13_iter3;
wire    ap_block_state115_pp0_stage13_iter4;
wire    ap_block_state140_pp0_stage13_iter5;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_block_state21_io;
wire    ap_block_state46_pp0_stage19_iter1;
wire    ap_block_state71_pp0_stage19_iter2;
wire    ap_block_state96_pp0_stage19_iter3;
wire    ap_block_state121_pp0_stage19_iter4;
wire    ap_block_state146_pp0_stage19_iter5;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state26_pp0_stage24_iter0;
reg    ap_block_state26_io;
wire    ap_block_state51_pp0_stage24_iter1;
wire    ap_block_state76_pp0_stage24_iter2;
wire    ap_block_state101_pp0_stage24_iter3;
wire    ap_block_state126_pp0_stage24_iter4;
reg    ap_block_pp0_stage24_11001;
reg   [31:0] reg_782;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state6_io;
reg    ap_block_state31_pp0_stage4_iter1;
wire    ap_block_state56_pp0_stage4_iter2;
wire    ap_block_state81_pp0_stage4_iter3;
wire    ap_block_state106_pp0_stage4_iter4;
wire    ap_block_state131_pp0_stage4_iter5;
reg    ap_block_pp0_stage4_11001;
reg   [0:0] icmp_ln9_reg_1980_pp0_iter3_reg;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
wire    ap_block_state36_pp0_stage9_iter1;
wire    ap_block_state61_pp0_stage9_iter2;
wire    ap_block_state86_pp0_stage9_iter3;
wire    ap_block_state111_pp0_stage9_iter4;
wire    ap_block_state136_pp0_stage9_iter5;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_state16_io;
wire    ap_block_state41_pp0_stage14_iter1;
wire    ap_block_state66_pp0_stage14_iter2;
wire    ap_block_state91_pp0_stage14_iter3;
wire    ap_block_state116_pp0_stage14_iter4;
wire    ap_block_state141_pp0_stage14_iter5;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state22_pp0_stage20_iter0;
reg    ap_block_state22_io;
wire    ap_block_state47_pp0_stage20_iter1;
wire    ap_block_state72_pp0_stage20_iter2;
wire    ap_block_state97_pp0_stage20_iter3;
wire    ap_block_state122_pp0_stage20_iter4;
reg    ap_block_pp0_stage20_11001;
reg   [31:0] reg_787;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state27_pp0_stage0_iter1;
reg    ap_block_state27_io;
wire    ap_block_state52_pp0_stage0_iter2;
wire    ap_block_state77_pp0_stage0_iter3;
wire    ap_block_state102_pp0_stage0_iter4;
wire    ap_block_state127_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state7_io;
reg    ap_block_state32_pp0_stage5_iter1;
wire    ap_block_state57_pp0_stage5_iter2;
wire    ap_block_state82_pp0_stage5_iter3;
wire    ap_block_state107_pp0_stage5_iter4;
wire    ap_block_state132_pp0_stage5_iter5;
reg    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln9_reg_1980_pp0_iter4_reg;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_state12_io;
wire    ap_block_state37_pp0_stage10_iter1;
wire    ap_block_state62_pp0_stage10_iter2;
wire    ap_block_state87_pp0_stage10_iter3;
wire    ap_block_state112_pp0_stage10_iter4;
wire    ap_block_state137_pp0_stage10_iter5;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_state17_io;
wire    ap_block_state42_pp0_stage15_iter1;
wire    ap_block_state67_pp0_stage15_iter2;
wire    ap_block_state92_pp0_stage15_iter3;
wire    ap_block_state117_pp0_stage15_iter4;
wire    ap_block_state142_pp0_stage15_iter5;
reg    ap_block_pp0_stage15_11001;
reg   [31:0] reg_792;
reg    ap_block_state23_pp0_stage21_iter0;
reg    ap_block_state23_io;
wire    ap_block_state48_pp0_stage21_iter1;
wire    ap_block_state73_pp0_stage21_iter2;
wire    ap_block_state98_pp0_stage21_iter3;
wire    ap_block_state123_pp0_stage21_iter4;
reg    ap_block_pp0_stage21_11001;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
reg    ap_block_state28_pp0_stage1_iter1;
wire    ap_block_state53_pp0_stage1_iter2;
wire    ap_block_state78_pp0_stage1_iter3;
wire    ap_block_state103_pp0_stage1_iter4;
wire    ap_block_state128_pp0_stage1_iter5;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln9_reg_1980_pp0_iter5_reg;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state8_io;
reg    ap_block_state33_pp0_stage6_iter1;
wire    ap_block_state58_pp0_stage6_iter2;
wire    ap_block_state83_pp0_stage6_iter3;
wire    ap_block_state108_pp0_stage6_iter4;
wire    ap_block_state133_pp0_stage6_iter5;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_state13_io;
wire    ap_block_state38_pp0_stage11_iter1;
wire    ap_block_state63_pp0_stage11_iter2;
wire    ap_block_state88_pp0_stage11_iter3;
wire    ap_block_state113_pp0_stage11_iter4;
wire    ap_block_state138_pp0_stage11_iter5;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_block_state18_io;
wire    ap_block_state43_pp0_stage16_iter1;
wire    ap_block_state68_pp0_stage16_iter2;
wire    ap_block_state93_pp0_stage16_iter3;
wire    ap_block_state118_pp0_stage16_iter4;
wire    ap_block_state143_pp0_stage16_iter5;
reg    ap_block_pp0_stage16_11001;
wire   [63:0] zext_ln18_fu_798_p1;
reg   [63:0] zext_ln18_reg_1951;
wire   [0:0] icmp_ln9_fu_802_p2;
wire   [12:0] add_ln9_fu_808_p2;
reg   [12:0] add_ln9_reg_1984;
wire   [0:0] icmp_ln10_fu_820_p2;
reg   [0:0] icmp_ln10_reg_1989;
wire   [4:0] select_ln15_fu_826_p3;
reg   [4:0] select_ln15_reg_1998;
wire   [2:0] select_ln15_1_fu_834_p3;
reg   [2:0] select_ln15_1_reg_2006;
wire   [8:0] mul_ln18_fu_851_p2;
reg   [8:0] mul_ln18_reg_2013;
wire   [7:0] trunc_ln18_fu_857_p1;
reg   [7:0] trunc_ln18_reg_2018;
wire   [0:0] and_ln15_fu_873_p2;
reg   [0:0] and_ln15_reg_2046;
wire   [4:0] select_ln22_fu_891_p3;
reg   [4:0] select_ln22_reg_2054;
wire   [4:0] select_ln22_1_fu_899_p3;
reg   [4:0] select_ln22_1_reg_2067;
reg   [31:0] input_addr_reg_2077;
reg   [31:0] bias_load_reg_2098;
wire   [4:0] w_fu_944_p2;
reg   [4:0] w_reg_2103;
reg   [31:0] input_addr_233_reg_2112;
reg   [31:0] weights_0_load_reg_2128;
reg   [31:0] weights_0_load_1_reg_2133;
wire   [4:0] add_ln17_1_fu_991_p2;
reg   [4:0] add_ln17_1_reg_2138;
reg   [31:0] input_addr_238_reg_2146;
reg   [31:0] weights_0_load_2_reg_2162;
wire   [4:0] add_ln17_5_fu_1038_p2;
reg   [4:0] add_ln17_5_reg_2167;
reg   [31:0] weights_0_load_3_reg_2175;
reg   [31:0] input_addr_243_reg_2180;
wire   [4:0] add_ln17_6_fu_1085_p2;
reg   [4:0] add_ln17_6_reg_2196;
reg   [31:0] weights_0_load_4_reg_2204;
reg   [31:0] input_addr_248_reg_2209;
reg   [31:0] weights_0_load_5_reg_2215;
wire   [4:0] select_ln22_2_fu_1150_p3;
reg   [4:0] select_ln22_2_reg_2230;
reg   [31:0] input_addr_229_reg_2238;
reg   [31:0] weights_0_load_6_reg_2244;
reg   [31:0] weights_0_load_7_reg_2249;
reg   [31:0] input_addr_234_reg_2264;
reg   [31:0] weights_0_load_8_reg_2270;
reg   [31:0] weights_0_load_9_reg_2275;
reg   [31:0] input_addr_239_reg_2290;
reg   [31:0] weights_0_load_10_reg_2296;
reg   [31:0] weights_0_load_11_reg_2301;
reg   [31:0] input_addr_read_reg_2316;
reg   [31:0] input_addr_244_reg_2321;
reg   [31:0] weights_0_load_12_reg_2327;
reg   [31:0] weights_0_load_13_reg_2332;
reg   [31:0] input_addr_233_read_reg_2347;
reg   [31:0] input_addr_249_reg_2352;
reg   [31:0] weights_0_load_14_reg_2358;
reg   [31:0] weights_0_load_15_reg_2363;
wire   [4:0] select_ln22_3_fu_1381_p3;
reg   [4:0] select_ln22_3_reg_2378;
reg   [31:0] input_addr_230_reg_2386;
reg   [31:0] input_addr_238_read_reg_2392;
reg   [31:0] weights_0_load_16_reg_2397;
reg   [31:0] weights_0_load_17_reg_2402;
reg   [31:0] input_addr_235_reg_2417;
reg   [31:0] input_addr_243_read_reg_2423;
reg   [31:0] weights_0_load_18_reg_2428;
reg   [31:0] weights_0_load_19_reg_2433;
wire   [31:0] grp_fu_758_p2;
reg   [31:0] tmp2_reg_2448;
reg   [31:0] input_addr_240_reg_2453;
reg   [31:0] input_addr_248_read_reg_2459;
reg   [31:0] weights_0_load_20_reg_2464;
reg   [31:0] weights_0_load_21_reg_2469;
reg   [31:0] tmp_0_1_reg_2479;
reg   [31:0] input_addr_245_reg_2484;
reg   [31:0] input_addr_229_read_reg_2490;
reg   [31:0] weights_0_load_22_reg_2495;
reg   [31:0] weights_0_load_23_reg_2500;
reg   [31:0] tmp_0_2_reg_2505;
reg   [31:0] input_addr_250_reg_2510;
reg   [31:0] input_addr_234_read_reg_2516;
reg   [31:0] weights_0_load_24_reg_2521;
wire   [4:0] select_ln22_4_fu_1562_p3;
reg   [4:0] select_ln22_4_reg_2526;
wire   [4:0] add_ln17_11_fu_1569_p2;
reg   [4:0] add_ln17_11_reg_2534;
reg   [31:0] input_addr_231_reg_2539;
reg   [31:0] tmp_0_3_reg_2545;
reg   [31:0] input_addr_239_read_reg_2550;
wire   [9:0] add_ln10_fu_1597_p2;
reg   [9:0] add_ln10_reg_2555;
reg   [31:0] input_addr_236_reg_2560;
reg   [31:0] tmp_0_4_reg_2566;
reg   [31:0] input_addr_244_read_reg_2571;
reg   [31:0] input_addr_241_reg_2576;
reg   [31:0] tmp_1_reg_2582;
reg   [31:0] input_addr_249_read_reg_2587;
reg   [31:0] input_addr_246_reg_2592;
reg   [31:0] tmp_1_1_reg_2598;
reg   [31:0] tmp_1_1_reg_2598_pp0_iter1_reg;
reg   [31:0] input_addr_230_read_reg_2603;
reg   [31:0] input_addr_251_reg_2608;
reg   [31:0] tmp_1_2_reg_2614;
reg   [31:0] tmp_1_2_reg_2614_pp0_iter1_reg;
reg   [31:0] input_addr_235_read_reg_2619;
wire   [4:0] select_ln22_5_fu_1698_p3;
reg   [4:0] select_ln22_5_reg_2624;
reg   [31:0] input_addr_232_reg_2632;
reg   [31:0] tmp_1_3_reg_2638;
reg   [31:0] tmp_1_3_reg_2638_pp0_iter1_reg;
reg   [31:0] input_addr_240_read_reg_2643;
reg   [31:0] input_addr_237_reg_2648;
reg   [31:0] tmp_1_4_reg_2654;
reg   [31:0] tmp_1_4_reg_2654_pp0_iter1_reg;
reg   [31:0] input_addr_245_read_reg_2659;
reg   [31:0] input_addr_242_reg_2664;
reg   [31:0] tmp_2_reg_2670;
reg   [31:0] tmp_2_reg_2670_pp0_iter1_reg;
reg   [31:0] input_addr_250_read_reg_2675;
reg   [31:0] input_addr_247_reg_2680;
reg   [31:0] tmp_2_1_reg_2686;
reg   [31:0] tmp_2_1_reg_2686_pp0_iter1_reg;
reg   [31:0] input_addr_231_read_reg_2691;
wire   [13:0] add_ln22_1_fu_1864_p2;
reg   [13:0] add_ln22_1_reg_2696;
reg   [13:0] add_ln22_1_reg_2696_pp0_iter1_reg;
reg   [13:0] add_ln22_1_reg_2696_pp0_iter2_reg;
reg   [13:0] add_ln22_1_reg_2696_pp0_iter3_reg;
reg   [13:0] add_ln22_1_reg_2696_pp0_iter4_reg;
reg   [31:0] input_addr_252_reg_2701;
reg   [31:0] tmp_2_2_reg_2707;
reg   [31:0] tmp_2_2_reg_2707_pp0_iter1_reg;
reg   [31:0] tmp_2_2_reg_2707_pp0_iter2_reg;
reg   [31:0] input_addr_236_read_reg_2712;
wire   [9:0] select_ln10_fu_1891_p3;
reg   [9:0] select_ln10_reg_2717;
reg   [31:0] tmp_2_3_reg_2722;
reg   [31:0] tmp_2_3_reg_2722_pp0_iter2_reg;
reg   [31:0] tmp_2_3_reg_2722_pp0_iter3_reg;
reg   [31:0] input_addr_241_read_reg_2727;
reg   [31:0] tmp_2_4_reg_2732;
reg   [31:0] tmp_2_4_reg_2732_pp0_iter2_reg;
reg   [31:0] tmp_2_4_reg_2732_pp0_iter3_reg;
reg   [31:0] input_addr_246_read_reg_2737;
reg   [31:0] tmp_3_reg_2742;
reg   [31:0] tmp_3_reg_2742_pp0_iter2_reg;
reg   [31:0] tmp_3_reg_2742_pp0_iter3_reg;
reg   [31:0] input_addr_251_read_reg_2747;
reg   [31:0] tmp_3_1_reg_2752;
reg   [31:0] tmp_3_1_reg_2752_pp0_iter2_reg;
reg   [31:0] tmp_3_1_reg_2752_pp0_iter3_reg;
reg   [31:0] input_addr_232_read_reg_2757;
reg   [31:0] tmp_3_2_reg_2762;
reg   [31:0] tmp_3_2_reg_2762_pp0_iter2_reg;
reg   [31:0] tmp_3_2_reg_2762_pp0_iter3_reg;
reg   [31:0] input_addr_237_read_reg_2767;
reg   [31:0] tmp_3_3_reg_2772;
reg   [31:0] tmp_3_3_reg_2772_pp0_iter2_reg;
reg   [31:0] tmp_3_3_reg_2772_pp0_iter3_reg;
reg   [31:0] tmp_3_3_reg_2772_pp0_iter4_reg;
reg   [31:0] input_addr_242_read_reg_2777;
reg   [31:0] tmp_3_4_reg_2782;
reg   [31:0] tmp_3_4_reg_2782_pp0_iter2_reg;
reg   [31:0] tmp_3_4_reg_2782_pp0_iter3_reg;
reg   [31:0] tmp_3_4_reg_2782_pp0_iter4_reg;
reg   [31:0] input_addr_247_read_reg_2787;
reg   [31:0] tmp_4_reg_2792;
reg   [31:0] tmp_4_reg_2792_pp0_iter2_reg;
reg   [31:0] tmp_4_reg_2792_pp0_iter3_reg;
reg   [31:0] tmp_4_reg_2792_pp0_iter4_reg;
reg   [31:0] input_addr_252_read_reg_2797;
reg   [31:0] tmp_4_1_reg_2802;
reg   [31:0] tmp_4_1_reg_2802_pp0_iter2_reg;
reg   [31:0] tmp_4_1_reg_2802_pp0_iter3_reg;
reg   [31:0] tmp_4_1_reg_2802_pp0_iter4_reg;
reg   [31:0] tmp_4_2_reg_2807;
reg   [31:0] tmp_4_2_reg_2807_pp0_iter2_reg;
reg   [31:0] tmp_4_2_reg_2807_pp0_iter3_reg;
reg   [31:0] tmp_4_2_reg_2807_pp0_iter4_reg;
reg   [31:0] tmp_4_3_reg_2812;
reg   [31:0] tmp_4_3_reg_2812_pp0_iter2_reg;
reg   [31:0] tmp_4_3_reg_2812_pp0_iter3_reg;
reg   [31:0] tmp_4_3_reg_2812_pp0_iter4_reg;
reg   [31:0] tmp_4_4_reg_2817;
reg   [31:0] tmp_4_4_reg_2817_pp0_iter2_reg;
reg   [31:0] tmp_4_4_reg_2817_pp0_iter3_reg;
reg   [31:0] tmp_4_4_reg_2817_pp0_iter4_reg;
reg   [31:0] tmp_4_4_reg_2817_pp0_iter5_reg;
wire   [31:0] select_ln5_fu_1939_p3;
reg   [31:0] select_ln5_reg_2822;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage19_subdone;
reg   [12:0] ap_phi_mux_indvar_flatten61_phi_fu_701_p4;
reg   [2:0] ap_phi_mux_co_0_phi_fu_712_p4;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_723_p4;
reg   [4:0] ap_phi_mux_h_0_phi_fu_735_p4;
reg   [4:0] ap_phi_mux_w_0_phi_fu_747_p4;
wire   [63:0] zext_ln15_fu_842_p1;
wire   [63:0] zext_ln18_2_fu_930_p1;
wire   [63:0] zext_ln18_3_fu_939_p1;
wire   [63:0] zext_ln18_4_fu_976_p1;
wire   [63:0] zext_ln18_5_fu_986_p1;
wire   [63:0] zext_ln18_6_fu_1023_p1;
wire   [63:0] zext_ln18_7_fu_1033_p1;
wire   [63:0] zext_ln18_8_fu_1070_p1;
wire   [63:0] zext_ln18_9_fu_1080_p1;
wire   [63:0] zext_ln18_10_fu_1117_p1;
wire   [63:0] zext_ln18_11_fu_1127_p1;
wire   [63:0] zext_ln18_12_fu_1184_p1;
wire   [63:0] zext_ln18_13_fu_1194_p1;
wire   [63:0] zext_ln18_14_fu_1225_p1;
wire   [63:0] zext_ln18_15_fu_1235_p1;
wire   [63:0] zext_ln18_16_fu_1266_p1;
wire   [63:0] zext_ln18_17_fu_1276_p1;
wire   [63:0] zext_ln18_18_fu_1307_p1;
wire   [63:0] zext_ln18_19_fu_1317_p1;
wire   [63:0] zext_ln18_20_fu_1348_p1;
wire   [63:0] zext_ln18_21_fu_1358_p1;
wire   [63:0] zext_ln18_22_fu_1415_p1;
wire   [63:0] zext_ln18_23_fu_1425_p1;
wire   [63:0] zext_ln18_24_fu_1456_p1;
wire   [63:0] zext_ln18_25_fu_1466_p1;
wire   [63:0] zext_ln18_26_fu_1497_p1;
wire   [63:0] zext_ln22_3_fu_1947_p1;
wire   [63:0] add_ln18_24_fu_919_p2;
wire   [63:0] add_ln18_29_fu_960_p2;
wire   [63:0] add_ln18_34_fu_1007_p2;
wire   [63:0] add_ln18_39_fu_1054_p2;
wire   [63:0] add_ln18_44_fu_1101_p2;
wire   [63:0] add_ln18_25_fu_1168_p2;
wire   [63:0] add_ln18_30_fu_1209_p2;
wire   [63:0] add_ln18_35_fu_1250_p2;
wire   [63:0] add_ln18_40_fu_1291_p2;
wire   [63:0] add_ln18_45_fu_1332_p2;
wire   [63:0] add_ln18_26_fu_1399_p2;
wire   [63:0] add_ln18_31_fu_1440_p2;
wire   [63:0] add_ln18_36_fu_1481_p2;
wire   [63:0] add_ln18_41_fu_1512_p2;
wire   [63:0] add_ln18_46_fu_1533_p2;
wire   [63:0] add_ln18_27_fu_1586_p2;
wire   [63:0] add_ln18_32_fu_1613_p2;
wire   [63:0] add_ln18_37_fu_1634_p2;
wire   [63:0] add_ln18_42_fu_1655_p2;
wire   [63:0] add_ln18_47_fu_1676_p2;
wire   [63:0] add_ln18_28_fu_1716_p2;
wire   [63:0] add_ln18_33_fu_1737_p2;
wire   [63:0] add_ln18_38_fu_1758_p2;
wire   [63:0] add_ln18_43_fu_1779_p2;
wire   [63:0] add_ln18_48_fu_1880_p2;
reg   [31:0] grp_fu_754_p0;
reg   [31:0] grp_fu_754_p1;
reg   [31:0] grp_fu_758_p0;
reg   [31:0] grp_fu_758_p1;
wire   [2:0] co_fu_814_p2;
wire   [2:0] mul_ln18_fu_851_p1;
wire   [0:0] icmp_ln11_fu_867_p2;
wire   [0:0] xor_ln15_fu_861_p2;
wire   [0:0] or_ln22_fu_885_p2;
wire   [4:0] add_ln17_fu_879_p2;
wire   [9:0] tmp_41_fu_907_p3;
wire   [63:0] zext_ln18_28_fu_915_p1;
wire   [7:0] add_ln18_fu_934_p2;
wire   [9:0] tmp_46_fu_949_p3;
wire   [63:0] zext_ln18_33_fu_956_p1;
wire   [7:0] add_ln18_1_fu_971_p2;
wire   [7:0] add_ln18_2_fu_981_p2;
wire   [9:0] tmp_51_fu_996_p3;
wire   [63:0] zext_ln18_38_fu_1003_p1;
wire   [7:0] add_ln18_3_fu_1018_p2;
wire   [7:0] add_ln18_4_fu_1028_p2;
wire   [9:0] tmp_56_fu_1043_p3;
wire   [63:0] zext_ln18_43_fu_1050_p1;
wire   [7:0] add_ln18_5_fu_1065_p2;
wire   [7:0] add_ln18_6_fu_1075_p2;
wire   [9:0] tmp_61_fu_1090_p3;
wire   [63:0] zext_ln18_48_fu_1097_p1;
wire   [7:0] add_ln18_7_fu_1112_p2;
wire   [7:0] add_ln18_8_fu_1122_p2;
wire   [4:0] add_ln17_3_fu_1137_p2;
wire   [4:0] add_ln17_2_fu_1132_p2;
wire   [4:0] select_ln15_2_fu_1143_p3;
wire   [9:0] tmp_42_fu_1157_p3;
wire   [63:0] zext_ln18_29_fu_1164_p1;
wire   [7:0] add_ln18_9_fu_1179_p2;
wire   [7:0] add_ln18_10_fu_1189_p2;
wire   [9:0] tmp_47_fu_1199_p3;
wire   [63:0] zext_ln18_34_fu_1205_p1;
wire   [7:0] add_ln18_11_fu_1220_p2;
wire   [7:0] add_ln18_12_fu_1230_p2;
wire   [9:0] tmp_52_fu_1240_p3;
wire   [63:0] zext_ln18_39_fu_1246_p1;
wire   [7:0] add_ln18_13_fu_1261_p2;
wire   [7:0] add_ln18_14_fu_1271_p2;
wire   [9:0] tmp_57_fu_1281_p3;
wire   [63:0] zext_ln18_44_fu_1287_p1;
wire   [7:0] add_ln18_15_fu_1302_p2;
wire   [7:0] add_ln18_16_fu_1312_p2;
wire   [9:0] tmp_62_fu_1322_p3;
wire   [63:0] zext_ln18_49_fu_1328_p1;
wire   [7:0] add_ln18_17_fu_1343_p2;
wire   [7:0] add_ln18_18_fu_1353_p2;
wire   [4:0] add_ln17_7_fu_1368_p2;
wire   [4:0] add_ln17_4_fu_1363_p2;
wire   [4:0] select_ln15_3_fu_1374_p3;
wire   [9:0] tmp_43_fu_1388_p3;
wire   [63:0] zext_ln18_30_fu_1395_p1;
wire   [7:0] add_ln18_19_fu_1410_p2;
wire   [7:0] add_ln18_20_fu_1420_p2;
wire   [9:0] tmp_48_fu_1430_p3;
wire   [63:0] zext_ln18_35_fu_1436_p1;
wire   [7:0] add_ln18_21_fu_1451_p2;
wire   [7:0] add_ln18_22_fu_1461_p2;
wire   [9:0] tmp_53_fu_1471_p3;
wire   [63:0] zext_ln18_40_fu_1477_p1;
wire   [7:0] add_ln18_23_fu_1492_p2;
wire   [9:0] tmp_58_fu_1502_p3;
wire   [63:0] zext_ln18_45_fu_1508_p1;
wire   [9:0] tmp_63_fu_1523_p3;
wire   [63:0] zext_ln18_50_fu_1529_p1;
wire   [4:0] add_ln17_9_fu_1549_p2;
wire   [4:0] add_ln17_8_fu_1544_p2;
wire   [4:0] select_ln15_4_fu_1555_p3;
wire   [9:0] tmp_44_fu_1575_p3;
wire   [63:0] zext_ln18_31_fu_1582_p1;
wire   [9:0] tmp_49_fu_1603_p3;
wire   [63:0] zext_ln18_36_fu_1609_p1;
wire   [9:0] tmp_54_fu_1624_p3;
wire   [63:0] zext_ln18_41_fu_1630_p1;
wire   [9:0] tmp_59_fu_1645_p3;
wire   [63:0] zext_ln18_46_fu_1651_p1;
wire   [9:0] tmp_64_fu_1666_p3;
wire   [63:0] zext_ln18_51_fu_1672_p1;
wire   [4:0] add_ln17_10_fu_1687_p2;
wire   [4:0] select_ln15_5_fu_1692_p3;
wire   [9:0] tmp_45_fu_1705_p3;
wire   [63:0] zext_ln18_32_fu_1712_p1;
wire   [9:0] tmp_50_fu_1727_p3;
wire   [63:0] zext_ln18_37_fu_1733_p1;
wire   [9:0] tmp_55_fu_1748_p3;
wire   [63:0] zext_ln18_42_fu_1754_p1;
wire   [9:0] tmp_60_fu_1769_p3;
wire   [63:0] zext_ln18_47_fu_1775_p1;
wire   [7:0] tmp_27_fu_1790_p3;
wire   [4:0] tmp_28_fu_1801_p3;
wire   [8:0] zext_ln22_fu_1797_p1;
wire   [8:0] zext_ln22_1_fu_1808_p1;
wire   [8:0] sub_ln22_fu_1812_p2;
wire  signed [9:0] sext_ln22_fu_1818_p1;
wire   [9:0] zext_ln22_2_fu_1822_p1;
wire   [9:0] add_ln22_fu_1825_p2;
wire   [8:0] trunc_ln22_fu_1831_p1;
wire   [11:0] tmp_40_fu_1843_p3;
wire   [13:0] p_shl_cast_fu_1835_p3;
wire  signed [13:0] sext_ln22_1_fu_1851_p1;
wire   [13:0] sub_ln22_1_fu_1855_p2;
wire   [13:0] zext_ln18_27_fu_1861_p1;
wire   [9:0] tmp_65_fu_1870_p3;
wire   [63:0] zext_ln18_52_fu_1876_p1;
wire   [31:0] bitcast_ln5_fu_1897_p1;
wire   [7:0] tmp_s_fu_1901_p4;
wire   [22:0] trunc_ln5_fu_1911_p1;
wire   [0:0] icmp_ln5_5_fu_1921_p2;
wire   [0:0] icmp_ln5_fu_1915_p2;
wire   [0:0] or_ln5_fu_1927_p2;
wire   [0:0] grp_fu_762_p2;
wire   [0:0] and_ln5_fu_1933_p2;
reg    grp_fu_754_ce;
reg    grp_fu_758_ce;
reg    grp_fu_762_ce;
reg    ap_block_pp0_stage17_00001;
wire    ap_CS_fsm_state147;
reg   [26:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] mul_ln18_fu_851_p10;
reg    ap_condition_972;
reg    ap_condition_983;
reg    ap_condition_997;
reg    ap_condition_1013;
reg    ap_condition_1029;
reg    ap_condition_1041;
reg    ap_condition_1053;
reg    ap_condition_1067;
reg    ap_condition_1081;
reg    ap_condition_1097;
reg    ap_condition_1111;
reg    ap_condition_1122;
reg    ap_condition_1135;
reg    ap_condition_1144;
reg    ap_condition_1167;
reg    ap_condition_1179;
reg    ap_condition_509;
reg    ap_condition_1197;
reg    ap_condition_1208;
reg    ap_condition_1221;
reg    ap_condition_1232;
reg    ap_condition_523;
reg    ap_condition_1252;
reg    ap_condition_1271;
reg    ap_condition_1281;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

lenet_cnn_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_cnn_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_754_p0),
    .din1(grp_fu_754_p1),
    .ce(grp_fu_754_ce),
    .dout(grp_fu_754_p2)
);

lenet_cnn_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_cnn_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_758_p0),
    .din1(grp_fu_758_p1),
    .ce(grp_fu_758_ce),
    .dout(grp_fu_758_p2)
);

lenet_cnn_fcmp_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
lenet_cnn_fcmp_32dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_792),
    .din1(32'd0),
    .ce(grp_fu_762_ce),
    .opcode(5'd2),
    .dout(grp_fu_762_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        co_0_reg_708 <= select_ln15_1_reg_2006;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        co_0_reg_708 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        h_0_reg_731 <= select_ln22_1_reg_2067;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_731 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten61_reg_697 <= add_ln9_reg_1984;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten61_reg_697 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_719 <= select_ln10_reg_2717;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_719 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        w_0_reg_743 <= w_reg_2103;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_743 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1989 == 1'd0) & (icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln10_reg_2555 <= add_ln10_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln15_reg_2046) & (icmp_ln10_reg_1989 == 1'd0) & (icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln17_11_reg_2534 <= add_ln17_11_fu_1569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln17_1_reg_2138 <= add_ln17_1_fu_991_p2;
        input_addr_238_reg_2146 <= add_ln18_34_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln17_5_reg_2167 <= add_ln17_5_fu_1038_p2;
        input_addr_243_reg_2180 <= add_ln18_39_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln17_6_reg_2196 <= add_ln17_6_fu_1085_p2;
        input_addr_248_reg_2209 <= add_ln18_44_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        add_ln22_1_reg_2696 <= add_ln22_1_fu_1864_p2;
        input_addr_236_read_reg_2712 <= m_axi_input_r_RDATA;
        input_addr_252_reg_2701 <= add_ln18_48_fu_1880_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        add_ln22_1_reg_2696_pp0_iter1_reg <= add_ln22_1_reg_2696;
        add_ln22_1_reg_2696_pp0_iter2_reg <= add_ln22_1_reg_2696_pp0_iter1_reg;
        add_ln22_1_reg_2696_pp0_iter3_reg <= add_ln22_1_reg_2696_pp0_iter2_reg;
        add_ln22_1_reg_2696_pp0_iter4_reg <= add_ln22_1_reg_2696_pp0_iter3_reg;
        tmp_2_2_reg_2707_pp0_iter1_reg <= tmp_2_2_reg_2707;
        tmp_2_2_reg_2707_pp0_iter2_reg <= tmp_2_2_reg_2707_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln9_reg_1984 <= add_ln9_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_802_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln15_reg_2046 <= and_ln15_fu_873_p2;
        icmp_ln10_reg_1989 <= icmp_ln10_fu_820_p2;
        input_addr_reg_2077 <= add_ln18_24_fu_919_p2;
        mul_ln18_reg_2013 <= mul_ln18_fu_851_p2;
        select_ln15_reg_1998 <= select_ln15_fu_826_p3;
        select_ln22_reg_2054 <= select_ln22_fu_891_p3;
        trunc_ln18_reg_2018 <= trunc_ln18_fu_857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias_load_reg_2098 <= bias_q0;
        input_addr_233_reg_2112 <= add_ln18_29_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln9_reg_1980 <= icmp_ln9_fu_802_p2;
        icmp_ln9_reg_1980_pp0_iter1_reg <= icmp_ln9_reg_1980;
        icmp_ln9_reg_1980_pp0_iter2_reg <= icmp_ln9_reg_1980_pp0_iter1_reg;
        icmp_ln9_reg_1980_pp0_iter3_reg <= icmp_ln9_reg_1980_pp0_iter2_reg;
        icmp_ln9_reg_1980_pp0_iter4_reg <= icmp_ln9_reg_1980_pp0_iter3_reg;
        icmp_ln9_reg_1980_pp0_iter5_reg <= icmp_ln9_reg_1980_pp0_iter4_reg;
        tmp_2_3_reg_2722_pp0_iter2_reg <= tmp_2_3_reg_2722;
        tmp_2_3_reg_2722_pp0_iter3_reg <= tmp_2_3_reg_2722_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_addr_229_read_reg_2490 <= m_axi_input_r_RDATA;
        input_addr_245_reg_2484 <= add_ln18_41_fu_1512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_addr_229_reg_2238 <= add_ln18_25_fu_1168_p2;
        select_ln22_2_reg_2230 <= select_ln22_2_fu_1150_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        input_addr_230_read_reg_2603 <= m_axi_input_r_RDATA;
        input_addr_246_reg_2592 <= add_ln18_42_fu_1655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_addr_230_reg_2386 <= add_ln18_26_fu_1399_p2;
        input_addr_238_read_reg_2392 <= m_axi_input_r_RDATA;
        select_ln22_3_reg_2378 <= select_ln22_3_fu_1381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        input_addr_231_read_reg_2691 <= m_axi_input_r_RDATA;
        input_addr_247_reg_2680 <= add_ln18_43_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        input_addr_231_reg_2539 <= add_ln18_27_fu_1586_p2;
        input_addr_239_read_reg_2550 <= m_axi_input_r_RDATA;
        select_ln22_4_reg_2526 <= select_ln22_4_fu_1562_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_addr_232_read_reg_2757 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        input_addr_232_reg_2632 <= add_ln18_28_fu_1716_p2;
        input_addr_240_read_reg_2643 <= m_axi_input_r_RDATA;
        select_ln22_5_reg_2624 <= select_ln22_5_fu_1698_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_addr_233_read_reg_2347 <= m_axi_input_r_RDATA;
        input_addr_249_reg_2352 <= add_ln18_45_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        input_addr_234_read_reg_2516 <= m_axi_input_r_RDATA;
        input_addr_250_reg_2510 <= add_ln18_46_fu_1533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_addr_234_reg_2264 <= add_ln18_30_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        input_addr_235_read_reg_2619 <= m_axi_input_r_RDATA;
        input_addr_251_reg_2608 <= add_ln18_47_fu_1676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_addr_235_reg_2417 <= add_ln18_31_fu_1440_p2;
        input_addr_243_read_reg_2423 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        input_addr_236_reg_2560 <= add_ln18_32_fu_1613_p2;
        input_addr_244_read_reg_2571 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_addr_237_read_reg_2767 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        input_addr_237_reg_2648 <= add_ln18_33_fu_1737_p2;
        input_addr_245_read_reg_2659 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_addr_239_reg_2290 <= add_ln18_35_fu_1250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_addr_240_reg_2453 <= add_ln18_36_fu_1481_p2;
        input_addr_248_read_reg_2459 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_addr_241_read_reg_2727 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        input_addr_241_reg_2576 <= add_ln18_37_fu_1634_p2;
        input_addr_249_read_reg_2587 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_addr_242_read_reg_2777 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        input_addr_242_reg_2664 <= add_ln18_38_fu_1758_p2;
        input_addr_250_read_reg_2675 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_addr_244_reg_2321 <= add_ln18_40_fu_1291_p2;
        input_addr_read_reg_2316 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_addr_246_read_reg_2737 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_addr_247_read_reg_2787 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_addr_251_read_reg_2747 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_addr_252_read_reg_2797 <= m_axi_input_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_767 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        reg_772 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln9_reg_1980_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln9_reg_1980_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln9_reg_1980_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_777 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln9_reg_1980_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln9_reg_1980_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln9_reg_1980_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_782 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln9_reg_1980_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln9_reg_1980_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln9_reg_1980_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_787 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_reg_1980_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_792 <= grp_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln10_reg_2717 <= select_ln10_fu_1891_p3;
        tmp_2_2_reg_2707 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_802_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln15_1_reg_2006 <= select_ln15_1_fu_834_p3;
        select_ln22_1_reg_2067 <= select_ln22_1_fu_899_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        select_ln5_reg_2822 <= select_ln5_fu_1939_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp2_reg_2448 <= grp_fu_758_p2;
        weights_0_load_20_reg_2464 <= weights_0_q0;
        weights_0_load_21_reg_2469 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_0_1_reg_2479 <= grp_fu_758_p2;
        weights_0_load_22_reg_2495 <= weights_0_q0;
        weights_0_load_23_reg_2500 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_0_2_reg_2505 <= grp_fu_758_p2;
        weights_0_load_24_reg_2521 <= weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_0_3_reg_2545 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_0_4_reg_2566 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_1_reg_2598 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_1_1_reg_2598_pp0_iter1_reg <= tmp_1_1_reg_2598;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_2_reg_2614 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        tmp_1_2_reg_2614_pp0_iter1_reg <= tmp_1_2_reg_2614;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_3_reg_2638 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp_1_3_reg_2638_pp0_iter1_reg <= tmp_1_3_reg_2638;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_4_reg_2654 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp_1_4_reg_2654_pp0_iter1_reg <= tmp_1_4_reg_2654;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_reg_2582 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_2_1_reg_2686 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp_2_1_reg_2686_pp0_iter1_reg <= tmp_2_1_reg_2686;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_2_3_reg_2722 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_2_4_reg_2732 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_2_4_reg_2732_pp0_iter2_reg <= tmp_2_4_reg_2732;
        tmp_2_4_reg_2732_pp0_iter3_reg <= tmp_2_4_reg_2732_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_2_reg_2670 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_2_reg_2670_pp0_iter1_reg <= tmp_2_reg_2670;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_3_1_reg_2752 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_3_1_reg_2752_pp0_iter2_reg <= tmp_3_1_reg_2752;
        tmp_3_1_reg_2752_pp0_iter3_reg <= tmp_3_1_reg_2752_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_3_2_reg_2762 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_3_2_reg_2762_pp0_iter2_reg <= tmp_3_2_reg_2762;
        tmp_3_2_reg_2762_pp0_iter3_reg <= tmp_3_2_reg_2762_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_3_3_reg_2772 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_3_3_reg_2772_pp0_iter2_reg <= tmp_3_3_reg_2772;
        tmp_3_3_reg_2772_pp0_iter3_reg <= tmp_3_3_reg_2772_pp0_iter2_reg;
        tmp_3_3_reg_2772_pp0_iter4_reg <= tmp_3_3_reg_2772_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_3_4_reg_2782 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_3_4_reg_2782_pp0_iter2_reg <= tmp_3_4_reg_2782;
        tmp_3_4_reg_2782_pp0_iter3_reg <= tmp_3_4_reg_2782_pp0_iter2_reg;
        tmp_3_4_reg_2782_pp0_iter4_reg <= tmp_3_4_reg_2782_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_3_reg_2742 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_3_reg_2742_pp0_iter2_reg <= tmp_3_reg_2742;
        tmp_3_reg_2742_pp0_iter3_reg <= tmp_3_reg_2742_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_4_1_reg_2802 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_4_1_reg_2802_pp0_iter2_reg <= tmp_4_1_reg_2802;
        tmp_4_1_reg_2802_pp0_iter3_reg <= tmp_4_1_reg_2802_pp0_iter2_reg;
        tmp_4_1_reg_2802_pp0_iter4_reg <= tmp_4_1_reg_2802_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_4_2_reg_2807 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_4_2_reg_2807_pp0_iter2_reg <= tmp_4_2_reg_2807;
        tmp_4_2_reg_2807_pp0_iter3_reg <= tmp_4_2_reg_2807_pp0_iter2_reg;
        tmp_4_2_reg_2807_pp0_iter4_reg <= tmp_4_2_reg_2807_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_4_3_reg_2812 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_4_3_reg_2812_pp0_iter2_reg <= tmp_4_3_reg_2812;
        tmp_4_3_reg_2812_pp0_iter3_reg <= tmp_4_3_reg_2812_pp0_iter2_reg;
        tmp_4_3_reg_2812_pp0_iter4_reg <= tmp_4_3_reg_2812_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_4_4_reg_2817 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_4_4_reg_2817_pp0_iter2_reg <= tmp_4_4_reg_2817;
        tmp_4_4_reg_2817_pp0_iter3_reg <= tmp_4_4_reg_2817_pp0_iter2_reg;
        tmp_4_4_reg_2817_pp0_iter4_reg <= tmp_4_4_reg_2817_pp0_iter3_reg;
        tmp_4_4_reg_2817_pp0_iter5_reg <= tmp_4_4_reg_2817_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_4_reg_2792 <= grp_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_4_reg_2792_pp0_iter2_reg <= tmp_4_reg_2792;
        tmp_4_reg_2792_pp0_iter3_reg <= tmp_4_reg_2792_pp0_iter2_reg;
        tmp_4_reg_2792_pp0_iter4_reg <= tmp_4_reg_2792_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_reg_2103 <= w_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_10_reg_2296 <= weights_0_q0;
        weights_0_load_11_reg_2301 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_12_reg_2327 <= weights_0_q0;
        weights_0_load_13_reg_2332 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_14_reg_2358 <= weights_0_q0;
        weights_0_load_15_reg_2363 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_16_reg_2397 <= weights_0_q0;
        weights_0_load_17_reg_2402 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_18_reg_2428 <= weights_0_q0;
        weights_0_load_19_reg_2433 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_1_reg_2133 <= weights_0_q1;
        weights_0_load_reg_2128 <= weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_2_reg_2162 <= weights_0_q0;
        weights_0_load_3_reg_2175 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_4_reg_2204 <= weights_0_q0;
        weights_0_load_5_reg_2215 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_6_reg_2244 <= weights_0_q0;
        weights_0_load_7_reg_2249 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_load_8_reg_2270 <= weights_0_q0;
        weights_0_load_9_reg_2275 <= weights_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln18_reg_1951[29 : 0] <= zext_ln18_fu_798_p1[29 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_802_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state147) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_co_0_phi_fu_712_p4 = select_ln15_1_reg_2006;
    end else begin
        ap_phi_mux_co_0_phi_fu_712_p4 = co_0_reg_708;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_h_0_phi_fu_735_p4 = select_ln22_1_reg_2067;
    end else begin
        ap_phi_mux_h_0_phi_fu_735_p4 = h_0_reg_731;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten61_phi_fu_701_p4 = add_ln9_reg_1984;
    end else begin
        ap_phi_mux_indvar_flatten61_phi_fu_701_p4 = indvar_flatten61_reg_697;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_723_p4 = select_ln10_reg_2717;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_723_p4 = indvar_flatten_reg_719;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_w_0_phi_fu_747_p4 = w_reg_2103;
    end else begin
        ap_phi_mux_w_0_phi_fu_747_p4 = w_0_reg_743;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_754_ce = 1'b1;
    end else begin
        grp_fu_754_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_754_p0 = reg_792;
    end else if ((((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_754_p0 = reg_787;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)))) begin
        grp_fu_754_p0 = reg_782;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_754_p0 = reg_777;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_754_p0 = reg_772;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_754_p0 = reg_767;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_754_p0 = bias_load_reg_2098;
    end else begin
        grp_fu_754_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_754_p1 = tmp_4_4_reg_2817_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_754_p1 = tmp_4_3_reg_2812_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_754_p1 = tmp_4_2_reg_2807_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_754_p1 = tmp_4_1_reg_2802_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_754_p1 = tmp_4_reg_2792_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_754_p1 = tmp_3_4_reg_2782_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_754_p1 = tmp_3_3_reg_2772_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_754_p1 = tmp_3_2_reg_2762_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_754_p1 = tmp_3_1_reg_2752_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_754_p1 = tmp_3_reg_2742_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_754_p1 = tmp_2_4_reg_2732_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_754_p1 = tmp_2_3_reg_2722_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_754_p1 = tmp_2_2_reg_2707_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_754_p1 = tmp_2_1_reg_2686_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_754_p1 = tmp_2_reg_2670_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_754_p1 = tmp_1_4_reg_2654_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_754_p1 = tmp_1_3_reg_2638_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_754_p1 = tmp_1_2_reg_2614_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_754_p1 = tmp_1_1_reg_2598_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_754_p1 = tmp_1_reg_2582;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_754_p1 = tmp_0_4_reg_2566;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_754_p1 = tmp_0_3_reg_2545;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_754_p1 = tmp_0_2_reg_2505;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_754_p1 = tmp_0_1_reg_2479;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_754_p1 = tmp2_reg_2448;
    end else begin
        grp_fu_754_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_758_ce = 1'b1;
    end else begin
        grp_fu_758_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_758_p0 = weights_0_load_24_reg_2521;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_23_reg_2500;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_758_p0 = weights_0_load_22_reg_2495;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_21_reg_2469;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_20_reg_2464;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_758_p0 = weights_0_load_19_reg_2433;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_18_reg_2428;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_758_p0 = weights_0_load_17_reg_2402;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_16_reg_2397;
    end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_15_reg_2363;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_14_reg_2358;
    end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_13_reg_2332;
    end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_12_reg_2327;
    end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_11_reg_2301;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_10_reg_2296;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_758_p0 = weights_0_load_9_reg_2275;
    end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_8_reg_2270;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_7_reg_2249;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_6_reg_2244;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_5_reg_2215;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_758_p0 = weights_0_load_4_reg_2204;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_3_reg_2175;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_758_p0 = weights_0_load_2_reg_2162;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_1_reg_2133;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p0 = weights_0_load_reg_2128;
    end else begin
        grp_fu_758_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_758_p1 = input_addr_252_read_reg_2797;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_247_read_reg_2787;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_758_p1 = input_addr_242_read_reg_2777;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_237_read_reg_2767;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_232_read_reg_2757;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_758_p1 = input_addr_251_read_reg_2747;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_246_read_reg_2737;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_758_p1 = input_addr_241_read_reg_2727;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_236_read_reg_2712;
    end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_231_read_reg_2691;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_250_read_reg_2675;
    end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_245_read_reg_2659;
    end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_240_read_reg_2643;
    end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_235_read_reg_2619;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_230_read_reg_2603;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_758_p1 = input_addr_249_read_reg_2587;
    end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_244_read_reg_2571;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_239_read_reg_2550;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_234_read_reg_2516;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_229_read_reg_2490;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_758_p1 = input_addr_248_read_reg_2459;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_243_read_reg_2423;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_758_p1 = input_addr_238_read_reg_2392;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_233_read_reg_2347;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_758_p1 = input_addr_read_reg_2316;
    end else begin
        grp_fu_758_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        grp_fu_762_ce = 1'b1;
    end else begin
        grp_fu_762_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln9_reg_1980 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        input_r_blk_n_AR = m_axi_input_r_ARREADY;
    end else begin
        input_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        input_r_blk_n_R = m_axi_input_r_RVALID;
    end else begin
        input_r_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln9_reg_1980 == 1'd0)) begin
        if ((1'b1 == ap_condition_1281)) begin
            m_axi_input_r_ARADDR = input_addr_252_reg_2701;
        end else if ((1'b1 == ap_condition_1271)) begin
            m_axi_input_r_ARADDR = input_addr_247_reg_2680;
        end else if ((1'b1 == ap_condition_1252)) begin
            m_axi_input_r_ARADDR = input_addr_242_reg_2664;
        end else if ((1'b1 == ap_condition_523)) begin
            m_axi_input_r_ARADDR = input_addr_237_reg_2648;
        end else if ((1'b1 == ap_condition_1232)) begin
            m_axi_input_r_ARADDR = input_addr_232_reg_2632;
        end else if ((1'b1 == ap_condition_1221)) begin
            m_axi_input_r_ARADDR = input_addr_251_reg_2608;
        end else if ((1'b1 == ap_condition_1208)) begin
            m_axi_input_r_ARADDR = input_addr_246_reg_2592;
        end else if ((1'b1 == ap_condition_1197)) begin
            m_axi_input_r_ARADDR = input_addr_241_reg_2576;
        end else if ((1'b1 == ap_condition_509)) begin
            m_axi_input_r_ARADDR = input_addr_236_reg_2560;
        end else if ((1'b1 == ap_condition_1179)) begin
            m_axi_input_r_ARADDR = input_addr_231_reg_2539;
        end else if ((1'b1 == ap_condition_1167)) begin
            m_axi_input_r_ARADDR = input_addr_250_reg_2510;
        end else if ((1'b1 == ap_condition_1144)) begin
            m_axi_input_r_ARADDR = input_addr_245_reg_2484;
        end else if ((1'b1 == ap_condition_1135)) begin
            m_axi_input_r_ARADDR = input_addr_240_reg_2453;
        end else if ((1'b1 == ap_condition_1122)) begin
            m_axi_input_r_ARADDR = input_addr_235_reg_2417;
        end else if ((1'b1 == ap_condition_1111)) begin
            m_axi_input_r_ARADDR = input_addr_230_reg_2386;
        end else if ((1'b1 == ap_condition_1097)) begin
            m_axi_input_r_ARADDR = input_addr_249_reg_2352;
        end else if ((1'b1 == ap_condition_1081)) begin
            m_axi_input_r_ARADDR = input_addr_244_reg_2321;
        end else if ((1'b1 == ap_condition_1067)) begin
            m_axi_input_r_ARADDR = input_addr_239_reg_2290;
        end else if ((1'b1 == ap_condition_1053)) begin
            m_axi_input_r_ARADDR = input_addr_234_reg_2264;
        end else if ((1'b1 == ap_condition_1041)) begin
            m_axi_input_r_ARADDR = input_addr_229_reg_2238;
        end else if ((1'b1 == ap_condition_1029)) begin
            m_axi_input_r_ARADDR = input_addr_248_reg_2209;
        end else if ((1'b1 == ap_condition_1013)) begin
            m_axi_input_r_ARADDR = input_addr_243_reg_2180;
        end else if ((1'b1 == ap_condition_997)) begin
            m_axi_input_r_ARADDR = input_addr_238_reg_2146;
        end else if ((1'b1 == ap_condition_983)) begin
            m_axi_input_r_ARADDR = input_addr_233_reg_2112;
        end else if ((1'b1 == ap_condition_972)) begin
            m_axi_input_r_ARADDR = input_addr_reg_2077;
        end else begin
            m_axi_input_r_ARADDR = 'bx;
        end
    end else begin
        m_axi_input_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_input_r_ARVALID = 1'b1;
    end else begin
        m_axi_input_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_input_r_RREADY = 1'b1;
    end else begin
        m_axi_input_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1980_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            weights_0_address0 = zext_ln18_26_fu_1497_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            weights_0_address0 = zext_ln18_24_fu_1456_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            weights_0_address0 = zext_ln18_22_fu_1415_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            weights_0_address0 = zext_ln18_20_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            weights_0_address0 = zext_ln18_18_fu_1307_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            weights_0_address0 = zext_ln18_16_fu_1266_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weights_0_address0 = zext_ln18_14_fu_1225_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            weights_0_address0 = zext_ln18_12_fu_1184_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights_0_address0 = zext_ln18_10_fu_1117_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_0_address0 = zext_ln18_8_fu_1070_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_0_address0 = zext_ln18_6_fu_1023_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_0_address0 = zext_ln18_4_fu_976_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_0_address0 = zext_ln18_2_fu_930_p1;
        end else begin
            weights_0_address0 = 'bx;
        end
    end else begin
        weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            weights_0_address1 = zext_ln18_25_fu_1466_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            weights_0_address1 = zext_ln18_23_fu_1425_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            weights_0_address1 = zext_ln18_21_fu_1358_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            weights_0_address1 = zext_ln18_19_fu_1317_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            weights_0_address1 = zext_ln18_17_fu_1276_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weights_0_address1 = zext_ln18_15_fu_1235_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            weights_0_address1 = zext_ln18_13_fu_1194_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights_0_address1 = zext_ln18_11_fu_1127_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_0_address1 = zext_ln18_9_fu_1080_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_0_address1 = zext_ln18_7_fu_1033_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_0_address1 = zext_ln18_5_fu_986_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_0_address1 = zext_ln18_3_fu_939_p1;
        end else begin
            weights_0_address1 = 'bx;
        end
    end else begin
        weights_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weights_0_ce0 = 1'b1;
    end else begin
        weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weights_0_ce1 = 1'b1;
    end else begin
        weights_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln9_fu_802_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln9_fu_802_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((~((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone)) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_1597_p2 = (10'd1 + indvar_flatten_reg_719);

assign add_ln17_10_fu_1687_p2 = (5'd5 + select_ln15_reg_1998);

assign add_ln17_11_fu_1569_p2 = (5'd4 + h_0_reg_731);

assign add_ln17_1_fu_991_p2 = (5'd2 + select_ln22_reg_2054);

assign add_ln17_2_fu_1132_p2 = (5'd2 + select_ln15_reg_1998);

assign add_ln17_3_fu_1137_p2 = (5'd1 + h_0_reg_731);

assign add_ln17_4_fu_1363_p2 = (5'd3 + select_ln15_reg_1998);

assign add_ln17_5_fu_1038_p2 = (5'd3 + select_ln22_reg_2054);

assign add_ln17_6_fu_1085_p2 = (5'd4 + select_ln22_reg_2054);

assign add_ln17_7_fu_1368_p2 = (5'd2 + h_0_reg_731);

assign add_ln17_8_fu_1544_p2 = (5'd4 + select_ln15_reg_1998);

assign add_ln17_9_fu_1549_p2 = (5'd3 + h_0_reg_731);

assign add_ln17_fu_879_p2 = (5'd1 + select_ln15_fu_826_p3);

assign add_ln18_10_fu_1189_p2 = (8'd11 + trunc_ln18_reg_2018);

assign add_ln18_11_fu_1220_p2 = (8'd12 + trunc_ln18_reg_2018);

assign add_ln18_12_fu_1230_p2 = (8'd13 + trunc_ln18_reg_2018);

assign add_ln18_13_fu_1261_p2 = (8'd14 + trunc_ln18_reg_2018);

assign add_ln18_14_fu_1271_p2 = (8'd15 + trunc_ln18_reg_2018);

assign add_ln18_15_fu_1302_p2 = (8'd16 + trunc_ln18_reg_2018);

assign add_ln18_16_fu_1312_p2 = (8'd17 + trunc_ln18_reg_2018);

assign add_ln18_17_fu_1343_p2 = (8'd18 + trunc_ln18_reg_2018);

assign add_ln18_18_fu_1353_p2 = (8'd19 + trunc_ln18_reg_2018);

assign add_ln18_19_fu_1410_p2 = (8'd20 + trunc_ln18_reg_2018);

assign add_ln18_1_fu_971_p2 = (8'd2 + trunc_ln18_reg_2018);

assign add_ln18_20_fu_1420_p2 = (8'd21 + trunc_ln18_reg_2018);

assign add_ln18_21_fu_1451_p2 = (8'd22 + trunc_ln18_reg_2018);

assign add_ln18_22_fu_1461_p2 = (8'd23 + trunc_ln18_reg_2018);

assign add_ln18_23_fu_1492_p2 = (8'd24 + trunc_ln18_reg_2018);

assign add_ln18_24_fu_919_p2 = (zext_ln18_reg_1951 + zext_ln18_28_fu_915_p1);

assign add_ln18_25_fu_1168_p2 = (zext_ln18_reg_1951 + zext_ln18_29_fu_1164_p1);

assign add_ln18_26_fu_1399_p2 = (zext_ln18_reg_1951 + zext_ln18_30_fu_1395_p1);

assign add_ln18_27_fu_1586_p2 = (zext_ln18_reg_1951 + zext_ln18_31_fu_1582_p1);

assign add_ln18_28_fu_1716_p2 = (zext_ln18_reg_1951 + zext_ln18_32_fu_1712_p1);

assign add_ln18_29_fu_960_p2 = (zext_ln18_reg_1951 + zext_ln18_33_fu_956_p1);

assign add_ln18_2_fu_981_p2 = (8'd3 + trunc_ln18_reg_2018);

assign add_ln18_30_fu_1209_p2 = (zext_ln18_reg_1951 + zext_ln18_34_fu_1205_p1);

assign add_ln18_31_fu_1440_p2 = (zext_ln18_reg_1951 + zext_ln18_35_fu_1436_p1);

assign add_ln18_32_fu_1613_p2 = (zext_ln18_reg_1951 + zext_ln18_36_fu_1609_p1);

assign add_ln18_33_fu_1737_p2 = (zext_ln18_reg_1951 + zext_ln18_37_fu_1733_p1);

assign add_ln18_34_fu_1007_p2 = (zext_ln18_reg_1951 + zext_ln18_38_fu_1003_p1);

assign add_ln18_35_fu_1250_p2 = (zext_ln18_reg_1951 + zext_ln18_39_fu_1246_p1);

assign add_ln18_36_fu_1481_p2 = (zext_ln18_reg_1951 + zext_ln18_40_fu_1477_p1);

assign add_ln18_37_fu_1634_p2 = (zext_ln18_reg_1951 + zext_ln18_41_fu_1630_p1);

assign add_ln18_38_fu_1758_p2 = (zext_ln18_reg_1951 + zext_ln18_42_fu_1754_p1);

assign add_ln18_39_fu_1054_p2 = (zext_ln18_reg_1951 + zext_ln18_43_fu_1050_p1);

assign add_ln18_3_fu_1018_p2 = (8'd4 + trunc_ln18_reg_2018);

assign add_ln18_40_fu_1291_p2 = (zext_ln18_reg_1951 + zext_ln18_44_fu_1287_p1);

assign add_ln18_41_fu_1512_p2 = (zext_ln18_reg_1951 + zext_ln18_45_fu_1508_p1);

assign add_ln18_42_fu_1655_p2 = (zext_ln18_reg_1951 + zext_ln18_46_fu_1651_p1);

assign add_ln18_43_fu_1779_p2 = (zext_ln18_reg_1951 + zext_ln18_47_fu_1775_p1);

assign add_ln18_44_fu_1101_p2 = (zext_ln18_reg_1951 + zext_ln18_48_fu_1097_p1);

assign add_ln18_45_fu_1332_p2 = (zext_ln18_reg_1951 + zext_ln18_49_fu_1328_p1);

assign add_ln18_46_fu_1533_p2 = (zext_ln18_reg_1951 + zext_ln18_50_fu_1529_p1);

assign add_ln18_47_fu_1676_p2 = (zext_ln18_reg_1951 + zext_ln18_51_fu_1672_p1);

assign add_ln18_48_fu_1880_p2 = (zext_ln18_reg_1951 + zext_ln18_52_fu_1876_p1);

assign add_ln18_4_fu_1028_p2 = (8'd5 + trunc_ln18_reg_2018);

assign add_ln18_5_fu_1065_p2 = (8'd6 + trunc_ln18_reg_2018);

assign add_ln18_6_fu_1075_p2 = (8'd7 + trunc_ln18_reg_2018);

assign add_ln18_7_fu_1112_p2 = (8'd8 + trunc_ln18_reg_2018);

assign add_ln18_8_fu_1122_p2 = (8'd9 + trunc_ln18_reg_2018);

assign add_ln18_9_fu_1179_p2 = (8'd10 + trunc_ln18_reg_2018);

assign add_ln18_fu_934_p2 = (8'd1 + trunc_ln18_reg_2018);

assign add_ln22_1_fu_1864_p2 = (sub_ln22_1_fu_1855_p2 + zext_ln18_27_fu_1861_p1);

assign add_ln22_fu_1825_p2 = ($signed(sext_ln22_fu_1818_p1) + $signed(zext_ln22_2_fu_1822_p1));

assign add_ln9_fu_808_p2 = (ap_phi_mux_indvar_flatten61_phi_fu_701_p4 + 13'd1);

assign and_ln15_fu_873_p2 = (xor_ln15_fu_861_p2 & icmp_ln11_fu_867_p2);

assign and_ln5_fu_1933_p2 = (or_ln5_fu_1927_p2 & grp_fu_762_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd26];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state27_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state27_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_00001 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state25_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state25_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state26_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state26_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0))));
end

assign ap_block_state100_pp0_stage23_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage24_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state110_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state120_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage20_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage21_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage22_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage23_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage24_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state130_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state140_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage16_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage17_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage18_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage19_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage20_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage21_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage22_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage23_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage24_iter0 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter1 = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage1_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage2_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage3_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage4_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage5_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage6_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp0_stage7_iter1 = ((icmp_ln9_reg_1980_pp0_iter1_reg == 1'd0) & (m_axi_input_r_RVALID == 1'b0));
end

assign ap_block_state35_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage20_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage21_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage22_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage23_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage24_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage20_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage21_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage22_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((icmp_ln9_reg_1980 == 1'd0) & (m_axi_input_r_ARREADY == 1'b0));
end

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1013 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1029 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1041 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1053 = ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1067 = ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1081 = ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1097 = ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1111 = ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1122 = ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1135 = ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1144 = ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1167 = ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1179 = ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1197 = ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1208 = ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1221 = ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1232 = ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1252 = ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1271 = ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1281 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_509 = ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_523 = ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_972 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_983 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_997 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_address0 = zext_ln15_fu_842_p1;

assign bitcast_ln5_fu_1897_p1 = reg_792;

assign co_fu_814_p2 = (3'd1 + ap_phi_mux_co_0_phi_fu_712_p4);

assign icmp_ln10_fu_820_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_723_p4 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_867_p2 = ((ap_phi_mux_w_0_phi_fu_747_p4 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln5_5_fu_1921_p2 = ((trunc_ln5_fu_1911_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln5_fu_1915_p2 = ((tmp_s_fu_1901_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_802_p2 = ((ap_phi_mux_indvar_flatten61_phi_fu_701_p4 == 13'd4704) ? 1'b1 : 1'b0);

assign m_axi_input_r_ARBURST = 2'd0;

assign m_axi_input_r_ARCACHE = 4'd0;

assign m_axi_input_r_ARID = 1'd0;

assign m_axi_input_r_ARLEN = 32'd1;

assign m_axi_input_r_ARLOCK = 2'd0;

assign m_axi_input_r_ARPROT = 3'd0;

assign m_axi_input_r_ARQOS = 4'd0;

assign m_axi_input_r_ARREGION = 4'd0;

assign m_axi_input_r_ARSIZE = 3'd0;

assign m_axi_input_r_ARUSER = 1'd0;

assign m_axi_input_r_AWADDR = 32'd0;

assign m_axi_input_r_AWBURST = 2'd0;

assign m_axi_input_r_AWCACHE = 4'd0;

assign m_axi_input_r_AWID = 1'd0;

assign m_axi_input_r_AWLEN = 32'd0;

assign m_axi_input_r_AWLOCK = 2'd0;

assign m_axi_input_r_AWPROT = 3'd0;

assign m_axi_input_r_AWQOS = 4'd0;

assign m_axi_input_r_AWREGION = 4'd0;

assign m_axi_input_r_AWSIZE = 3'd0;

assign m_axi_input_r_AWUSER = 1'd0;

assign m_axi_input_r_AWVALID = 1'b0;

assign m_axi_input_r_BREADY = 1'b0;

assign m_axi_input_r_WDATA = 32'd0;

assign m_axi_input_r_WID = 1'd0;

assign m_axi_input_r_WLAST = 1'b0;

assign m_axi_input_r_WSTRB = 4'd0;

assign m_axi_input_r_WUSER = 1'd0;

assign m_axi_input_r_WVALID = 1'b0;

assign mul_ln18_fu_851_p1 = mul_ln18_fu_851_p10;

assign mul_ln18_fu_851_p10 = select_ln15_1_fu_834_p3;

assign mul_ln18_fu_851_p2 = (9'd25 * mul_ln18_fu_851_p1);

assign or_ln22_fu_885_p2 = (icmp_ln10_fu_820_p2 | and_ln15_fu_873_p2);

assign or_ln5_fu_1927_p2 = (icmp_ln5_fu_1915_p2 | icmp_ln5_5_fu_1921_p2);

assign output_r_address0 = zext_ln22_3_fu_1947_p1;

assign output_r_d0 = select_ln5_reg_2822;

assign p_shl_cast_fu_1835_p3 = {{trunc_ln22_fu_1831_p1}, {5'd0}};

assign select_ln10_fu_1891_p3 = ((icmp_ln10_reg_1989[0:0] === 1'b1) ? 10'd1 : add_ln10_reg_2555);

assign select_ln15_1_fu_834_p3 = ((icmp_ln10_fu_820_p2[0:0] === 1'b1) ? co_fu_814_p2 : ap_phi_mux_co_0_phi_fu_712_p4);

assign select_ln15_2_fu_1143_p3 = ((icmp_ln10_reg_1989[0:0] === 1'b1) ? 5'd1 : add_ln17_3_fu_1137_p2);

assign select_ln15_3_fu_1374_p3 = ((icmp_ln10_reg_1989[0:0] === 1'b1) ? 5'd2 : add_ln17_7_fu_1368_p2);

assign select_ln15_4_fu_1555_p3 = ((icmp_ln10_reg_1989[0:0] === 1'b1) ? 5'd3 : add_ln17_9_fu_1549_p2);

assign select_ln15_5_fu_1692_p3 = ((icmp_ln10_reg_1989[0:0] === 1'b1) ? 5'd4 : add_ln17_11_reg_2534);

assign select_ln15_fu_826_p3 = ((icmp_ln10_fu_820_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_h_0_phi_fu_735_p4);

assign select_ln22_1_fu_899_p3 = ((and_ln15_fu_873_p2[0:0] === 1'b1) ? add_ln17_fu_879_p2 : select_ln15_fu_826_p3);

assign select_ln22_2_fu_1150_p3 = ((and_ln15_reg_2046[0:0] === 1'b1) ? add_ln17_2_fu_1132_p2 : select_ln15_2_fu_1143_p3);

assign select_ln22_3_fu_1381_p3 = ((and_ln15_reg_2046[0:0] === 1'b1) ? add_ln17_4_fu_1363_p2 : select_ln15_3_fu_1374_p3);

assign select_ln22_4_fu_1562_p3 = ((and_ln15_reg_2046[0:0] === 1'b1) ? add_ln17_8_fu_1544_p2 : select_ln15_4_fu_1555_p3);

assign select_ln22_5_fu_1698_p3 = ((and_ln15_reg_2046[0:0] === 1'b1) ? add_ln17_10_fu_1687_p2 : select_ln15_5_fu_1692_p3);

assign select_ln22_fu_891_p3 = ((or_ln22_fu_885_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_w_0_phi_fu_747_p4);

assign select_ln5_fu_1939_p3 = ((and_ln5_fu_1933_p2[0:0] === 1'b1) ? reg_792 : 32'd0);

assign sext_ln22_1_fu_1851_p1 = $signed(tmp_40_fu_1843_p3);

assign sext_ln22_fu_1818_p1 = $signed(sub_ln22_fu_1812_p2);

assign sub_ln22_1_fu_1855_p2 = ($signed(p_shl_cast_fu_1835_p3) - $signed(sext_ln22_1_fu_1851_p1));

assign sub_ln22_fu_1812_p2 = (zext_ln22_fu_1797_p1 - zext_ln22_1_fu_1808_p1);

assign tmp_27_fu_1790_p3 = {{select_ln15_1_reg_2006}, {5'd0}};

assign tmp_28_fu_1801_p3 = {{select_ln15_1_reg_2006}, {2'd0}};

assign tmp_40_fu_1843_p3 = {{add_ln22_fu_1825_p2}, {2'd0}};

assign tmp_41_fu_907_p3 = {{select_ln22_1_fu_899_p3}, {select_ln22_fu_891_p3}};

assign tmp_42_fu_1157_p3 = {{select_ln22_2_fu_1150_p3}, {select_ln22_reg_2054}};

assign tmp_43_fu_1388_p3 = {{select_ln22_3_fu_1381_p3}, {select_ln22_reg_2054}};

assign tmp_44_fu_1575_p3 = {{select_ln22_4_fu_1562_p3}, {select_ln22_reg_2054}};

assign tmp_45_fu_1705_p3 = {{select_ln22_5_fu_1698_p3}, {select_ln22_reg_2054}};

assign tmp_46_fu_949_p3 = {{select_ln22_1_reg_2067}, {w_fu_944_p2}};

assign tmp_47_fu_1199_p3 = {{select_ln22_2_reg_2230}, {w_reg_2103}};

assign tmp_48_fu_1430_p3 = {{select_ln22_3_reg_2378}, {w_reg_2103}};

assign tmp_49_fu_1603_p3 = {{select_ln22_4_reg_2526}, {w_reg_2103}};

assign tmp_50_fu_1727_p3 = {{select_ln22_5_reg_2624}, {w_reg_2103}};

assign tmp_51_fu_996_p3 = {{select_ln22_1_reg_2067}, {add_ln17_1_fu_991_p2}};

assign tmp_52_fu_1240_p3 = {{select_ln22_2_reg_2230}, {add_ln17_1_reg_2138}};

assign tmp_53_fu_1471_p3 = {{select_ln22_3_reg_2378}, {add_ln17_1_reg_2138}};

assign tmp_54_fu_1624_p3 = {{select_ln22_4_reg_2526}, {add_ln17_1_reg_2138}};

assign tmp_55_fu_1748_p3 = {{select_ln22_5_reg_2624}, {add_ln17_1_reg_2138}};

assign tmp_56_fu_1043_p3 = {{select_ln22_1_reg_2067}, {add_ln17_5_fu_1038_p2}};

assign tmp_57_fu_1281_p3 = {{select_ln22_2_reg_2230}, {add_ln17_5_reg_2167}};

assign tmp_58_fu_1502_p3 = {{select_ln22_3_reg_2378}, {add_ln17_5_reg_2167}};

assign tmp_59_fu_1645_p3 = {{select_ln22_4_reg_2526}, {add_ln17_5_reg_2167}};

assign tmp_60_fu_1769_p3 = {{select_ln22_5_reg_2624}, {add_ln17_5_reg_2167}};

assign tmp_61_fu_1090_p3 = {{select_ln22_1_reg_2067}, {add_ln17_6_fu_1085_p2}};

assign tmp_62_fu_1322_p3 = {{select_ln22_2_reg_2230}, {add_ln17_6_reg_2196}};

assign tmp_63_fu_1523_p3 = {{select_ln22_3_reg_2378}, {add_ln17_6_reg_2196}};

assign tmp_64_fu_1666_p3 = {{select_ln22_4_reg_2526}, {add_ln17_6_reg_2196}};

assign tmp_65_fu_1870_p3 = {{select_ln22_5_reg_2624}, {add_ln17_6_reg_2196}};

assign tmp_s_fu_1901_p4 = {{bitcast_ln5_fu_1897_p1[30:23]}};

assign trunc_ln18_fu_857_p1 = mul_ln18_fu_851_p2[7:0];

assign trunc_ln22_fu_1831_p1 = add_ln22_fu_1825_p2[8:0];

assign trunc_ln5_fu_1911_p1 = bitcast_ln5_fu_1897_p1[22:0];

assign w_fu_944_p2 = (5'd1 + select_ln22_reg_2054);

assign xor_ln15_fu_861_p2 = (icmp_ln10_fu_820_p2 ^ 1'd1);

assign zext_ln15_fu_842_p1 = select_ln15_1_fu_834_p3;

assign zext_ln18_10_fu_1117_p1 = add_ln18_7_fu_1112_p2;

assign zext_ln18_11_fu_1127_p1 = add_ln18_8_fu_1122_p2;

assign zext_ln18_12_fu_1184_p1 = add_ln18_9_fu_1179_p2;

assign zext_ln18_13_fu_1194_p1 = add_ln18_10_fu_1189_p2;

assign zext_ln18_14_fu_1225_p1 = add_ln18_11_fu_1220_p2;

assign zext_ln18_15_fu_1235_p1 = add_ln18_12_fu_1230_p2;

assign zext_ln18_16_fu_1266_p1 = add_ln18_13_fu_1261_p2;

assign zext_ln18_17_fu_1276_p1 = add_ln18_14_fu_1271_p2;

assign zext_ln18_18_fu_1307_p1 = add_ln18_15_fu_1302_p2;

assign zext_ln18_19_fu_1317_p1 = add_ln18_16_fu_1312_p2;

assign zext_ln18_20_fu_1348_p1 = add_ln18_17_fu_1343_p2;

assign zext_ln18_21_fu_1358_p1 = add_ln18_18_fu_1353_p2;

assign zext_ln18_22_fu_1415_p1 = add_ln18_19_fu_1410_p2;

assign zext_ln18_23_fu_1425_p1 = add_ln18_20_fu_1420_p2;

assign zext_ln18_24_fu_1456_p1 = add_ln18_21_fu_1451_p2;

assign zext_ln18_25_fu_1466_p1 = add_ln18_22_fu_1461_p2;

assign zext_ln18_26_fu_1497_p1 = add_ln18_23_fu_1492_p2;

assign zext_ln18_27_fu_1861_p1 = select_ln22_reg_2054;

assign zext_ln18_28_fu_915_p1 = tmp_41_fu_907_p3;

assign zext_ln18_29_fu_1164_p1 = tmp_42_fu_1157_p3;

assign zext_ln18_2_fu_930_p1 = mul_ln18_reg_2013;

assign zext_ln18_30_fu_1395_p1 = tmp_43_fu_1388_p3;

assign zext_ln18_31_fu_1582_p1 = tmp_44_fu_1575_p3;

assign zext_ln18_32_fu_1712_p1 = tmp_45_fu_1705_p3;

assign zext_ln18_33_fu_956_p1 = tmp_46_fu_949_p3;

assign zext_ln18_34_fu_1205_p1 = tmp_47_fu_1199_p3;

assign zext_ln18_35_fu_1436_p1 = tmp_48_fu_1430_p3;

assign zext_ln18_36_fu_1609_p1 = tmp_49_fu_1603_p3;

assign zext_ln18_37_fu_1733_p1 = tmp_50_fu_1727_p3;

assign zext_ln18_38_fu_1003_p1 = tmp_51_fu_996_p3;

assign zext_ln18_39_fu_1246_p1 = tmp_52_fu_1240_p3;

assign zext_ln18_3_fu_939_p1 = add_ln18_fu_934_p2;

assign zext_ln18_40_fu_1477_p1 = tmp_53_fu_1471_p3;

assign zext_ln18_41_fu_1630_p1 = tmp_54_fu_1624_p3;

assign zext_ln18_42_fu_1754_p1 = tmp_55_fu_1748_p3;

assign zext_ln18_43_fu_1050_p1 = tmp_56_fu_1043_p3;

assign zext_ln18_44_fu_1287_p1 = tmp_57_fu_1281_p3;

assign zext_ln18_45_fu_1508_p1 = tmp_58_fu_1502_p3;

assign zext_ln18_46_fu_1651_p1 = tmp_59_fu_1645_p3;

assign zext_ln18_47_fu_1775_p1 = tmp_60_fu_1769_p3;

assign zext_ln18_48_fu_1097_p1 = tmp_61_fu_1090_p3;

assign zext_ln18_49_fu_1328_p1 = tmp_62_fu_1322_p3;

assign zext_ln18_4_fu_976_p1 = add_ln18_1_fu_971_p2;

assign zext_ln18_50_fu_1529_p1 = tmp_63_fu_1523_p3;

assign zext_ln18_51_fu_1672_p1 = tmp_64_fu_1666_p3;

assign zext_ln18_52_fu_1876_p1 = tmp_65_fu_1870_p3;

assign zext_ln18_5_fu_986_p1 = add_ln18_2_fu_981_p2;

assign zext_ln18_6_fu_1023_p1 = add_ln18_3_fu_1018_p2;

assign zext_ln18_7_fu_1033_p1 = add_ln18_4_fu_1028_p2;

assign zext_ln18_8_fu_1070_p1 = add_ln18_5_fu_1065_p2;

assign zext_ln18_9_fu_1080_p1 = add_ln18_6_fu_1075_p2;

assign zext_ln18_fu_798_p1 = input_offset;

assign zext_ln22_1_fu_1808_p1 = tmp_28_fu_1801_p3;

assign zext_ln22_2_fu_1822_p1 = select_ln22_1_reg_2067;

assign zext_ln22_3_fu_1947_p1 = add_ln22_1_reg_2696_pp0_iter4_reg;

assign zext_ln22_fu_1797_p1 = tmp_27_fu_1790_p3;

always @ (posedge ap_clk) begin
    zext_ln18_reg_1951[63:30] <= 34'b0000000000000000000000000000000000;
end

endmodule //convolution1
