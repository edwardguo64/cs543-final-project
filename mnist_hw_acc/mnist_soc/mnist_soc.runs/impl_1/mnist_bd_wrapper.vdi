#-----------------------------------------------------------
# Vivado v2019.1 (64-bit)
# SW Build 2552052 on Fri May 24 14:49:42 MDT 2019
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
# Start of session at: Thu Apr 18 17:24:30 2024
# Process ID: 48900
# Current directory: C:/cs543/mnist_hw_acc/mnist_soc/mnist_soc.runs/impl_1
# Command line: vivado.exe -log mnist_bd_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source mnist_bd_wrapper.tcl -notrace
# Log file: C:/cs543/mnist_hw_acc/mnist_soc/mnist_soc.runs/impl_1/mnist_bd_wrapper.vdi
# Journal file: C:/cs543/mnist_hw_acc/mnist_soc/mnist_soc.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source mnist_bd_wrapper.tcl -notrace
Command: open_checkpoint mnist_bd_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.038 . Memory (MB): peak = 290.230 ; gain = 0.000
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Netlist 29-17] Analyzing 1713 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:04 ; elapsed = 00:00:05 . Memory (MB): peak = 1659.938 ; gain = 28.621
Restored from archive | CPU: 4.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:05 . Memory (MB): peak = 1659.938 ; gain = 28.621
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 1659.938 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 246 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 96 instances
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 150 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2019.1 (64-bit) build 2552052
open_checkpoint: Time (s): cpu = 00:00:30 ; elapsed = 00:00:35 . Memory (MB): peak = 1659.938 ; gain = 1369.707
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_2/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the mnist_bd_i/smartconnect_0/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
Command: write_bitstream -force mnist_bd_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP input mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_100_fu_5617_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_100_fu_5617_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_101_fu_5645_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_101_fu_5645_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_102_fu_5655_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_102_fu_5655_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_103_fu_5683_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_103_fu_5683_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_105_fu_5721_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_105_fu_5721_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_106_fu_5731_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_106_fu_5731_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_107_fu_5759_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_107_fu_5759_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_108_fu_5769_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_108_fu_5769_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_109_fu_5797_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_109_fu_5797_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_10_fu_3604_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_10_fu_3604_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_111_fu_5835_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_111_fu_5835_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_112_fu_5845_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_112_fu_5845_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_113_fu_5873_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_113_fu_5873_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_114_fu_5883_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_114_fu_5883_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_115_fu_5929_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_115_fu_5929_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_117_fu_6003_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_117_fu_6003_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_118_fu_6013_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_118_fu_6013_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_119_fu_6053_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_119_fu_6053_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_11_fu_3632_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_11_fu_3632_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_120_fu_6063_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_120_fu_6063_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_121_fu_6132_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_121_fu_6132_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_123_fu_6170_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_123_fu_6170_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_124_fu_6180_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_124_fu_6180_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_125_fu_6208_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_125_fu_6208_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_126_fu_6218_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_126_fu_6218_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_127_fu_6246_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_127_fu_6246_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_129_fu_6284_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_129_fu_6284_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_12_fu_3642_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_12_fu_3642_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_130_fu_6294_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_130_fu_6294_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_131_fu_6322_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_131_fu_6322_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_132_fu_6332_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_132_fu_6332_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_133_fu_6360_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_133_fu_6360_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_135_fu_6398_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_135_fu_6398_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_136_fu_6408_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_136_fu_6408_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_137_fu_6468_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_137_fu_6468_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_138_fu_6478_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_138_fu_6478_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_139_fu_6496_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_139_fu_6496_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_13_fu_3670_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_13_fu_3670_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_141_fu_6524_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_141_fu_6524_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_142_fu_6534_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_142_fu_6534_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_143_fu_6558_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_143_fu_6558_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_144_fu_6568_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_144_fu_6568_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_15_fu_3719_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_15_fu_3719_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_16_fu_3729_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_16_fu_3729_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_17_fu_3757_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_17_fu_3757_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_18_fu_3767_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_18_fu_3767_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_19_fu_3795_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_19_fu_3795_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_1_fu_3330_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_1_fu_3330_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_21_fu_3844_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_21_fu_3844_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_22_fu_3854_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_22_fu_3854_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_23_fu_3882_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_23_fu_3882_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_24_fu_3892_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_24_fu_3892_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_27_fu_4059_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_27_fu_4059_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_28_fu_4069_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_28_fu_4069_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_29_fu_4109_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_29_fu_4109_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_2_fu_3370_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_2_fu_3370_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_30_fu_4119_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_30_fu_4119_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_33_fu_4197_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_33_fu_4197_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_34_fu_4207_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_34_fu_4207_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_35_fu_4235_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_35_fu_4235_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_36_fu_4245_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_36_fu_4245_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_39_fu_4311_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_39_fu_4311_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_3_fu_3380_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_3_fu_3380_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_40_fu_4321_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_40_fu_4321_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_41_fu_4349_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_41_fu_4349_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_42_fu_4359_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_42_fu_4359_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_45_fu_4425_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_45_fu_4425_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_46_fu_4435_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_46_fu_4435_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_47_fu_4463_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_47_fu_4463_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_48_fu_4473_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_48_fu_4473_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_51_fu_4539_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_51_fu_4539_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_52_fu_4549_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_52_fu_4549_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_53_fu_4577_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_53_fu_4577_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_54_fu_4587_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_54_fu_4587_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_55_fu_4633_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_55_fu_4633_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_57_fu_4707_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_57_fu_4707_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_58_fu_4717_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_58_fu_4717_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_59_fu_4757_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_59_fu_4757_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_5_fu_3479_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_5_fu_3479_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_60_fu_4767_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_60_fu_4767_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_61_fu_4807_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_61_fu_4807_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_63_fu_4845_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_63_fu_4845_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_64_fu_4855_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_64_fu_4855_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_65_fu_4883_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_65_fu_4883_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_66_fu_4893_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_66_fu_4893_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_67_fu_4921_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_67_fu_4921_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_69_fu_4959_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_69_fu_4959_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_6_fu_3517_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_6_fu_3517_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_70_fu_4969_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_70_fu_4969_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_71_fu_4997_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_71_fu_4997_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_72_fu_5007_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_72_fu_5007_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_73_fu_5035_p2 input mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_73_fu_5035_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U15/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U15/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U16/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U16/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/mul_ln65_1_reg_6867_reg output mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/mul_ln65_1_reg_6867_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fadd_32bkb_U29/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fadd_32bkb_U29/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fadd_32bkb_U36/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP output mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fadd_32bkb_U36/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP output mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP output mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_100_fu_5617_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_100_fu_5617_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_101_fu_5645_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_101_fu_5645_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_102_fu_5655_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_102_fu_5655_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_103_fu_5683_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_103_fu_5683_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_105_fu_5721_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_105_fu_5721_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_106_fu_5731_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_106_fu_5731_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_107_fu_5759_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_107_fu_5759_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_108_fu_5769_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_108_fu_5769_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_109_fu_5797_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_109_fu_5797_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_10_fu_3604_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_10_fu_3604_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_111_fu_5835_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_111_fu_5835_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_112_fu_5845_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_112_fu_5845_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_113_fu_5873_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_113_fu_5873_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_114_fu_5883_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_114_fu_5883_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_115_fu_5929_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_115_fu_5929_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_117_fu_6003_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_117_fu_6003_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_118_fu_6013_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_118_fu_6013_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_119_fu_6053_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_119_fu_6053_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_11_fu_3632_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_11_fu_3632_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_120_fu_6063_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_120_fu_6063_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_121_fu_6132_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_121_fu_6132_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_123_fu_6170_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_123_fu_6170_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_124_fu_6180_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_124_fu_6180_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_125_fu_6208_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_125_fu_6208_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_126_fu_6218_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_126_fu_6218_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_127_fu_6246_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_127_fu_6246_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_129_fu_6284_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_129_fu_6284_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_12_fu_3642_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_12_fu_3642_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_130_fu_6294_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_130_fu_6294_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_131_fu_6322_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_131_fu_6322_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_132_fu_6332_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_132_fu_6332_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_133_fu_6360_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_133_fu_6360_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_135_fu_6398_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_135_fu_6398_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_136_fu_6408_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_136_fu_6408_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_137_fu_6468_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_137_fu_6468_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_138_fu_6478_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_138_fu_6478_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_139_fu_6496_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_139_fu_6496_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_13_fu_3670_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_13_fu_3670_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_141_fu_6524_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_141_fu_6524_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_142_fu_6534_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_142_fu_6534_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_143_fu_6558_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_143_fu_6558_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_144_fu_6568_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_144_fu_6568_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_15_fu_3719_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_15_fu_3719_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_16_fu_3729_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_16_fu_3729_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_17_fu_3757_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_17_fu_3757_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_18_fu_3767_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_18_fu_3767_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_19_fu_3795_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_19_fu_3795_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_1_fu_3330_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_1_fu_3330_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_21_fu_3844_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_21_fu_3844_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_22_fu_3854_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_22_fu_3854_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_23_fu_3882_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_23_fu_3882_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_24_fu_3892_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_24_fu_3892_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_27_fu_4059_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_27_fu_4059_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_28_fu_4069_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_28_fu_4069_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_29_fu_4109_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_29_fu_4109_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_2_fu_3370_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_2_fu_3370_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_30_fu_4119_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_30_fu_4119_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_33_fu_4197_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_33_fu_4197_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_34_fu_4207_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_34_fu_4207_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_35_fu_4235_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_35_fu_4235_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_36_fu_4245_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_36_fu_4245_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_39_fu_4311_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_39_fu_4311_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_3_fu_3380_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_3_fu_3380_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_40_fu_4321_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_40_fu_4321_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_41_fu_4349_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_41_fu_4349_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_42_fu_4359_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_42_fu_4359_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_45_fu_4425_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_45_fu_4425_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_46_fu_4435_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_46_fu_4435_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_47_fu_4463_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_47_fu_4463_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_48_fu_4473_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_48_fu_4473_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_51_fu_4539_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_51_fu_4539_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_52_fu_4549_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_52_fu_4549_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_53_fu_4577_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_53_fu_4577_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_54_fu_4587_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_54_fu_4587_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_55_fu_4633_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_55_fu_4633_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_57_fu_4707_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_57_fu_4707_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_58_fu_4717_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_58_fu_4717_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_59_fu_4757_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_59_fu_4757_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_5_fu_3479_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_5_fu_3479_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_60_fu_4767_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_60_fu_4767_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_61_fu_4807_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_61_fu_4807_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_63_fu_4845_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_63_fu_4845_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_64_fu_4855_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_64_fu_4855_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_65_fu_4883_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_65_fu_4883_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_66_fu_4893_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_66_fu_4893_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_67_fu_4921_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_67_fu_4921_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_69_fu_4959_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_69_fu_4959_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_6_fu_3517_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_6_fu_3517_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_70_fu_4969_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_70_fu_4969_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_71_fu_4997_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_71_fu_4997_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_72_fu_5007_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_72_fu_5007_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_73_fu_5035_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_73_fu_5035_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_75_fu_5073_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_75_fu_5073_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_76_fu_5083_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_76_fu_5083_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_77_fu_5111_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_77_fu_5111_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_78_fu_5121_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_78_fu_5121_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_79_fu_5149_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_79_fu_5149_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_7_fu_3545_p2 multiplier stage mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/add_ln65_7_fu_3545_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U15/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U16/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fadd_32bkb_U29/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fadd_32bkb_U36/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-4] enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-5] enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fmul_32cud_U2/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-5] enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U17/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-5] enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fmul_32cud_U18/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-5] enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fmul_32cud_U30/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC AVAL-5] enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fmul_32cud_U37/lenet_cnn_ap_fmul_2_max_dsp_32_u/U0/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
INFO: [DRC REQP-31] enum_PREG_0_connects_CEP_GND: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/mul_ln65_1_reg_6867_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
INFO: [DRC REQP-1725] DSP_Abus_sign_bit_alert: mnist_bd_i/lenet_cnn_0/inst/grp_convolution1_fu_780/lenet_cnn_fadd_32bkb_U1/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
INFO: [DRC REQP-1725] DSP_Abus_sign_bit_alert: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U15/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
INFO: [DRC REQP-1725] DSP_Abus_sign_bit_alert: mnist_bd_i/lenet_cnn_0/inst/grp_convolution3_fu_764/lenet_cnn_fadd_32bkb_U16/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
INFO: [DRC REQP-1725] DSP_Abus_sign_bit_alert: mnist_bd_i/lenet_cnn_0/inst/grp_convolution5_fu_772/lenet_cnn_fadd_32bkb_U29/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
INFO: [DRC REQP-1725] DSP_Abus_sign_bit_alert: mnist_bd_i/lenet_cnn_0/inst/lenet_cnn_fadd_32bkb_U36/lenet_cnn_ap_fadd_3_full_dsp_32_u/U0/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 312 Warnings, 31 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./mnist_bd_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
67 Infos, 226 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:48 ; elapsed = 00:00:34 . Memory (MB): peak = 2245.707 ; gain = 565.848
INFO: [Common 17-206] Exiting Vivado at Thu Apr 18 17:25:47 2024...
