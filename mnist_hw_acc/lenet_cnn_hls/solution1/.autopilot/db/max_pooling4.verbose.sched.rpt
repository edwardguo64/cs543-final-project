

================================================================
== Vivado HLS Report for 'max_pooling4'
================================================================
* Date:           Fri Apr 19 16:13:12 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet_cnn_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.685|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3208|  3208|  3208|  3208|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  3206|  3206|         9|          2|          1|  1600|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 2, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 11 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 2 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%max_value_4 = alloca float"   --->   Operation 12 'alloca' 'max_value_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.47>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten117 = phi i11 [ 0, %0 ], [ %add_ln80, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 14 'phi' 'indvar_flatten117' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%c_0 = phi i5 [ 0, %0 ], [ %select_ln89_1, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 15 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten63 = phi i8 [ 0, %0 ], [ %select_ln81_5, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 16 'phi' 'indvar_flatten63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%h_0 = phi i3 [ 0, %0 ], [ %select_ln81_2, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 17 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten24 = phi i6 [ 0, %0 ], [ %select_ln82_4, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 18 'phi' 'indvar_flatten24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%w_0 = phi i3 [ 0, %0 ], [ %select_ln82_2, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 19 'phi' 'w_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %select_ln83_5, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 20 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %select_ln83_4, %hls_label_3_end ]" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 21 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ 0, %0 ], [ %j, %hls_label_3_end ]"   --->   Operation 22 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %h_0, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 23 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i2 %i_0 to i4" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 24 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.73ns)   --->   "%add_ln88 = add i4 %shl_ln, %zext_ln83" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 25 'add' 'add_ln88' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.88ns)   --->   "%icmp_ln80 = icmp eq i11 %indvar_flatten117, -448" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 26 'icmp' 'icmp_ln80' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.63ns)   --->   "%add_ln80 = add i11 %indvar_flatten117, 1" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 27 'add' 'add_ln80' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln80, label %2, label %hls_label_3_begin" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.55ns)   --->   "%icmp_ln81 = icmp eq i8 %indvar_flatten63, 100" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 29 'icmp' 'icmp_ln81' <Predicate = (!icmp_ln80)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.98ns)   --->   "%select_ln89 = select i1 %icmp_ln81, i3 0, i3 %h_0" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 30 'select' 'select_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.97ns)   --->   "%xor_ln89 = xor i1 %icmp_ln81, true" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 31 'xor' 'xor_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.30ns)   --->   "%icmp_ln83 = icmp eq i4 %indvar_flatten, 4" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 32 'icmp' 'icmp_ln83' <Predicate = (!icmp_ln80)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node and_ln81_3)   --->   "%and_ln89_5 = and i1 %icmp_ln83, %xor_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 33 'and' 'and_ln89_5' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.42ns)   --->   "%icmp_ln82 = icmp eq i6 %indvar_flatten24, 20" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 34 'icmp' 'icmp_ln82' <Predicate = (!icmp_ln80)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.97ns)   --->   "%and_ln89_6 = and i1 %icmp_ln82, %xor_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 35 'and' 'and_ln89_6' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.65ns)   --->   "%h = add i3 1, %select_ln89" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 36 'add' 'h' <Predicate = (!icmp_ln80)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node or_ln81_1)   --->   "%xor_ln81 = xor i1 %icmp_ln82, true" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 37 'xor' 'xor_ln81' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln81_1 = or i1 %icmp_ln81, %xor_ln81" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 38 'or' 'or_ln81_1' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln81_3 = and i1 %and_ln89_5, %or_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 39 'and' 'and_ln81_3' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln82_1)   --->   "%or_ln82 = or i1 %and_ln81_3, %and_ln89_6" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 40 'or' 'or_ln82' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln82_1 = or i1 %or_ln82, %icmp_ln81" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 41 'or' 'or_ln82_1' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.99ns)   --->   "%select_ln82 = select i1 %or_ln82_1, i2 0, i2 %i_0" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 42 'select' 'select_ln82' <Predicate = (!icmp_ln80)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.02>
ST_3 : Operation 43 [1/1] (1.78ns)   --->   "%c = add i5 1, %c_0" [lenet_cnn_hls/lenet_cnn.cpp:80]   --->   Operation 43 'add' 'c' <Predicate = (!icmp_ln80 & icmp_ln81)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (1.21ns)   --->   "%select_ln89_1 = select i1 %icmp_ln81, i5 %c, i5 %c_0" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 44 'select' 'select_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %select_ln89_1, i3 0)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 45 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i8 %tmp_6 to i9" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 46 'zext' 'zext_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_7 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %select_ln89_1, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 47 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i6 %tmp_7 to i9" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 48 'zext' 'zext_ln89_2' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln89 = add i9 %zext_ln89_2, %zext_ln89_1" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 49 'add' 'add_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node select_ln81_1)   --->   "%select_ln89_2 = select i1 %icmp_ln81, i4 0, i4 %shl_ln" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 50 'select' 'select_ln89_2' <Predicate = (!icmp_ln80 & !and_ln89_6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_1)   --->   "%trunc_ln83 = trunc i2 %i_0 to i1" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 51 'trunc' 'trunc_ln83' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_1)   --->   "%and_ln89_2 = and i1 %trunc_ln83, %xor_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 52 'and' 'and_ln89_2' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln82_3)   --->   "%select_ln89_3 = select i1 %icmp_ln81, i4 0, i4 %add_ln88" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 53 'select' 'select_ln89_3' <Predicate = (!icmp_ln80 & !and_ln89_6 & !and_ln81_3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.95ns)   --->   "%icmp_ln92 = icmp eq i2 %i_0, 1" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 54 'icmp' 'icmp_ln92' <Predicate = (!icmp_ln80)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_3)   --->   "%and_ln89_3 = and i1 %icmp_ln92, %xor_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 55 'and' 'and_ln89_3' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.95ns)   --->   "%icmp_ln84 = icmp eq i2 %j_0, -2" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 56 'icmp' 'icmp_ln84' <Predicate = (!icmp_ln80)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln82_2)   --->   "%and_ln89_4 = and i1 %icmp_ln84, %xor_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 57 'and' 'and_ln89_4' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.97ns)   --->   "%or_ln81 = or i1 %and_ln89_6, %icmp_ln81" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 58 'or' 'or_ln81' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.98ns)   --->   "%select_ln81 = select i1 %or_ln81, i3 0, i3 %w_0" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 59 'select' 'select_ln81' <Predicate = (!icmp_ln80)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%shl_ln88_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %h, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 60 'bitconcatenate' 'shl_ln88_mid1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln81_1 = select i1 %and_ln89_6, i4 %shl_ln88_mid1, i4 %select_ln89_2" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 61 'select' 'select_ln81_1' <Predicate = (!icmp_ln80)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.98ns)   --->   "%select_ln81_2 = select i1 %and_ln89_6, i3 %h, i3 %select_ln89" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 62 'select' 'select_ln81_2' <Predicate = (!icmp_ln80)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%shl_ln88_s = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %w_0, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 63 'bitconcatenate' 'shl_ln88_s' <Predicate = (!icmp_ln80 & !and_ln81_3)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%select_ln81_3 = select i1 %or_ln81, i4 0, i4 %shl_ln88_s" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 64 'select' 'select_ln81_3' <Predicate = (!icmp_ln80 & !and_ln81_3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_1)   --->   "%and_ln81 = and i1 %and_ln89_2, %or_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 65 'and' 'and_ln81' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln82_3)   --->   "%select_ln81_4 = select i1 %and_ln89_6, i4 %shl_ln88_mid1, i4 %select_ln89_3" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 66 'select' 'select_ln81_4' <Predicate = (!icmp_ln80 & !and_ln81_3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_3)   --->   "%and_ln81_1 = and i1 %and_ln89_3, %or_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 67 'and' 'and_ln81_1' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node and_ln82_2)   --->   "%and_ln81_2 = and i1 %and_ln89_4, %or_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 68 'and' 'and_ln81_2' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.65ns)   --->   "%w = add i3 1, %select_ln81" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 69 'add' 'w' <Predicate = (!icmp_ln80)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%shl_ln88_1_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %w, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 70 'bitconcatenate' 'shl_ln88_1_mid1' <Predicate = (!icmp_ln80 & and_ln81_3)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%select_ln82_1 = select i1 %and_ln81_3, i4 %shl_ln88_1_mid1, i4 %select_ln81_3" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 71 'select' 'select_ln82_1' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.97ns)   --->   "%xor_ln82 = xor i1 %and_ln81_3, true" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 72 'xor' 'xor_ln82' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_1)   --->   "%and_ln82 = and i1 %and_ln81, %xor_ln82" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 73 'and' 'and_ln82' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln82_3 = select i1 %and_ln81_3, i4 %select_ln81_1, i4 %select_ln81_4" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 74 'select' 'select_ln82_3' <Predicate = (!icmp_ln80)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_3)   --->   "%and_ln82_1 = and i1 %and_ln81_1, %xor_ln82" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 75 'and' 'and_ln82_1' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln82_2 = and i1 %and_ln81_2, %xor_ln82" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 76 'and' 'and_ln82_2' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (1.56ns)   --->   "%i = add i2 1, %select_ln82" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 77 'add' 'i' <Predicate = (!icmp_ln80)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln83)   --->   "%or_ln83 = or i1 %and_ln82_2, %and_ln81_3" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 78 'or' 'or_ln83' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln83)   --->   "%or_ln83_1 = or i1 %or_ln83, %or_ln81" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 79 'or' 'or_ln83_1' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln83 = select i1 %or_ln83_1, i2 0, i2 %j_0" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 80 'select' 'select_ln83' <Predicate = (!icmp_ln80)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln83_1)   --->   "%trunc_ln83_1 = trunc i2 %i to i1" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 81 'trunc' 'trunc_ln83_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln83_1 = select i1 %and_ln82_2, i1 %trunc_ln83_1, i1 %and_ln82" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 82 'select' 'select_ln83_1' <Predicate = (!icmp_ln80)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i2 %i to i4" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 83 'zext' 'zext_ln83_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (1.73ns)   --->   "%add_ln88_2 = add i4 %zext_ln83_1, %select_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 84 'add' 'add_ln88_2' <Predicate = (!icmp_ln80)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln83_2 = select i1 %and_ln82_2, i4 %add_ln88_2, i4 %select_ln82_3" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 85 'select' 'select_ln83_2' <Predicate = (!icmp_ln80)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln83_2 = zext i4 %select_ln83_2 to i9" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 86 'zext' 'zext_ln83_2' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (3.69ns) (root node of TernaryAdder)   --->   "%add_ln89_1 = add i9 %add_ln89, %zext_ln83_2" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 87 'add' 'add_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 3.69> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 88 [1/1] (0.95ns)   --->   "%icmp_ln92_2 = icmp eq i2 %select_ln82, 0" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 88 'icmp' 'icmp_ln92_2' <Predicate = (!icmp_ln80)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln83_3 = select i1 %and_ln82_2, i1 %icmp_ln92_2, i1 %and_ln82_1" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 89 'select' 'select_ln83_3' <Predicate = (!icmp_ln80)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.99ns)   --->   "%select_ln83_4 = select i1 %and_ln82_2, i2 %i, i2 %select_ln82" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 90 'select' 'select_ln83_4' <Predicate = (!icmp_ln80)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%zext_ln84 = zext i2 %select_ln83 to i4" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 91 'zext' 'zext_ln84' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (1.73ns) (out node of the LUT)   --->   "%add_ln88_1 = add i4 %zext_ln84, %select_ln82_1" [lenet_cnn_hls/lenet_cnn.cpp:88]   --->   Operation 92 'add' 'add_ln88_1' <Predicate = (!icmp_ln80)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.95ns)   --->   "%icmp_ln92_1 = icmp eq i2 %select_ln83, 1" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 93 'icmp' 'icmp_ln92_1' <Predicate = (!icmp_ln80)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln92 = and i1 %select_ln83_3, %icmp_ln92_1" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 94 'and' 'and_ln92' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %and_ln92, label %1, label %hls_label_3_end" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 95 'br' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.73ns)   --->   "%add_ln83_1 = add i4 %indvar_flatten, 1" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 96 'add' 'add_ln83_1' <Predicate = (!icmp_ln80 & !or_ln82_1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (1.02ns)   --->   "%select_ln83_5 = select i1 %or_ln82_1, i4 1, i4 %add_ln83_1" [lenet_cnn_hls/lenet_cnn.cpp:83]   --->   Operation 97 'select' 'select_ln83_5' <Predicate = (!icmp_ln80)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (1.82ns)   --->   "%add_ln82_1 = add i6 %indvar_flatten24, 1" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 98 'add' 'add_ln82_1' <Predicate = (!icmp_ln80)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (1.18ns)   --->   "%select_ln82_4 = select i1 %or_ln81, i6 1, i6 %add_ln82_1" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 99 'select' 'select_ln82_4' <Predicate = (!icmp_ln80)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (1.91ns)   --->   "%add_ln81_1 = add i8 %indvar_flatten63, 1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 100 'add' 'add_ln81_1' <Predicate = (!icmp_ln80 & !icmp_ln81)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (1.24ns)   --->   "%select_ln81_5 = select i1 %icmp_ln81, i8 1, i8 %add_ln81_1" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 101 'select' 'select_ln81_5' <Predicate = (!icmp_ln80)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.39>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i5 %select_ln89_1 to i8" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 102 'zext' 'zext_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %select_ln89_1, i2 0)" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 103 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i7 %tmp_8 to i8" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 104 'zext' 'zext_ln93' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln93 = add i8 %zext_ln89, %zext_ln93" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 105 'add' 'add_ln93' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i3 %select_ln81_2 to i8" [lenet_cnn_hls/lenet_cnn.cpp:81]   --->   Operation 106 'zext' 'zext_ln81' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln93_1 = add i8 %add_ln93, %zext_ln81" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 107 'add' 'add_ln93_1' <Predicate = (!icmp_ln80)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln93_1 = zext i8 %add_ln93_1 to i10" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 108 'zext' 'zext_ln93_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%p_shl1_cast = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %add_ln93_1, i2 0)" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 109 'bitconcatenate' 'p_shl1_cast' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln93_2 = add i10 %zext_ln93_1, %p_shl1_cast" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 110 'add' 'add_ln93_2' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 111 [1/1] (0.98ns)   --->   "%select_ln82_2 = select i1 %and_ln81_3, i3 %w, i3 %select_ln81" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 111 'select' 'select_ln82_2' <Predicate = (!icmp_ln80)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i3 %select_ln82_2 to i10" [lenet_cnn_hls/lenet_cnn.cpp:82]   --->   Operation 112 'zext' 'zext_ln82' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (3.72ns) (root node of TernaryAdder)   --->   "%add_ln93_3 = add i10 %add_ln93_2, %zext_ln82" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 113 'add' 'add_ln93_3' <Predicate = (!icmp_ln80)> <Delay = 3.72> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln93_2 = zext i10 %add_ln93_3 to i64" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 114 'zext' 'zext_ln93_2' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [400 x float]* %output_r, i64 0, i64 %zext_ln93_2" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 115 'getelementptr' 'output_addr' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%p_shl_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln89_1, i3 0)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 116 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_9 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln89_1, i1 false)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 117 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln89_3 = zext i10 %tmp_9 to i12" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 118 'zext' 'zext_ln89_3' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln89_2 = add i12 %zext_ln89_3, %p_shl_cast" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 119 'add' 'add_ln89_2' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln89_4 = zext i4 %add_ln88_1 to i12" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 120 'zext' 'zext_ln89_4' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln89_3 = add i12 %add_ln89_2, %zext_ln89_4" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 121 'add' 'add_ln89_3' <Predicate = (!icmp_ln80)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln89_5 = zext i12 %add_ln89_3 to i64" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 122 'zext' 'zext_ln89_5' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [1600 x float]* %input_r, i64 0, i64 %zext_ln89_5" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 123 'getelementptr' 'input_addr' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 124 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 124 'load' 'input_load' <Predicate = (!icmp_ln80)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_4 : Operation 125 [1/1] (1.56ns)   --->   "%j = add i2 %select_ln83, 1" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 125 'add' 'j' <Predicate = (!icmp_ln80)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.68>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%max_value_4_load = load float* %max_value_4" [lenet_cnn_hls/lenet_cnn.cpp:86]   --->   Operation 126 'load' 'max_value_4_load' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node max_value)   --->   "%trunc_ln84 = trunc i2 %select_ln83 to i1" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 127 'trunc' 'trunc_ln84' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node max_value)   --->   "%or_ln86 = or i1 %trunc_ln84, %select_ln83_1" [lenet_cnn_hls/lenet_cnn.cpp:86]   --->   Operation 128 'or' 'or_ln86' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 129 [1/1] (0.97ns) (out node of the LUT)   --->   "%max_value = select i1 %or_ln86, float %max_value_4_load, float 0xC26D1A94A0000000" [lenet_cnn_hls/lenet_cnn.cpp:86]   --->   Operation 129 'select' 'max_value' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 130 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 130 'load' 'input_load' <Predicate = (!icmp_ln80)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_5 : Operation 131 [2/2] (5.43ns)   --->   "%tmp_3 = fcmp ogt float %max_value, %input_load" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 131 'fcmp' 'tmp_3' <Predicate = (!icmp_ln80)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.10>
ST_6 : Operation 132 [1/1] (0.00ns)   --->   "%bitcast_ln89 = bitcast float %max_value to i32" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 132 'bitcast' 'bitcast_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln89, i32 23, i32 30)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 133 'partselect' 'tmp' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i32 %bitcast_ln89 to i23" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 134 'trunc' 'trunc_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "%bitcast_ln89_1 = bitcast float %input_load to i32" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 135 'bitcast' 'bitcast_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln89_1, i32 23, i32 30)" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 136 'partselect' 'tmp_2' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln89_1 = trunc i32 %bitcast_ln89_1 to i23" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 137 'trunc' 'trunc_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (1.55ns)   --->   "%icmp_ln89 = icmp ne i8 %tmp, -1" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 138 'icmp' 'icmp_ln89' <Predicate = (!icmp_ln80)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 139 [1/1] (2.44ns)   --->   "%icmp_ln89_1 = icmp eq i23 %trunc_ln89, 0" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 139 'icmp' 'icmp_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node and_ln89_1)   --->   "%or_ln89 = or i1 %icmp_ln89_1, %icmp_ln89" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 140 'or' 'or_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 141 [1/1] (1.55ns)   --->   "%icmp_ln89_2 = icmp ne i8 %tmp_2, -1" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 141 'icmp' 'icmp_ln89_2' <Predicate = (!icmp_ln80)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 142 [1/1] (2.44ns)   --->   "%icmp_ln89_3 = icmp eq i23 %trunc_ln89_1, 0" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 142 'icmp' 'icmp_ln89_3' <Predicate = (!icmp_ln80)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node and_ln89_1)   --->   "%or_ln89_1 = or i1 %icmp_ln89_3, %icmp_ln89_2" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 143 'or' 'or_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln89_1)   --->   "%and_ln89 = and i1 %or_ln89, %or_ln89_1" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 144 'and' 'and_ln89' <Predicate = (!icmp_ln80)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 145 [1/2] (5.43ns)   --->   "%tmp_3 = fcmp ogt float %max_value, %input_load" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 145 'fcmp' 'tmp_3' <Predicate = (!icmp_ln80)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 146 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln89_1 = and i1 %and_ln89, %tmp_3" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 146 'and' 'and_ln89_1' <Predicate = (!icmp_ln80)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 147 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_value_1 = select i1 %and_ln89_1, float %max_value, float %input_load" [lenet_cnn_hls/lenet_cnn.cpp:89]   --->   Operation 147 'select' 'max_value_1' <Predicate = (!icmp_ln80)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 148 [1/1] (0.00ns)   --->   "store float %max_value_1, float* %max_value_4" [lenet_cnn_hls/lenet_cnn.cpp:92]   --->   Operation 148 'store' <Predicate = (!icmp_ln80)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 0.00>

State 8 <SV = 7> <Delay = 5.43>
ST_8 : Operation 149 [2/2] (5.43ns)   --->   "%tmp_5 = fcmp ogt float %max_value_1, 0.000000e+00" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 149 'fcmp' 'tmp_5' <Predicate = (and_ln92)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.40>
ST_9 : Operation 150 [1/1] (0.00ns)   --->   "%bitcast_ln5 = bitcast float %max_value_1 to i32" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 150 'bitcast' 'bitcast_ln5' <Predicate = (and_ln92)> <Delay = 0.00>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln5, i32 23, i32 30)" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 151 'partselect' 'tmp_4' <Predicate = (and_ln92)> <Delay = 0.00>
ST_9 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln5 = trunc i32 %bitcast_ln5 to i23" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 152 'trunc' 'trunc_ln5' <Predicate = (and_ln92)> <Delay = 0.00>
ST_9 : Operation 153 [1/1] (1.55ns)   --->   "%icmp_ln5 = icmp ne i8 %tmp_4, -1" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 153 'icmp' 'icmp_ln5' <Predicate = (and_ln92)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 154 [1/1] (2.44ns)   --->   "%icmp_ln5_1 = icmp eq i23 %trunc_ln5, 0" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 154 'icmp' 'icmp_ln5_1' <Predicate = (and_ln92)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node select_ln5)   --->   "%or_ln5 = or i1 %icmp_ln5_1, %icmp_ln5" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 155 'or' 'or_ln5' <Predicate = (and_ln92)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 156 [1/2] (5.43ns)   --->   "%tmp_5 = fcmp ogt float %max_value_1, 0.000000e+00" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 156 'fcmp' 'tmp_5' <Predicate = (and_ln92)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node select_ln5)   --->   "%and_ln5 = and i1 %or_ln5, %tmp_5" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 157 'and' 'and_ln5' <Predicate = (and_ln92)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 158 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln5 = select i1 %and_ln5, float %max_value_1, float 0.000000e+00" [lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 158 'select' 'select_ln5' <Predicate = (and_ln92)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.25>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1600, i64 1600, i64 1600)"   --->   Operation 159 'speclooptripcount' 'empty_13' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 160 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [lenet_cnn_hls/lenet_cnn.cpp:85]   --->   Operation 161 'specpipeline' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (3.25ns)   --->   "store float %select_ln5, float* %output_addr, align 4" [lenet_cnn_hls/lenet_cnn.cpp:93]   --->   Operation 162 'store' <Predicate = (and_ln92)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_10 : Operation 163 [1/1] (0.00ns)   --->   "br label %hls_label_3_end" [lenet_cnn_hls/lenet_cnn.cpp:94]   --->   Operation 163 'br' <Predicate = (and_ln92)> <Delay = 0.00>
ST_10 : Operation 164 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_1)" [lenet_cnn_hls/lenet_cnn.cpp:95]   --->   Operation 164 'specregionend' 'empty' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet_cnn_hls/lenet_cnn.cpp:84]   --->   Operation 165 'br' <Predicate = (!icmp_ln80)> <Delay = 0.00>

State 11 <SV = 2> <Delay = 0.00>
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "ret void" [lenet_cnn_hls/lenet_cnn.cpp:100]   --->   Operation 166 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten117', lenet_cnn_hls/lenet_cnn.cpp:80) with incoming values : ('add_ln80', lenet_cnn_hls/lenet_cnn.cpp:80) [6]  (1.77 ns)

 <State 2>: 5.48ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten63', lenet_cnn_hls/lenet_cnn.cpp:81) with incoming values : ('select_ln81_5', lenet_cnn_hls/lenet_cnn.cpp:81) [8]  (0 ns)
	'icmp' operation ('icmp_ln81', lenet_cnn_hls/lenet_cnn.cpp:81) [25]  (1.55 ns)
	'or' operation ('or_ln81_1', lenet_cnn_hls/lenet_cnn.cpp:81) [64]  (0.978 ns)
	'and' operation ('and_ln81_3', lenet_cnn_hls/lenet_cnn.cpp:81) [69]  (0.978 ns)
	'or' operation ('or_ln82', lenet_cnn_hls/lenet_cnn.cpp:82) [71]  (0 ns)
	'or' operation ('or_ln82_1', lenet_cnn_hls/lenet_cnn.cpp:82) [72]  (0.978 ns)
	'select' operation ('select_ln82', lenet_cnn_hls/lenet_cnn.cpp:82) [73]  (0.993 ns)

 <State 3>: 8.02ns
The critical path consists of the following:
	'add' operation ('i', lenet_cnn_hls/lenet_cnn.cpp:83) [86]  (1.56 ns)
	'add' operation ('add_ln88_2', lenet_cnn_hls/lenet_cnn.cpp:88) [93]  (1.74 ns)
	'select' operation ('select_ln83_2', lenet_cnn_hls/lenet_cnn.cpp:83) [94]  (1.02 ns)
	'add' operation ('add_ln89_1', lenet_cnn_hls/lenet_cnn.cpp:89) [96]  (3.7 ns)

 <State 4>: 7.4ns
The critical path consists of the following:
	'add' operation ('add_ln93', lenet_cnn_hls/lenet_cnn.cpp:93) [36]  (0 ns)
	'add' operation ('add_ln93_1', lenet_cnn_hls/lenet_cnn.cpp:93) [57]  (3.67 ns)
	'add' operation ('add_ln93_2', lenet_cnn_hls/lenet_cnn.cpp:93) [60]  (0 ns)
	'add' operation ('add_ln93_3', lenet_cnn_hls/lenet_cnn.cpp:93) [78]  (3.73 ns)

 <State 5>: 8.69ns
The critical path consists of the following:
	'load' operation ('input_load', lenet_cnn_hls/lenet_cnn.cpp:89) on array 'input_r' [115]  (3.25 ns)
	'fcmp' operation ('tmp_3', lenet_cnn_hls/lenet_cnn.cpp:89) [129]  (5.43 ns)

 <State 6>: 7.11ns
The critical path consists of the following:
	'fcmp' operation ('tmp_3', lenet_cnn_hls/lenet_cnn.cpp:89) [129]  (5.43 ns)
	'and' operation ('and_ln89_1', lenet_cnn_hls/lenet_cnn.cpp:89) [130]  (0.978 ns)
	'select' operation ('max_value', lenet_cnn_hls/lenet_cnn.cpp:89) [131]  (0.698 ns)

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93) [143]  (5.43 ns)

 <State 9>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93) [143]  (5.43 ns)
	'and' operation ('and_ln5', lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93) [144]  (0 ns)
	'select' operation ('input', lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93) [145]  (0.978 ns)

 <State 10>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln93', lenet_cnn_hls/lenet_cnn.cpp:93) of variable 'input', lenet_cnn_hls/lenet_cnn.cpp:5->lenet_cnn_hls/lenet_cnn.cpp:93 on array 'output_r' [146]  (3.25 ns)

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
