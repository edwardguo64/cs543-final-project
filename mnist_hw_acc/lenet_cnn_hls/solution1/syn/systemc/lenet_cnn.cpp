// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "lenet_cnn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic lenet_cnn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic lenet_cnn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<90> lenet_cnn::ap_ST_fsm_state1 = "1";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state2 = "10";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state3 = "100";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state4 = "1000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state5 = "10000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state6 = "100000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state7 = "1000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state8 = "10000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state19 = "1000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state20 = "10000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state21 = "100000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state22 = "1000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state23 = "10000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state24 = "100000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state25 = "1000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state26 = "10000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp1_stage0 = "100000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state30 = "1000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state31 = "10000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state32 = "100000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state33 = "1000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state34 = "10000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state35 = "100000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state36 = "1000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state37 = "10000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp2_stage0 = "100000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state41 = "1000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state42 = "10000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state43 = "100000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state44 = "1000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state45 = "10000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state46 = "100000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state47 = "1000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state48 = "10000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp3_stage0 = "100000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state52 = "1000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state53 = "10000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state54 = "100000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp4_stage0 = "100000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state63 = "1000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state64 = "10000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state65 = "100000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state66 = "1000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state67 = "10000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state68 = "100000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state69 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state70 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp5_stage0 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state74 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state75 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state76 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state77 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state78 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state79 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state80 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state81 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp6_stage0 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp7_stage0 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state96 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state97 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state98 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state99 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state100 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state101 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state102 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state103 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state104 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state105 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp8_stage0 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state119 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_pp9_stage0 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state123 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state124 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state125 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state126 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<90> lenet_cnn::ap_ST_fsm_state127 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> lenet_cnn::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool lenet_cnn::ap_const_boolean_1 = true;
const sc_lv<32> lenet_cnn::ap_const_lv32_1 = "1";
const bool lenet_cnn::ap_const_boolean_0 = false;
const sc_lv<1> lenet_cnn::ap_const_lv1_0 = "0";
const sc_lv<32> lenet_cnn::ap_const_lv32_A = "1010";
const sc_lv<32> lenet_cnn::ap_const_lv32_11 = "10001";
const sc_lv<32> lenet_cnn::ap_const_lv32_13 = "10011";
const sc_lv<32> lenet_cnn::ap_const_lv32_1A = "11010";
const sc_lv<32> lenet_cnn::ap_const_lv32_1C = "11100";
const sc_lv<32> lenet_cnn::ap_const_lv32_23 = "100011";
const sc_lv<32> lenet_cnn::ap_const_lv32_25 = "100101";
const sc_lv<32> lenet_cnn::ap_const_lv32_2C = "101100";
const sc_lv<32> lenet_cnn::ap_const_lv32_2E = "101110";
const sc_lv<32> lenet_cnn::ap_const_lv32_35 = "110101";
const sc_lv<32> lenet_cnn::ap_const_lv32_37 = "110111";
const sc_lv<32> lenet_cnn::ap_const_lv32_3E = "111110";
const sc_lv<32> lenet_cnn::ap_const_lv32_40 = "1000000";
const sc_lv<32> lenet_cnn::ap_const_lv32_47 = "1000111";
const sc_lv<32> lenet_cnn::ap_const_lv32_53 = "1010011";
const sc_lv<32> lenet_cnn::ap_const_lv32_59 = "1011001";
const int lenet_cnn::C_S_AXI_DATA_WIDTH = "100000";
const int lenet_cnn::C_M_AXI_DATA_IMAGE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_IMAGE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_IMAGE_CACHE_VALUE = "11";
const int lenet_cnn::C_M_AXI_DATA_WIDTH = "100000";
const int lenet_cnn::C_M_AXI_DATA_PARAMETERS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_PARAMETERS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_PARAMETERS_CACHE_VALUE = "11";
const int lenet_cnn::C_M_AXI_DATA_FC6_OUTPUT_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_FC6_OUTPUT_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int lenet_cnn::C_M_AXI_DATA_FC6_OUTPUT_CACHE_VALUE = "11";
const sc_lv<32> lenet_cnn::ap_const_lv32_7 = "111";
const sc_lv<32> lenet_cnn::ap_const_lv32_8 = "1000";
const sc_lv<32> lenet_cnn::ap_const_lv32_9 = "1001";
const sc_lv<32> lenet_cnn::ap_const_lv32_12 = "10010";
const sc_lv<32> lenet_cnn::ap_const_lv32_1B = "11011";
const sc_lv<32> lenet_cnn::ap_const_lv32_24 = "100100";
const sc_lv<32> lenet_cnn::ap_const_lv32_2D = "101101";
const sc_lv<32> lenet_cnn::ap_const_lv32_36 = "110110";
const sc_lv<32> lenet_cnn::ap_const_lv32_3F = "111111";
const sc_lv<32> lenet_cnn::ap_const_lv32_52 = "1010010";
const sc_lv<1> lenet_cnn::ap_const_lv1_1 = "1";
const sc_lv<32> lenet_cnn::ap_const_lv32_54 = "1010100";
const sc_lv<32> lenet_cnn::ap_const_lv32_10 = "10000";
const sc_lv<32> lenet_cnn::ap_const_lv32_19 = "11001";
const sc_lv<32> lenet_cnn::ap_const_lv32_22 = "100010";
const sc_lv<32> lenet_cnn::ap_const_lv32_2B = "101011";
const sc_lv<32> lenet_cnn::ap_const_lv32_34 = "110100";
const sc_lv<32> lenet_cnn::ap_const_lv32_3D = "111101";
const sc_lv<32> lenet_cnn::ap_const_lv32_46 = "1000110";
const sc_lv<32> lenet_cnn::ap_const_lv32_51 = "1010001";
const sc_lv<8> lenet_cnn::ap_const_lv8_0 = "00000000";
const sc_lv<16> lenet_cnn::ap_const_lv16_0 = "0000000000000000";
const sc_lv<3> lenet_cnn::ap_const_lv3_0 = "000";
const sc_lv<12> lenet_cnn::ap_const_lv12_0 = "000000000000";
const sc_lv<5> lenet_cnn::ap_const_lv5_0 = "00000";
const sc_lv<7> lenet_cnn::ap_const_lv7_0 = "0000000";
const sc_lv<11> lenet_cnn::ap_const_lv11_0 = "00000000000";
const sc_lv<4> lenet_cnn::ap_const_lv4_0 = "0000";
const sc_lv<32> lenet_cnn::ap_const_lv32_4C = "1001100";
const sc_lv<32> lenet_cnn::ap_const_lv32_4D = "1001101";
const sc_lv<32> lenet_cnn::ap_const_lv32_50 = "1010000";
const sc_lv<32> lenet_cnn::ap_const_lv32_48 = "1001000";
const sc_lv<32> lenet_cnn::ap_const_lv32_49 = "1001001";
const sc_lv<32> lenet_cnn::ap_const_lv32_4A = "1001010";
const sc_lv<32> lenet_cnn::ap_const_lv32_4B = "1001011";
const sc_lv<32> lenet_cnn::ap_const_lv32_4E = "1001110";
const sc_lv<32> lenet_cnn::ap_const_lv32_4F = "1001111";
const sc_lv<32> lenet_cnn::ap_const_lv32_96 = "10010110";
const sc_lv<2> lenet_cnn::ap_const_lv2_0 = "00";
const sc_lv<32> lenet_cnn::ap_const_lv32_6 = "110";
const sc_lv<32> lenet_cnn::ap_const_lv32_960 = "100101100000";
const sc_lv<32> lenet_cnn::ap_const_lv32_BB80 = "1011101110000000";
const sc_lv<32> lenet_cnn::ap_const_lv32_78 = "1111000";
const sc_lv<32> lenet_cnn::ap_const_lv32_4B0 = "10010110000";
const sc_lv<4> lenet_cnn::ap_const_lv4_F = "1111";
const sc_lv<32> lenet_cnn::ap_const_lv32_2 = "10";
const sc_lv<32> lenet_cnn::ap_const_lv32_1F = "11111";
const sc_lv<8> lenet_cnn::ap_const_lv8_96 = "10010110";
const sc_lv<8> lenet_cnn::ap_const_lv8_1 = "1";
const sc_lv<8> lenet_cnn::ap_const_lv8_19 = "11001";
const sc_lv<16> lenet_cnn::ap_const_lv16_148 = "101001000";
const sc_lv<32> lenet_cnn::ap_const_lv32_D = "1101";
const sc_lv<32> lenet_cnn::ap_const_lv32_F = "1111";
const sc_lv<5> lenet_cnn::ap_const_lv5_19 = "11001";
const sc_lv<5> lenet_cnn::ap_const_lv5_7 = "111";
const sc_lv<12> lenet_cnn::ap_const_lv12_34 = "110100";
const sc_lv<32> lenet_cnn::ap_const_lv32_B = "1011";
const sc_lv<5> lenet_cnn::ap_const_lv5_5 = "101";
const sc_lv<31> lenet_cnn::ap_const_lv31_96 = "10010110";
const sc_lv<3> lenet_cnn::ap_const_lv3_6 = "110";
const sc_lv<3> lenet_cnn::ap_const_lv3_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_9C = "10011100";
const sc_lv<12> lenet_cnn::ap_const_lv12_960 = "100101100000";
const sc_lv<12> lenet_cnn::ap_const_lv12_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_9FC = "100111111100";
const sc_lv<5> lenet_cnn::ap_const_lv5_10 = "10000";
const sc_lv<5> lenet_cnn::ap_const_lv5_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_A0C = "101000001100";
const sc_lv<16> lenet_cnn::ap_const_lv16_BB80 = "1011101110000000";
const sc_lv<16> lenet_cnn::ap_const_lv16_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_C58C = "1100010110001100";
const sc_lv<7> lenet_cnn::ap_const_lv7_78 = "1111000";
const sc_lv<7> lenet_cnn::ap_const_lv7_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_C604 = "1100011000000100";
const sc_lv<11> lenet_cnn::ap_const_lv11_4B0 = "10010110000";
const sc_lv<11> lenet_cnn::ap_const_lv11_1 = "1";
const sc_lv<31> lenet_cnn::ap_const_lv31_CAB4 = "1100101010110100";
const sc_lv<4> lenet_cnn::ap_const_lv4_A = "1010";
const sc_lv<4> lenet_cnn::ap_const_lv4_1 = "1";

lenet_cnn::lenet_cnn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_cnn_CTL_s_axi_U = new lenet_cnn_CTL_s_axi<C_S_AXI_CTL_ADDR_WIDTH,C_S_AXI_CTL_DATA_WIDTH>("lenet_cnn_CTL_s_axi_U");
    lenet_cnn_CTL_s_axi_U->AWVALID(s_axi_CTL_AWVALID);
    lenet_cnn_CTL_s_axi_U->AWREADY(s_axi_CTL_AWREADY);
    lenet_cnn_CTL_s_axi_U->AWADDR(s_axi_CTL_AWADDR);
    lenet_cnn_CTL_s_axi_U->WVALID(s_axi_CTL_WVALID);
    lenet_cnn_CTL_s_axi_U->WREADY(s_axi_CTL_WREADY);
    lenet_cnn_CTL_s_axi_U->WDATA(s_axi_CTL_WDATA);
    lenet_cnn_CTL_s_axi_U->WSTRB(s_axi_CTL_WSTRB);
    lenet_cnn_CTL_s_axi_U->ARVALID(s_axi_CTL_ARVALID);
    lenet_cnn_CTL_s_axi_U->ARREADY(s_axi_CTL_ARREADY);
    lenet_cnn_CTL_s_axi_U->ARADDR(s_axi_CTL_ARADDR);
    lenet_cnn_CTL_s_axi_U->RVALID(s_axi_CTL_RVALID);
    lenet_cnn_CTL_s_axi_U->RREADY(s_axi_CTL_RREADY);
    lenet_cnn_CTL_s_axi_U->RDATA(s_axi_CTL_RDATA);
    lenet_cnn_CTL_s_axi_U->RRESP(s_axi_CTL_RRESP);
    lenet_cnn_CTL_s_axi_U->BVALID(s_axi_CTL_BVALID);
    lenet_cnn_CTL_s_axi_U->BREADY(s_axi_CTL_BREADY);
    lenet_cnn_CTL_s_axi_U->BRESP(s_axi_CTL_BRESP);
    lenet_cnn_CTL_s_axi_U->ACLK(ap_clk);
    lenet_cnn_CTL_s_axi_U->ARESET(ap_rst_n_inv);
    lenet_cnn_CTL_s_axi_U->ACLK_EN(ap_var_for_const0);
    lenet_cnn_CTL_s_axi_U->ap_start(ap_start);
    lenet_cnn_CTL_s_axi_U->interrupt(interrupt);
    lenet_cnn_CTL_s_axi_U->ap_ready(ap_ready);
    lenet_cnn_CTL_s_axi_U->ap_done(ap_done);
    lenet_cnn_CTL_s_axi_U->ap_idle(ap_idle);
    lenet_cnn_CTL_s_axi_U->image_r(image_r);
    lenet_cnn_CTL_s_axi_U->parameters(parameters);
    lenet_cnn_CTL_s_axi_U->fc6_output(fc6_output);
    lenet_cnn_DATA_IMAGE_m_axi_U = new lenet_cnn_DATA_IMAGE_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_IMAGE_ID_WIDTH,C_M_AXI_DATA_IMAGE_ADDR_WIDTH,C_M_AXI_DATA_IMAGE_DATA_WIDTH,C_M_AXI_DATA_IMAGE_AWUSER_WIDTH,C_M_AXI_DATA_IMAGE_ARUSER_WIDTH,C_M_AXI_DATA_IMAGE_WUSER_WIDTH,C_M_AXI_DATA_IMAGE_RUSER_WIDTH,C_M_AXI_DATA_IMAGE_BUSER_WIDTH,C_M_AXI_DATA_IMAGE_USER_VALUE,C_M_AXI_DATA_IMAGE_PROT_VALUE,C_M_AXI_DATA_IMAGE_CACHE_VALUE>("lenet_cnn_DATA_IMAGE_m_axi_U");
    lenet_cnn_DATA_IMAGE_m_axi_U->AWVALID(m_axi_DATA_IMAGE_AWVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWREADY(m_axi_DATA_IMAGE_AWREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWADDR(m_axi_DATA_IMAGE_AWADDR);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWID(m_axi_DATA_IMAGE_AWID);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWLEN(m_axi_DATA_IMAGE_AWLEN);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWSIZE(m_axi_DATA_IMAGE_AWSIZE);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWBURST(m_axi_DATA_IMAGE_AWBURST);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWLOCK(m_axi_DATA_IMAGE_AWLOCK);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWCACHE(m_axi_DATA_IMAGE_AWCACHE);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWPROT(m_axi_DATA_IMAGE_AWPROT);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWQOS(m_axi_DATA_IMAGE_AWQOS);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWREGION(m_axi_DATA_IMAGE_AWREGION);
    lenet_cnn_DATA_IMAGE_m_axi_U->AWUSER(m_axi_DATA_IMAGE_AWUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->WVALID(m_axi_DATA_IMAGE_WVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->WREADY(m_axi_DATA_IMAGE_WREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->WDATA(m_axi_DATA_IMAGE_WDATA);
    lenet_cnn_DATA_IMAGE_m_axi_U->WSTRB(m_axi_DATA_IMAGE_WSTRB);
    lenet_cnn_DATA_IMAGE_m_axi_U->WLAST(m_axi_DATA_IMAGE_WLAST);
    lenet_cnn_DATA_IMAGE_m_axi_U->WID(m_axi_DATA_IMAGE_WID);
    lenet_cnn_DATA_IMAGE_m_axi_U->WUSER(m_axi_DATA_IMAGE_WUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARVALID(m_axi_DATA_IMAGE_ARVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARREADY(m_axi_DATA_IMAGE_ARREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARADDR(m_axi_DATA_IMAGE_ARADDR);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARID(m_axi_DATA_IMAGE_ARID);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARLEN(m_axi_DATA_IMAGE_ARLEN);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARSIZE(m_axi_DATA_IMAGE_ARSIZE);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARBURST(m_axi_DATA_IMAGE_ARBURST);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARLOCK(m_axi_DATA_IMAGE_ARLOCK);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARCACHE(m_axi_DATA_IMAGE_ARCACHE);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARPROT(m_axi_DATA_IMAGE_ARPROT);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARQOS(m_axi_DATA_IMAGE_ARQOS);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARREGION(m_axi_DATA_IMAGE_ARREGION);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARUSER(m_axi_DATA_IMAGE_ARUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->RVALID(m_axi_DATA_IMAGE_RVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->RREADY(m_axi_DATA_IMAGE_RREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->RDATA(m_axi_DATA_IMAGE_RDATA);
    lenet_cnn_DATA_IMAGE_m_axi_U->RLAST(m_axi_DATA_IMAGE_RLAST);
    lenet_cnn_DATA_IMAGE_m_axi_U->RID(m_axi_DATA_IMAGE_RID);
    lenet_cnn_DATA_IMAGE_m_axi_U->RUSER(m_axi_DATA_IMAGE_RUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->RRESP(m_axi_DATA_IMAGE_RRESP);
    lenet_cnn_DATA_IMAGE_m_axi_U->BVALID(m_axi_DATA_IMAGE_BVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->BREADY(m_axi_DATA_IMAGE_BREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->BRESP(m_axi_DATA_IMAGE_BRESP);
    lenet_cnn_DATA_IMAGE_m_axi_U->BID(m_axi_DATA_IMAGE_BID);
    lenet_cnn_DATA_IMAGE_m_axi_U->BUSER(m_axi_DATA_IMAGE_BUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->ACLK(ap_clk);
    lenet_cnn_DATA_IMAGE_m_axi_U->ARESET(ap_rst_n_inv);
    lenet_cnn_DATA_IMAGE_m_axi_U->ACLK_EN(ap_var_for_const0);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARVALID(DATA_IMAGE_ARVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARREADY(DATA_IMAGE_ARREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARADDR(grp_convolution1_fu_780_m_axi_input_r_ARADDR);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARID(grp_convolution1_fu_780_m_axi_input_r_ARID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARLEN(grp_convolution1_fu_780_m_axi_input_r_ARLEN);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARSIZE(grp_convolution1_fu_780_m_axi_input_r_ARSIZE);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARLOCK(grp_convolution1_fu_780_m_axi_input_r_ARLOCK);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARCACHE(grp_convolution1_fu_780_m_axi_input_r_ARCACHE);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARQOS(grp_convolution1_fu_780_m_axi_input_r_ARQOS);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARPROT(grp_convolution1_fu_780_m_axi_input_r_ARPROT);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARUSER(grp_convolution1_fu_780_m_axi_input_r_ARUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARBURST(grp_convolution1_fu_780_m_axi_input_r_ARBURST);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_ARREGION(grp_convolution1_fu_780_m_axi_input_r_ARREGION);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RVALID(DATA_IMAGE_RVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RREADY(DATA_IMAGE_RREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RDATA(DATA_IMAGE_RDATA);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RID(DATA_IMAGE_RID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RUSER(DATA_IMAGE_RUSER);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RRESP(DATA_IMAGE_RRESP);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_RLAST(DATA_IMAGE_RLAST);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWVALID(ap_var_for_const1);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWREADY(DATA_IMAGE_AWREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWADDR(ap_var_for_const2);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWID(ap_var_for_const3);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWLEN(ap_var_for_const2);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWSIZE(ap_var_for_const4);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWLOCK(ap_var_for_const5);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWCACHE(ap_var_for_const6);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWQOS(ap_var_for_const6);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWPROT(ap_var_for_const4);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWUSER(ap_var_for_const3);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWBURST(ap_var_for_const5);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_AWREGION(ap_var_for_const6);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WVALID(ap_var_for_const1);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WREADY(DATA_IMAGE_WREADY);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WDATA(ap_var_for_const2);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WID(ap_var_for_const3);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WUSER(ap_var_for_const3);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WLAST(ap_var_for_const1);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_WSTRB(ap_var_for_const6);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_BVALID(DATA_IMAGE_BVALID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_BREADY(ap_var_for_const1);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_BRESP(DATA_IMAGE_BRESP);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_BID(DATA_IMAGE_BID);
    lenet_cnn_DATA_IMAGE_m_axi_U->I_BUSER(DATA_IMAGE_BUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U = new lenet_cnn_DATA_PARAMETERS_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_PARAMETERS_ID_WIDTH,C_M_AXI_DATA_PARAMETERS_ADDR_WIDTH,C_M_AXI_DATA_PARAMETERS_DATA_WIDTH,C_M_AXI_DATA_PARAMETERS_AWUSER_WIDTH,C_M_AXI_DATA_PARAMETERS_ARUSER_WIDTH,C_M_AXI_DATA_PARAMETERS_WUSER_WIDTH,C_M_AXI_DATA_PARAMETERS_RUSER_WIDTH,C_M_AXI_DATA_PARAMETERS_BUSER_WIDTH,C_M_AXI_DATA_PARAMETERS_USER_VALUE,C_M_AXI_DATA_PARAMETERS_PROT_VALUE,C_M_AXI_DATA_PARAMETERS_CACHE_VALUE>("lenet_cnn_DATA_PARAMETERS_m_axi_U");
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWVALID(m_axi_DATA_PARAMETERS_AWVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWREADY(m_axi_DATA_PARAMETERS_AWREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWADDR(m_axi_DATA_PARAMETERS_AWADDR);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWID(m_axi_DATA_PARAMETERS_AWID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWLEN(m_axi_DATA_PARAMETERS_AWLEN);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWSIZE(m_axi_DATA_PARAMETERS_AWSIZE);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWBURST(m_axi_DATA_PARAMETERS_AWBURST);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWLOCK(m_axi_DATA_PARAMETERS_AWLOCK);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWCACHE(m_axi_DATA_PARAMETERS_AWCACHE);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWPROT(m_axi_DATA_PARAMETERS_AWPROT);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWQOS(m_axi_DATA_PARAMETERS_AWQOS);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWREGION(m_axi_DATA_PARAMETERS_AWREGION);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->AWUSER(m_axi_DATA_PARAMETERS_AWUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WVALID(m_axi_DATA_PARAMETERS_WVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WREADY(m_axi_DATA_PARAMETERS_WREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WDATA(m_axi_DATA_PARAMETERS_WDATA);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WSTRB(m_axi_DATA_PARAMETERS_WSTRB);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WLAST(m_axi_DATA_PARAMETERS_WLAST);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WID(m_axi_DATA_PARAMETERS_WID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->WUSER(m_axi_DATA_PARAMETERS_WUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARVALID(m_axi_DATA_PARAMETERS_ARVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARREADY(m_axi_DATA_PARAMETERS_ARREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARADDR(m_axi_DATA_PARAMETERS_ARADDR);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARID(m_axi_DATA_PARAMETERS_ARID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARLEN(m_axi_DATA_PARAMETERS_ARLEN);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARSIZE(m_axi_DATA_PARAMETERS_ARSIZE);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARBURST(m_axi_DATA_PARAMETERS_ARBURST);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARLOCK(m_axi_DATA_PARAMETERS_ARLOCK);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARCACHE(m_axi_DATA_PARAMETERS_ARCACHE);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARPROT(m_axi_DATA_PARAMETERS_ARPROT);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARQOS(m_axi_DATA_PARAMETERS_ARQOS);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARREGION(m_axi_DATA_PARAMETERS_ARREGION);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARUSER(m_axi_DATA_PARAMETERS_ARUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RVALID(m_axi_DATA_PARAMETERS_RVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RREADY(m_axi_DATA_PARAMETERS_RREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RDATA(m_axi_DATA_PARAMETERS_RDATA);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RLAST(m_axi_DATA_PARAMETERS_RLAST);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RID(m_axi_DATA_PARAMETERS_RID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RUSER(m_axi_DATA_PARAMETERS_RUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->RRESP(m_axi_DATA_PARAMETERS_RRESP);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->BVALID(m_axi_DATA_PARAMETERS_BVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->BREADY(m_axi_DATA_PARAMETERS_BREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->BRESP(m_axi_DATA_PARAMETERS_BRESP);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->BID(m_axi_DATA_PARAMETERS_BID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->BUSER(m_axi_DATA_PARAMETERS_BUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ACLK(ap_clk);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ARESET(ap_rst_n_inv);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->ACLK_EN(ap_var_for_const0);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARVALID(DATA_PARAMETERS_ARVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARREADY(DATA_PARAMETERS_ARREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARADDR(DATA_PARAMETERS_ARADDR);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARID(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARLEN(DATA_PARAMETERS_ARLEN);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARSIZE(ap_var_for_const4);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARLOCK(ap_var_for_const5);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARCACHE(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARQOS(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARPROT(ap_var_for_const4);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARUSER(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARBURST(ap_var_for_const5);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_ARREGION(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RVALID(DATA_PARAMETERS_RVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RREADY(DATA_PARAMETERS_RREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RDATA(DATA_PARAMETERS_RDATA);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RID(DATA_PARAMETERS_RID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RUSER(DATA_PARAMETERS_RUSER);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RRESP(DATA_PARAMETERS_RRESP);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_RLAST(DATA_PARAMETERS_RLAST);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWVALID(ap_var_for_const1);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWREADY(DATA_PARAMETERS_AWREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWADDR(ap_var_for_const2);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWID(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWLEN(ap_var_for_const2);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWSIZE(ap_var_for_const4);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWLOCK(ap_var_for_const5);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWCACHE(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWQOS(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWPROT(ap_var_for_const4);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWUSER(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWBURST(ap_var_for_const5);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_AWREGION(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WVALID(ap_var_for_const1);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WREADY(DATA_PARAMETERS_WREADY);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WDATA(ap_var_for_const2);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WID(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WUSER(ap_var_for_const3);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WLAST(ap_var_for_const1);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_WSTRB(ap_var_for_const6);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_BVALID(DATA_PARAMETERS_BVALID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_BREADY(ap_var_for_const1);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_BRESP(DATA_PARAMETERS_BRESP);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_BID(DATA_PARAMETERS_BID);
    lenet_cnn_DATA_PARAMETERS_m_axi_U->I_BUSER(DATA_PARAMETERS_BUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U = new lenet_cnn_DATA_FC6_OUTPUT_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_FC6_OUTPUT_ID_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_ADDR_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_DATA_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_AWUSER_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_ARUSER_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_WUSER_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_RUSER_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_BUSER_WIDTH,C_M_AXI_DATA_FC6_OUTPUT_USER_VALUE,C_M_AXI_DATA_FC6_OUTPUT_PROT_VALUE,C_M_AXI_DATA_FC6_OUTPUT_CACHE_VALUE>("lenet_cnn_DATA_FC6_OUTPUT_m_axi_U");
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWVALID(m_axi_DATA_FC6_OUTPUT_AWVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWREADY(m_axi_DATA_FC6_OUTPUT_AWREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWADDR(m_axi_DATA_FC6_OUTPUT_AWADDR);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWID(m_axi_DATA_FC6_OUTPUT_AWID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWLEN(m_axi_DATA_FC6_OUTPUT_AWLEN);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWSIZE(m_axi_DATA_FC6_OUTPUT_AWSIZE);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWBURST(m_axi_DATA_FC6_OUTPUT_AWBURST);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWLOCK(m_axi_DATA_FC6_OUTPUT_AWLOCK);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWCACHE(m_axi_DATA_FC6_OUTPUT_AWCACHE);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWPROT(m_axi_DATA_FC6_OUTPUT_AWPROT);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWQOS(m_axi_DATA_FC6_OUTPUT_AWQOS);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWREGION(m_axi_DATA_FC6_OUTPUT_AWREGION);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->AWUSER(m_axi_DATA_FC6_OUTPUT_AWUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WVALID(m_axi_DATA_FC6_OUTPUT_WVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WREADY(m_axi_DATA_FC6_OUTPUT_WREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WDATA(m_axi_DATA_FC6_OUTPUT_WDATA);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WSTRB(m_axi_DATA_FC6_OUTPUT_WSTRB);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WLAST(m_axi_DATA_FC6_OUTPUT_WLAST);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WID(m_axi_DATA_FC6_OUTPUT_WID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->WUSER(m_axi_DATA_FC6_OUTPUT_WUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARVALID(m_axi_DATA_FC6_OUTPUT_ARVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARREADY(m_axi_DATA_FC6_OUTPUT_ARREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARADDR(m_axi_DATA_FC6_OUTPUT_ARADDR);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARID(m_axi_DATA_FC6_OUTPUT_ARID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARLEN(m_axi_DATA_FC6_OUTPUT_ARLEN);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARSIZE(m_axi_DATA_FC6_OUTPUT_ARSIZE);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARBURST(m_axi_DATA_FC6_OUTPUT_ARBURST);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARLOCK(m_axi_DATA_FC6_OUTPUT_ARLOCK);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARCACHE(m_axi_DATA_FC6_OUTPUT_ARCACHE);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARPROT(m_axi_DATA_FC6_OUTPUT_ARPROT);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARQOS(m_axi_DATA_FC6_OUTPUT_ARQOS);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARREGION(m_axi_DATA_FC6_OUTPUT_ARREGION);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARUSER(m_axi_DATA_FC6_OUTPUT_ARUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RVALID(m_axi_DATA_FC6_OUTPUT_RVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RREADY(m_axi_DATA_FC6_OUTPUT_RREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RDATA(m_axi_DATA_FC6_OUTPUT_RDATA);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RLAST(m_axi_DATA_FC6_OUTPUT_RLAST);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RID(m_axi_DATA_FC6_OUTPUT_RID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RUSER(m_axi_DATA_FC6_OUTPUT_RUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->RRESP(m_axi_DATA_FC6_OUTPUT_RRESP);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->BVALID(m_axi_DATA_FC6_OUTPUT_BVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->BREADY(m_axi_DATA_FC6_OUTPUT_BREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->BRESP(m_axi_DATA_FC6_OUTPUT_BRESP);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->BID(m_axi_DATA_FC6_OUTPUT_BID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->BUSER(m_axi_DATA_FC6_OUTPUT_BUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ACLK(ap_clk);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ARESET(ap_rst_n_inv);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->ACLK_EN(ap_var_for_const0);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARVALID(ap_var_for_const1);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARREADY(DATA_FC6_OUTPUT_ARREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARADDR(ap_var_for_const2);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARID(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARLEN(ap_var_for_const2);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARSIZE(ap_var_for_const4);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARLOCK(ap_var_for_const5);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARCACHE(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARQOS(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARPROT(ap_var_for_const4);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARUSER(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARBURST(ap_var_for_const5);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_ARREGION(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RVALID(DATA_FC6_OUTPUT_RVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RREADY(ap_var_for_const1);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RDATA(DATA_FC6_OUTPUT_RDATA);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RID(DATA_FC6_OUTPUT_RID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RUSER(DATA_FC6_OUTPUT_RUSER);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RRESP(DATA_FC6_OUTPUT_RRESP);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_RLAST(DATA_FC6_OUTPUT_RLAST);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWVALID(DATA_FC6_OUTPUT_AWVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWREADY(DATA_FC6_OUTPUT_AWREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWADDR(DATA_FC6_OUTPUT_addr_reg_1413);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWID(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWLEN(ap_var_for_const7);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWSIZE(ap_var_for_const4);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWLOCK(ap_var_for_const5);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWCACHE(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWQOS(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWPROT(ap_var_for_const4);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWUSER(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWBURST(ap_var_for_const5);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_AWREGION(ap_var_for_const6);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WVALID(DATA_FC6_OUTPUT_WVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WREADY(DATA_FC6_OUTPUT_WREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WDATA(output_assign_load_reg_1758);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WID(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WUSER(ap_var_for_const3);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WLAST(ap_var_for_const1);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_WSTRB(ap_var_for_const8);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_BVALID(DATA_FC6_OUTPUT_BVALID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_BREADY(DATA_FC6_OUTPUT_BREADY);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_BRESP(DATA_FC6_OUTPUT_BRESP);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_BID(DATA_FC6_OUTPUT_BID);
    lenet_cnn_DATA_FC6_OUTPUT_m_axi_U->I_BUSER(DATA_FC6_OUTPUT_BUSER);
    conv1_weights_0_U = new lenet_cnn_conv1_wfYi("conv1_weights_0_U");
    conv1_weights_0_U->clk(ap_clk);
    conv1_weights_0_U->reset(ap_rst_n_inv);
    conv1_weights_0_U->address0(conv1_weights_0_address0);
    conv1_weights_0_U->ce0(conv1_weights_0_ce0);
    conv1_weights_0_U->we0(conv1_weights_0_we0);
    conv1_weights_0_U->d0(DATA_PARAMETERS_addr_9_reg_1465);
    conv1_weights_0_U->q0(conv1_weights_0_q0);
    conv1_weights_0_U->address1(grp_convolution1_fu_780_weights_0_address1);
    conv1_weights_0_U->ce1(conv1_weights_0_ce1);
    conv1_weights_0_U->q1(conv1_weights_0_q1);
    conv1_bias_U = new lenet_cnn_conv1_bg8j("conv1_bias_U");
    conv1_bias_U->clk(ap_clk);
    conv1_bias_U->reset(ap_rst_n_inv);
    conv1_bias_U->address0(conv1_bias_address0);
    conv1_bias_U->ce0(conv1_bias_ce0);
    conv1_bias_U->we0(conv1_bias_we0);
    conv1_bias_U->d0(DATA_PARAMETERS_addr_11_reg_1495);
    conv1_bias_U->q0(conv1_bias_q0);
    conv3_weights_U = new lenet_cnn_conv3_whbi("conv3_weights_U");
    conv3_weights_U->clk(ap_clk);
    conv3_weights_U->reset(ap_rst_n_inv);
    conv3_weights_U->address0(conv3_weights_address0);
    conv3_weights_U->ce0(conv3_weights_ce0);
    conv3_weights_U->we0(conv3_weights_we0);
    conv3_weights_U->d0(DATA_PARAMETERS_addr_13_reg_1520);
    conv3_weights_U->q0(conv3_weights_q0);
    conv3_weights_U->address1(grp_convolution3_fu_764_weights_address1);
    conv3_weights_U->ce1(conv3_weights_ce1);
    conv3_weights_U->q1(conv3_weights_q1);
    conv3_bias_U = new lenet_cnn_conv3_bibs("conv3_bias_U");
    conv3_bias_U->clk(ap_clk);
    conv3_bias_U->reset(ap_rst_n_inv);
    conv3_bias_U->address0(conv3_bias_address0);
    conv3_bias_U->ce0(conv3_bias_ce0);
    conv3_bias_U->we0(conv3_bias_we0);
    conv3_bias_U->d0(DATA_PARAMETERS_addr_15_reg_1545);
    conv3_bias_U->q0(conv3_bias_q0);
    conv5_weights_U = new lenet_cnn_conv5_wjbC("conv5_weights_U");
    conv5_weights_U->clk(ap_clk);
    conv5_weights_U->reset(ap_rst_n_inv);
    conv5_weights_U->address0(conv5_weights_address0);
    conv5_weights_U->ce0(conv5_weights_ce0);
    conv5_weights_U->we0(conv5_weights_we0);
    conv5_weights_U->d0(DATA_PARAMETERS_addr_17_reg_1570);
    conv5_weights_U->q0(conv5_weights_q0);
    conv5_bias_U = new lenet_cnn_conv5_bkbM("conv5_bias_U");
    conv5_bias_U->clk(ap_clk);
    conv5_bias_U->reset(ap_rst_n_inv);
    conv5_bias_U->address0(conv5_bias_address0);
    conv5_bias_U->ce0(conv5_bias_ce0);
    conv5_bias_U->we0(conv5_bias_we0);
    conv5_bias_U->d0(DATA_PARAMETERS_addr_19_reg_1595);
    conv5_bias_U->q0(conv5_bias_q0);
    fc6_weights_0_0_U = new lenet_cnn_fc6_weilbW("fc6_weights_0_0_U");
    fc6_weights_0_0_U->clk(ap_clk);
    fc6_weights_0_0_U->reset(ap_rst_n_inv);
    fc6_weights_0_0_U->address0(fc6_weights_0_0_address0);
    fc6_weights_0_0_U->ce0(fc6_weights_0_0_ce0);
    fc6_weights_0_0_U->we0(fc6_weights_0_0_we0);
    fc6_weights_0_0_U->d0(DATA_PARAMETERS_addr_21_reg_1620);
    fc6_weights_0_0_U->q0(fc6_weights_0_0_q0);
    fc6_bias_U = new lenet_cnn_fc6_bias("fc6_bias_U");
    fc6_bias_U->clk(ap_clk);
    fc6_bias_U->reset(ap_rst_n_inv);
    fc6_bias_U->address0(fc6_bias_address0);
    fc6_bias_U->ce0(fc6_bias_ce0);
    fc6_bias_U->we0(fc6_bias_we0);
    fc6_bias_U->d0(DATA_PARAMETERS_addr_23_reg_1645);
    fc6_bias_U->q0(fc6_bias_q0);
    output_assign_U = new lenet_cnn_output_mb6("output_assign_U");
    output_assign_U->clk(ap_clk);
    output_assign_U->reset(ap_rst_n_inv);
    output_assign_U->address0(output_assign_address0);
    output_assign_U->ce0(output_assign_ce0);
    output_assign_U->q0(output_assign_q0);
    output_assign_U->address1(output_assign_addr_1_reg_1723_pp8_iter11_reg);
    output_assign_U->ce1(output_assign_ce1);
    output_assign_U->we1(output_assign_we1);
    output_assign_U->d1(tmp_7_i_reg_1739);
    conv1_output_U = new lenet_cnn_conv1_oncg("conv1_output_U");
    conv1_output_U->clk(ap_clk);
    conv1_output_U->reset(ap_rst_n_inv);
    conv1_output_U->address0(conv1_output_address0);
    conv1_output_U->ce0(conv1_output_ce0);
    conv1_output_U->we0(conv1_output_we0);
    conv1_output_U->d0(grp_convolution1_fu_780_output_r_d0);
    conv1_output_U->q0(conv1_output_q0);
    pool2_output_U = new lenet_cnn_pool2_oocq("pool2_output_U");
    pool2_output_U->clk(ap_clk);
    pool2_output_U->reset(ap_rst_n_inv);
    pool2_output_U->address0(pool2_output_address0);
    pool2_output_U->ce0(pool2_output_ce0);
    pool2_output_U->we0(pool2_output_we0);
    pool2_output_U->d0(grp_max_pooling2_fu_790_output_r_d0);
    pool2_output_U->q0(pool2_output_q0);
    pool2_output_U->address1(grp_convolution3_fu_764_input_r_address1);
    pool2_output_U->ce1(pool2_output_ce1);
    pool2_output_U->q1(pool2_output_q1);
    conv3_output_U = new lenet_cnn_conv3_opcA("conv3_output_U");
    conv3_output_U->clk(ap_clk);
    conv3_output_U->reset(ap_rst_n_inv);
    conv3_output_U->address0(conv3_output_address0);
    conv3_output_U->ce0(conv3_output_ce0);
    conv3_output_U->we0(conv3_output_we0);
    conv3_output_U->d0(grp_convolution3_fu_764_output_r_d0);
    conv3_output_U->q0(conv3_output_q0);
    pool4_output_U = new lenet_cnn_pool4_oqcK("pool4_output_U");
    pool4_output_U->clk(ap_clk);
    pool4_output_U->reset(ap_rst_n_inv);
    pool4_output_U->address0(pool4_output_address0);
    pool4_output_U->ce0(pool4_output_ce0);
    pool4_output_U->we0(pool4_output_we0);
    pool4_output_U->d0(grp_max_pooling4_fu_796_output_r_d0);
    pool4_output_U->q0(pool4_output_q0);
    conv5_output_0_0_U = new lenet_cnn_conv5_bkbM("conv5_output_0_0_U");
    conv5_output_0_0_U->clk(ap_clk);
    conv5_output_0_0_U->reset(ap_rst_n_inv);
    conv5_output_0_0_U->address0(conv5_output_0_0_address0);
    conv5_output_0_0_U->ce0(conv5_output_0_0_ce0);
    conv5_output_0_0_U->we0(conv5_output_0_0_we0);
    conv5_output_0_0_U->d0(grp_convolution5_fu_772_output_0_0_d0);
    conv5_output_0_0_U->q0(conv5_output_0_0_q0);
    grp_convolution3_fu_764 = new convolution3("grp_convolution3_fu_764");
    grp_convolution3_fu_764->ap_clk(ap_clk);
    grp_convolution3_fu_764->ap_rst(ap_rst_n_inv);
    grp_convolution3_fu_764->ap_start(grp_convolution3_fu_764_ap_start);
    grp_convolution3_fu_764->ap_done(grp_convolution3_fu_764_ap_done);
    grp_convolution3_fu_764->ap_idle(grp_convolution3_fu_764_ap_idle);
    grp_convolution3_fu_764->ap_ready(grp_convolution3_fu_764_ap_ready);
    grp_convolution3_fu_764->input_r_address0(grp_convolution3_fu_764_input_r_address0);
    grp_convolution3_fu_764->input_r_ce0(grp_convolution3_fu_764_input_r_ce0);
    grp_convolution3_fu_764->input_r_q0(pool2_output_q0);
    grp_convolution3_fu_764->input_r_address1(grp_convolution3_fu_764_input_r_address1);
    grp_convolution3_fu_764->input_r_ce1(grp_convolution3_fu_764_input_r_ce1);
    grp_convolution3_fu_764->input_r_q1(pool2_output_q1);
    grp_convolution3_fu_764->weights_address0(grp_convolution3_fu_764_weights_address0);
    grp_convolution3_fu_764->weights_ce0(grp_convolution3_fu_764_weights_ce0);
    grp_convolution3_fu_764->weights_q0(conv3_weights_q0);
    grp_convolution3_fu_764->weights_address1(grp_convolution3_fu_764_weights_address1);
    grp_convolution3_fu_764->weights_ce1(grp_convolution3_fu_764_weights_ce1);
    grp_convolution3_fu_764->weights_q1(conv3_weights_q1);
    grp_convolution3_fu_764->bias_address0(grp_convolution3_fu_764_bias_address0);
    grp_convolution3_fu_764->bias_ce0(grp_convolution3_fu_764_bias_ce0);
    grp_convolution3_fu_764->bias_q0(conv3_bias_q0);
    grp_convolution3_fu_764->output_r_address0(grp_convolution3_fu_764_output_r_address0);
    grp_convolution3_fu_764->output_r_ce0(grp_convolution3_fu_764_output_r_ce0);
    grp_convolution3_fu_764->output_r_we0(grp_convolution3_fu_764_output_r_we0);
    grp_convolution3_fu_764->output_r_d0(grp_convolution3_fu_764_output_r_d0);
    grp_convolution5_fu_772 = new convolution5("grp_convolution5_fu_772");
    grp_convolution5_fu_772->ap_clk(ap_clk);
    grp_convolution5_fu_772->ap_rst(ap_rst_n_inv);
    grp_convolution5_fu_772->ap_start(grp_convolution5_fu_772_ap_start);
    grp_convolution5_fu_772->ap_done(grp_convolution5_fu_772_ap_done);
    grp_convolution5_fu_772->ap_idle(grp_convolution5_fu_772_ap_idle);
    grp_convolution5_fu_772->ap_ready(grp_convolution5_fu_772_ap_ready);
    grp_convolution5_fu_772->input_r_address0(grp_convolution5_fu_772_input_r_address0);
    grp_convolution5_fu_772->input_r_ce0(grp_convolution5_fu_772_input_r_ce0);
    grp_convolution5_fu_772->input_r_q0(pool4_output_q0);
    grp_convolution5_fu_772->weights_address0(grp_convolution5_fu_772_weights_address0);
    grp_convolution5_fu_772->weights_ce0(grp_convolution5_fu_772_weights_ce0);
    grp_convolution5_fu_772->weights_q0(conv5_weights_q0);
    grp_convolution5_fu_772->bias_address0(grp_convolution5_fu_772_bias_address0);
    grp_convolution5_fu_772->bias_ce0(grp_convolution5_fu_772_bias_ce0);
    grp_convolution5_fu_772->bias_q0(conv5_bias_q0);
    grp_convolution5_fu_772->output_0_0_address0(grp_convolution5_fu_772_output_0_0_address0);
    grp_convolution5_fu_772->output_0_0_ce0(grp_convolution5_fu_772_output_0_0_ce0);
    grp_convolution5_fu_772->output_0_0_we0(grp_convolution5_fu_772_output_0_0_we0);
    grp_convolution5_fu_772->output_0_0_d0(grp_convolution5_fu_772_output_0_0_d0);
    grp_convolution1_fu_780 = new convolution1("grp_convolution1_fu_780");
    grp_convolution1_fu_780->ap_clk(ap_clk);
    grp_convolution1_fu_780->ap_rst(ap_rst_n_inv);
    grp_convolution1_fu_780->ap_start(grp_convolution1_fu_780_ap_start);
    grp_convolution1_fu_780->ap_done(grp_convolution1_fu_780_ap_done);
    grp_convolution1_fu_780->ap_idle(grp_convolution1_fu_780_ap_idle);
    grp_convolution1_fu_780->ap_ready(grp_convolution1_fu_780_ap_ready);
    grp_convolution1_fu_780->m_axi_input_r_AWVALID(grp_convolution1_fu_780_m_axi_input_r_AWVALID);
    grp_convolution1_fu_780->m_axi_input_r_AWREADY(ap_var_for_const1);
    grp_convolution1_fu_780->m_axi_input_r_AWADDR(grp_convolution1_fu_780_m_axi_input_r_AWADDR);
    grp_convolution1_fu_780->m_axi_input_r_AWID(grp_convolution1_fu_780_m_axi_input_r_AWID);
    grp_convolution1_fu_780->m_axi_input_r_AWLEN(grp_convolution1_fu_780_m_axi_input_r_AWLEN);
    grp_convolution1_fu_780->m_axi_input_r_AWSIZE(grp_convolution1_fu_780_m_axi_input_r_AWSIZE);
    grp_convolution1_fu_780->m_axi_input_r_AWBURST(grp_convolution1_fu_780_m_axi_input_r_AWBURST);
    grp_convolution1_fu_780->m_axi_input_r_AWLOCK(grp_convolution1_fu_780_m_axi_input_r_AWLOCK);
    grp_convolution1_fu_780->m_axi_input_r_AWCACHE(grp_convolution1_fu_780_m_axi_input_r_AWCACHE);
    grp_convolution1_fu_780->m_axi_input_r_AWPROT(grp_convolution1_fu_780_m_axi_input_r_AWPROT);
    grp_convolution1_fu_780->m_axi_input_r_AWQOS(grp_convolution1_fu_780_m_axi_input_r_AWQOS);
    grp_convolution1_fu_780->m_axi_input_r_AWREGION(grp_convolution1_fu_780_m_axi_input_r_AWREGION);
    grp_convolution1_fu_780->m_axi_input_r_AWUSER(grp_convolution1_fu_780_m_axi_input_r_AWUSER);
    grp_convolution1_fu_780->m_axi_input_r_WVALID(grp_convolution1_fu_780_m_axi_input_r_WVALID);
    grp_convolution1_fu_780->m_axi_input_r_WREADY(ap_var_for_const1);
    grp_convolution1_fu_780->m_axi_input_r_WDATA(grp_convolution1_fu_780_m_axi_input_r_WDATA);
    grp_convolution1_fu_780->m_axi_input_r_WSTRB(grp_convolution1_fu_780_m_axi_input_r_WSTRB);
    grp_convolution1_fu_780->m_axi_input_r_WLAST(grp_convolution1_fu_780_m_axi_input_r_WLAST);
    grp_convolution1_fu_780->m_axi_input_r_WID(grp_convolution1_fu_780_m_axi_input_r_WID);
    grp_convolution1_fu_780->m_axi_input_r_WUSER(grp_convolution1_fu_780_m_axi_input_r_WUSER);
    grp_convolution1_fu_780->m_axi_input_r_ARVALID(grp_convolution1_fu_780_m_axi_input_r_ARVALID);
    grp_convolution1_fu_780->m_axi_input_r_ARREADY(DATA_IMAGE_ARREADY);
    grp_convolution1_fu_780->m_axi_input_r_ARADDR(grp_convolution1_fu_780_m_axi_input_r_ARADDR);
    grp_convolution1_fu_780->m_axi_input_r_ARID(grp_convolution1_fu_780_m_axi_input_r_ARID);
    grp_convolution1_fu_780->m_axi_input_r_ARLEN(grp_convolution1_fu_780_m_axi_input_r_ARLEN);
    grp_convolution1_fu_780->m_axi_input_r_ARSIZE(grp_convolution1_fu_780_m_axi_input_r_ARSIZE);
    grp_convolution1_fu_780->m_axi_input_r_ARBURST(grp_convolution1_fu_780_m_axi_input_r_ARBURST);
    grp_convolution1_fu_780->m_axi_input_r_ARLOCK(grp_convolution1_fu_780_m_axi_input_r_ARLOCK);
    grp_convolution1_fu_780->m_axi_input_r_ARCACHE(grp_convolution1_fu_780_m_axi_input_r_ARCACHE);
    grp_convolution1_fu_780->m_axi_input_r_ARPROT(grp_convolution1_fu_780_m_axi_input_r_ARPROT);
    grp_convolution1_fu_780->m_axi_input_r_ARQOS(grp_convolution1_fu_780_m_axi_input_r_ARQOS);
    grp_convolution1_fu_780->m_axi_input_r_ARREGION(grp_convolution1_fu_780_m_axi_input_r_ARREGION);
    grp_convolution1_fu_780->m_axi_input_r_ARUSER(grp_convolution1_fu_780_m_axi_input_r_ARUSER);
    grp_convolution1_fu_780->m_axi_input_r_RVALID(DATA_IMAGE_RVALID);
    grp_convolution1_fu_780->m_axi_input_r_RREADY(grp_convolution1_fu_780_m_axi_input_r_RREADY);
    grp_convolution1_fu_780->m_axi_input_r_RDATA(DATA_IMAGE_RDATA);
    grp_convolution1_fu_780->m_axi_input_r_RLAST(DATA_IMAGE_RLAST);
    grp_convolution1_fu_780->m_axi_input_r_RID(DATA_IMAGE_RID);
    grp_convolution1_fu_780->m_axi_input_r_RUSER(DATA_IMAGE_RUSER);
    grp_convolution1_fu_780->m_axi_input_r_RRESP(DATA_IMAGE_RRESP);
    grp_convolution1_fu_780->m_axi_input_r_BVALID(ap_var_for_const1);
    grp_convolution1_fu_780->m_axi_input_r_BREADY(grp_convolution1_fu_780_m_axi_input_r_BREADY);
    grp_convolution1_fu_780->m_axi_input_r_BRESP(ap_var_for_const5);
    grp_convolution1_fu_780->m_axi_input_r_BID(ap_var_for_const3);
    grp_convolution1_fu_780->m_axi_input_r_BUSER(ap_var_for_const3);
    grp_convolution1_fu_780->input_offset(image1_reg_1402);
    grp_convolution1_fu_780->weights_0_address0(grp_convolution1_fu_780_weights_0_address0);
    grp_convolution1_fu_780->weights_0_ce0(grp_convolution1_fu_780_weights_0_ce0);
    grp_convolution1_fu_780->weights_0_q0(conv1_weights_0_q0);
    grp_convolution1_fu_780->weights_0_address1(grp_convolution1_fu_780_weights_0_address1);
    grp_convolution1_fu_780->weights_0_ce1(grp_convolution1_fu_780_weights_0_ce1);
    grp_convolution1_fu_780->weights_0_q1(conv1_weights_0_q1);
    grp_convolution1_fu_780->bias_address0(grp_convolution1_fu_780_bias_address0);
    grp_convolution1_fu_780->bias_ce0(grp_convolution1_fu_780_bias_ce0);
    grp_convolution1_fu_780->bias_q0(conv1_bias_q0);
    grp_convolution1_fu_780->output_r_address0(grp_convolution1_fu_780_output_r_address0);
    grp_convolution1_fu_780->output_r_ce0(grp_convolution1_fu_780_output_r_ce0);
    grp_convolution1_fu_780->output_r_we0(grp_convolution1_fu_780_output_r_we0);
    grp_convolution1_fu_780->output_r_d0(grp_convolution1_fu_780_output_r_d0);
    grp_max_pooling2_fu_790 = new max_pooling2("grp_max_pooling2_fu_790");
    grp_max_pooling2_fu_790->ap_clk(ap_clk);
    grp_max_pooling2_fu_790->ap_rst(ap_rst_n_inv);
    grp_max_pooling2_fu_790->ap_start(grp_max_pooling2_fu_790_ap_start);
    grp_max_pooling2_fu_790->ap_done(grp_max_pooling2_fu_790_ap_done);
    grp_max_pooling2_fu_790->ap_idle(grp_max_pooling2_fu_790_ap_idle);
    grp_max_pooling2_fu_790->ap_ready(grp_max_pooling2_fu_790_ap_ready);
    grp_max_pooling2_fu_790->input_r_address0(grp_max_pooling2_fu_790_input_r_address0);
    grp_max_pooling2_fu_790->input_r_ce0(grp_max_pooling2_fu_790_input_r_ce0);
    grp_max_pooling2_fu_790->input_r_q0(conv1_output_q0);
    grp_max_pooling2_fu_790->output_r_address0(grp_max_pooling2_fu_790_output_r_address0);
    grp_max_pooling2_fu_790->output_r_ce0(grp_max_pooling2_fu_790_output_r_ce0);
    grp_max_pooling2_fu_790->output_r_we0(grp_max_pooling2_fu_790_output_r_we0);
    grp_max_pooling2_fu_790->output_r_d0(grp_max_pooling2_fu_790_output_r_d0);
    grp_max_pooling4_fu_796 = new max_pooling4("grp_max_pooling4_fu_796");
    grp_max_pooling4_fu_796->ap_clk(ap_clk);
    grp_max_pooling4_fu_796->ap_rst(ap_rst_n_inv);
    grp_max_pooling4_fu_796->ap_start(grp_max_pooling4_fu_796_ap_start);
    grp_max_pooling4_fu_796->ap_done(grp_max_pooling4_fu_796_ap_done);
    grp_max_pooling4_fu_796->ap_idle(grp_max_pooling4_fu_796_ap_idle);
    grp_max_pooling4_fu_796->ap_ready(grp_max_pooling4_fu_796_ap_ready);
    grp_max_pooling4_fu_796->input_r_address0(grp_max_pooling4_fu_796_input_r_address0);
    grp_max_pooling4_fu_796->input_r_ce0(grp_max_pooling4_fu_796_input_r_ce0);
    grp_max_pooling4_fu_796->input_r_q0(conv3_output_q0);
    grp_max_pooling4_fu_796->output_r_address0(grp_max_pooling4_fu_796_output_r_address0);
    grp_max_pooling4_fu_796->output_r_ce0(grp_max_pooling4_fu_796_output_r_ce0);
    grp_max_pooling4_fu_796->output_r_we0(grp_max_pooling4_fu_796_output_r_we0);
    grp_max_pooling4_fu_796->output_r_d0(grp_max_pooling4_fu_796_output_r_d0);
    lenet_cnn_fadd_32bkb_U36 = new lenet_cnn_fadd_32bkb<1,5,32,32,32>("lenet_cnn_fadd_32bkb_U36");
    lenet_cnn_fadd_32bkb_U36->clk(ap_clk);
    lenet_cnn_fadd_32bkb_U36->reset(ap_rst_n_inv);
    lenet_cnn_fadd_32bkb_U36->din0(acc_reg_1729);
    lenet_cnn_fadd_32bkb_U36->din1(tmp_i_reg_1734);
    lenet_cnn_fadd_32bkb_U36->ce(ap_var_for_const0);
    lenet_cnn_fadd_32bkb_U36->dout(grp_fu_802_p2);
    lenet_cnn_fmul_32cud_U37 = new lenet_cnn_fmul_32cud<1,4,32,32,32>("lenet_cnn_fmul_32cud_U37");
    lenet_cnn_fmul_32cud_U37->clk(ap_clk);
    lenet_cnn_fmul_32cud_U37->reset(ap_rst_n_inv);
    lenet_cnn_fmul_32cud_U37->din0(fc6_weights_0_0_lo_reg_1713);
    lenet_cnn_fmul_32cud_U37->din1(conv5_output_0_0_l_reg_1708);
    lenet_cnn_fmul_32cud_U37->ce(ap_var_for_const0);
    lenet_cnn_fmul_32cud_U37->dout(grp_fu_806_p2);
    lenet_cnn_urem_5nsc4_U38 = new lenet_cnn_urem_5nsc4<1,9,5,4,5>("lenet_cnn_urem_5nsc4_U38");
    lenet_cnn_urem_5nsc4_U38->clk(ap_clk);
    lenet_cnn_urem_5nsc4_U38->reset(ap_rst_n_inv);
    lenet_cnn_urem_5nsc4_U38->din0(select_ln154_fu_926_p3);
    lenet_cnn_urem_5nsc4_U38->din1(grp_fu_954_p1);
    lenet_cnn_urem_5nsc4_U38->ce(grp_fu_954_ce);
    lenet_cnn_urem_5nsc4_U38->dout(grp_fu_954_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DATA_FC6_OUTPUT_AWVALID);
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( DATA_FC6_OUTPUT_AWREADY );

    SC_METHOD(thread_DATA_FC6_OUTPUT_BREADY);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( DATA_FC6_OUTPUT_BVALID );

    SC_METHOD(thread_DATA_FC6_OUTPUT_WVALID);
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( icmp_ln178_reg_1744_pp9_iter1_reg );
    sensitive << ( ap_block_pp9_stage0_11001 );

    SC_METHOD(thread_DATA_FC6_OUTPUT_blk_n_AW);
    sensitive << ( m_axi_DATA_FC6_OUTPUT_AWREADY );
    sensitive << ( ap_CS_fsm_state119 );

    SC_METHOD(thread_DATA_FC6_OUTPUT_blk_n_B);
    sensitive << ( m_axi_DATA_FC6_OUTPUT_BVALID );
    sensitive << ( ap_CS_fsm_state127 );

    SC_METHOD(thread_DATA_FC6_OUTPUT_blk_n_W);
    sensitive << ( m_axi_DATA_FC6_OUTPUT_WREADY );
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( ap_block_pp9_stage0 );
    sensitive << ( icmp_ln178_reg_1744_pp9_iter1_reg );

    SC_METHOD(thread_DATA_IMAGE_ARVALID);
    sensitive << ( grp_convolution1_fu_780_m_axi_input_r_ARVALID );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_DATA_IMAGE_RREADY);
    sensitive << ( grp_convolution1_fu_780_m_axi_input_r_RREADY );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_DATA_PARAMETERS_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( DATA_PARAMETERS_ARREADY );
    sensitive << ( empty_15_fu_840_p1 );
    sensitive << ( zext_ln155_1_fu_1034_p1 );
    sensitive << ( zext_ln157_fu_1066_p1 );
    sensitive << ( zext_ln158_1_fu_1098_p1 );
    sensitive << ( zext_ln160_fu_1130_p1 );
    sensitive << ( zext_ln161_1_fu_1162_p1 );
    sensitive << ( zext_ln163_fu_1194_p1 );
    sensitive << ( zext_ln164_1_fu_1226_p1 );

    SC_METHOD(thread_DATA_PARAMETERS_ARLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( DATA_PARAMETERS_ARREADY );

    SC_METHOD(thread_DATA_PARAMETERS_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( DATA_PARAMETERS_ARREADY );

    SC_METHOD(thread_DATA_PARAMETERS_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln154_reg_1430_pp0_iter7_reg );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( ap_CS_fsm_pp5_stage0 );
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( ap_CS_fsm_pp6_stage0 );
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( ap_CS_fsm_pp7_stage0 );
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( icmp_ln164_reg_1636 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_block_pp5_stage0_11001 );
    sensitive << ( ap_block_pp6_stage0_11001 );
    sensitive << ( ap_block_pp7_stage0_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_DATA_PARAMETERS_blk_n_AR);
    sensitive << ( m_axi_DATA_PARAMETERS_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state86 );

    SC_METHOD(thread_DATA_PARAMETERS_blk_n_R);
    sensitive << ( m_axi_DATA_PARAMETERS_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln154_reg_1430_pp0_iter7_reg );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( ap_CS_fsm_pp5_stage0 );
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( ap_block_pp5_stage0 );
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( ap_CS_fsm_pp6_stage0 );
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( ap_block_pp6_stage0 );
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( ap_CS_fsm_pp7_stage0 );
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( ap_block_pp7_stage0 );
    sensitive << ( icmp_ln164_reg_1636 );

    SC_METHOD(thread_acc_fu_1366_p3);
    sensitive << ( output_assign_q0 );
    sensitive << ( fc6_bias_q0 );
    sensitive << ( select_ln125_1_fu_1361_p3 );

    SC_METHOD(thread_add_ln122_fu_1259_p2);
    sensitive << ( indvar_flatten_reg_720 );

    SC_METHOD(thread_add_ln126_fu_1345_p2);
    sensitive << ( sub_ln126_fu_1339_p2 );
    sensitive << ( zext_ln126_fu_1314_p1 );

    SC_METHOD(thread_add_ln154_1_fu_874_p2);
    sensitive << ( phi_urem_reg_625 );

    SC_METHOD(thread_add_ln154_2_fu_974_p2);
    sensitive << ( zext_ln154_fu_960_p1 );
    sensitive << ( zext_ln154_1_fu_970_p1 );

    SC_METHOD(thread_add_ln154_3_fu_920_p2);
    sensitive << ( trunc_ln154_fu_910_p1 );

    SC_METHOD(thread_add_ln154_4_fu_987_p2);
    sensitive << ( add_ln154_2_fu_974_p2 );
    sensitive << ( zext_ln154_3_fu_983_p1 );

    SC_METHOD(thread_add_ln154_5_fu_1009_p2);
    sensitive << ( trunc_ln154_1_fu_993_p1 );
    sensitive << ( p_shl_cast_fu_1001_p3 );

    SC_METHOD(thread_add_ln154_6_fu_1019_p2);
    sensitive << ( add_ln154_5_fu_1009_p2 );
    sensitive << ( zext_ln154_4_fu_1015_p1 );

    SC_METHOD(thread_add_ln154_7_fu_894_p2);
    sensitive << ( phi_mul_reg_614 );

    SC_METHOD(thread_add_ln154_fu_868_p2);
    sensitive << ( phi_ln154_reg_603 );

    SC_METHOD(thread_add_ln155_1_fu_1029_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln155_fu_1050_p2);
    sensitive << ( ap_phi_mux_phi_ln155_phi_fu_640_p4 );

    SC_METHOD(thread_add_ln157_1_fu_1061_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln157_fu_1082_p2);
    sensitive << ( ap_phi_mux_phi_ln157_phi_fu_652_p4 );

    SC_METHOD(thread_add_ln158_1_fu_1093_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln158_fu_1114_p2);
    sensitive << ( ap_phi_mux_phi_ln158_phi_fu_664_p4 );

    SC_METHOD(thread_add_ln160_1_fu_1125_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln160_fu_1146_p2);
    sensitive << ( ap_phi_mux_phi_ln160_phi_fu_676_p4 );

    SC_METHOD(thread_add_ln161_1_fu_1157_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln161_fu_1178_p2);
    sensitive << ( ap_phi_mux_phi_ln161_phi_fu_688_p4 );

    SC_METHOD(thread_add_ln163_1_fu_1189_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln163_fu_1210_p2);
    sensitive << ( ap_phi_mux_phi_ln163_phi_fu_700_p4 );

    SC_METHOD(thread_add_ln164_1_fu_1221_p2);
    sensitive << ( p_cast_reg_1419 );

    SC_METHOD(thread_add_ln164_fu_1242_p2);
    sensitive << ( ap_phi_mux_phi_ln164_phi_fu_712_p4 );

    SC_METHOD(thread_add_ln178_fu_1380_p2);
    sensitive << ( phi_ln178_reg_753 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp5_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp6_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp7_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp8_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp9_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state104);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state105);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state127);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln154_reg_1430_pp0_iter7_reg );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln154_reg_1430_pp0_iter7_reg );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp4_stage0);

    SC_METHOD(thread_ap_block_pp4_stage0_11001);
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp4_stage0_subdone);
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp5_stage0);

    SC_METHOD(thread_ap_block_pp5_stage0_11001);
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp5_stage0_subdone);
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp6_stage0);

    SC_METHOD(thread_ap_block_pp6_stage0_11001);
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp6_stage0_subdone);
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp7_stage0);

    SC_METHOD(thread_ap_block_pp7_stage0_11001);
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( icmp_ln164_reg_1636 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp7_stage0_subdone);
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( icmp_ln164_reg_1636 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_pp8_stage0);

    SC_METHOD(thread_ap_block_pp8_stage0_11001);

    SC_METHOD(thread_ap_block_pp8_stage0_subdone);

    SC_METHOD(thread_ap_block_pp9_stage0);

    SC_METHOD(thread_ap_block_pp9_stage0_01001);

    SC_METHOD(thread_ap_block_pp9_stage0_11001);
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( ap_block_state122_io );

    SC_METHOD(thread_ap_block_pp9_stage0_subdone);
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( ap_block_state122_io );

    SC_METHOD(thread_ap_block_state106_pp8_stage0_iter0);

    SC_METHOD(thread_ap_block_state107_pp8_stage0_iter1);

    SC_METHOD(thread_ap_block_state108_pp8_stage0_iter2);

    SC_METHOD(thread_ap_block_state109_pp8_stage0_iter3);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state110_pp8_stage0_iter4);

    SC_METHOD(thread_ap_block_state111_pp8_stage0_iter5);

    SC_METHOD(thread_ap_block_state112_pp8_stage0_iter6);

    SC_METHOD(thread_ap_block_state113_pp8_stage0_iter7);

    SC_METHOD(thread_ap_block_state114_pp8_stage0_iter8);

    SC_METHOD(thread_ap_block_state115_pp8_stage0_iter9);

    SC_METHOD(thread_ap_block_state116_pp8_stage0_iter10);

    SC_METHOD(thread_ap_block_state117_pp8_stage0_iter11);

    SC_METHOD(thread_ap_block_state118_pp8_stage0_iter12);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state120_pp9_stage0_iter0);

    SC_METHOD(thread_ap_block_state121_pp9_stage0_iter1);

    SC_METHOD(thread_ap_block_state122_io);
    sensitive << ( icmp_ln178_reg_1744_pp9_iter1_reg );
    sensitive << ( DATA_FC6_OUTPUT_WREADY );

    SC_METHOD(thread_ap_block_state122_pp9_stage0_iter2);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter8);
    sensitive << ( icmp_ln154_reg_1430_pp0_iter7_reg );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter1);
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state29_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state38_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state39_pp2_stage0_iter1);
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state40_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state49_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state50_pp3_stage0_iter1);
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state51_pp3_stage0_iter2);

    SC_METHOD(thread_ap_block_state60_pp4_stage0_iter0);

    SC_METHOD(thread_ap_block_state61_pp4_stage0_iter1);
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state62_pp4_stage0_iter2);

    SC_METHOD(thread_ap_block_state71_pp5_stage0_iter0);

    SC_METHOD(thread_ap_block_state72_pp5_stage0_iter1);
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state73_pp5_stage0_iter2);

    SC_METHOD(thread_ap_block_state82_pp6_stage0_iter0);

    SC_METHOD(thread_ap_block_state83_pp6_stage0_iter1);
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state84_pp6_stage0_iter2);

    SC_METHOD(thread_ap_block_state93_pp7_stage0_iter0);

    SC_METHOD(thread_ap_block_state94_pp7_stage0_iter1);
    sensitive << ( icmp_ln164_reg_1636 );
    sensitive << ( DATA_PARAMETERS_RVALID );

    SC_METHOD(thread_ap_block_state95_pp7_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( icmp_ln154_fu_862_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state27);
    sensitive << ( icmp_ln155_fu_1044_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state38);
    sensitive << ( icmp_ln157_fu_1076_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state49);
    sensitive << ( icmp_ln158_fu_1108_p2 );

    SC_METHOD(thread_ap_condition_pp4_exit_iter0_state60);
    sensitive << ( icmp_ln160_fu_1140_p2 );

    SC_METHOD(thread_ap_condition_pp5_exit_iter0_state71);
    sensitive << ( icmp_ln161_fu_1172_p2 );

    SC_METHOD(thread_ap_condition_pp6_exit_iter0_state82);
    sensitive << ( icmp_ln163_fu_1204_p2 );

    SC_METHOD(thread_ap_condition_pp7_exit_iter0_state93);
    sensitive << ( icmp_ln164_fu_1236_p2 );

    SC_METHOD(thread_ap_condition_pp8_exit_iter0_state106);
    sensitive << ( icmp_ln122_fu_1253_p2 );

    SC_METHOD(thread_ap_condition_pp9_exit_iter0_state120);
    sensitive << ( icmp_ln178_fu_1374_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( DATA_FC6_OUTPUT_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_enable_pp4);
    sensitive << ( ap_idle_pp4 );

    SC_METHOD(thread_ap_enable_pp5);
    sensitive << ( ap_idle_pp5 );

    SC_METHOD(thread_ap_enable_pp6);
    sensitive << ( ap_idle_pp6 );

    SC_METHOD(thread_ap_enable_pp7);
    sensitive << ( ap_idle_pp7 );

    SC_METHOD(thread_ap_enable_pp8);
    sensitive << ( ap_idle_pp8 );

    SC_METHOD(thread_ap_enable_pp9);
    sensitive << ( ap_idle_pp9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_ap_idle_pp4);
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp4_iter2 );

    SC_METHOD(thread_ap_idle_pp5);
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( ap_enable_reg_pp5_iter0 );
    sensitive << ( ap_enable_reg_pp5_iter2 );

    SC_METHOD(thread_ap_idle_pp6);
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( ap_enable_reg_pp6_iter0 );
    sensitive << ( ap_enable_reg_pp6_iter2 );

    SC_METHOD(thread_ap_idle_pp7);
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( ap_enable_reg_pp7_iter0 );
    sensitive << ( ap_enable_reg_pp7_iter2 );

    SC_METHOD(thread_ap_idle_pp8);
    sensitive << ( ap_enable_reg_pp8_iter0 );
    sensitive << ( ap_enable_reg_pp8_iter2 );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( ap_enable_reg_pp8_iter3 );
    sensitive << ( ap_enable_reg_pp8_iter4 );
    sensitive << ( ap_enable_reg_pp8_iter5 );
    sensitive << ( ap_enable_reg_pp8_iter6 );
    sensitive << ( ap_enable_reg_pp8_iter7 );
    sensitive << ( ap_enable_reg_pp8_iter8 );
    sensitive << ( ap_enable_reg_pp8_iter9 );
    sensitive << ( ap_enable_reg_pp8_iter10 );
    sensitive << ( ap_enable_reg_pp8_iter11 );
    sensitive << ( ap_enable_reg_pp8_iter12 );

    SC_METHOD(thread_ap_idle_pp9);
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( ap_enable_reg_pp9_iter0 );
    sensitive << ( ap_enable_reg_pp9_iter1 );

    SC_METHOD(thread_ap_phi_mux_c_0_i_phi_fu_735_p4);
    sensitive << ( c_0_i_reg_731 );
    sensitive << ( icmp_ln122_reg_1650 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( select_ln125_3_reg_1681 );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( ap_block_pp8_stage0 );

    SC_METHOD(thread_ap_phi_mux_phi_ln155_phi_fu_640_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln155_reg_1486 );
    sensitive << ( phi_ln155_reg_636 );
    sensitive << ( add_ln155_reg_1490 );

    SC_METHOD(thread_ap_phi_mux_phi_ln157_phi_fu_652_p4);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( icmp_ln157_reg_1511 );
    sensitive << ( phi_ln157_reg_648 );
    sensitive << ( add_ln157_reg_1515 );

    SC_METHOD(thread_ap_phi_mux_phi_ln158_phi_fu_664_p4);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( icmp_ln158_reg_1536 );
    sensitive << ( phi_ln158_reg_660 );
    sensitive << ( add_ln158_reg_1540 );

    SC_METHOD(thread_ap_phi_mux_phi_ln160_phi_fu_676_p4);
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( icmp_ln160_reg_1561 );
    sensitive << ( phi_ln160_reg_672 );
    sensitive << ( add_ln160_reg_1565 );

    SC_METHOD(thread_ap_phi_mux_phi_ln161_phi_fu_688_p4);
    sensitive << ( ap_CS_fsm_pp5_stage0 );
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( ap_block_pp5_stage0 );
    sensitive << ( icmp_ln161_reg_1586 );
    sensitive << ( phi_ln161_reg_684 );
    sensitive << ( add_ln161_reg_1590 );

    SC_METHOD(thread_ap_phi_mux_phi_ln163_phi_fu_700_p4);
    sensitive << ( ap_CS_fsm_pp6_stage0 );
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( ap_block_pp6_stage0 );
    sensitive << ( icmp_ln163_reg_1611 );
    sensitive << ( phi_ln163_reg_696 );
    sensitive << ( add_ln163_reg_1615 );

    SC_METHOD(thread_ap_phi_mux_phi_ln164_phi_fu_712_p4);
    sensitive << ( ap_CS_fsm_pp7_stage0 );
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( ap_block_pp7_stage0 );
    sensitive << ( icmp_ln164_reg_1636 );
    sensitive << ( phi_ln164_reg_708 );
    sensitive << ( add_ln164_reg_1640 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( DATA_FC6_OUTPUT_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_c_fu_1265_p2);
    sensitive << ( ap_phi_mux_c_0_i_phi_fu_735_p4 );

    SC_METHOD(thread_conv1_bias_address0);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( grp_convolution1_fu_780_bias_address0 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( zext_ln155_fu_1056_p1 );

    SC_METHOD(thread_conv1_bias_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( grp_convolution1_fu_780_bias_ce0 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_conv1_bias_we0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln155_reg_1486_pp1_iter1_reg );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_conv1_output_address0);
    sensitive << ( grp_convolution1_fu_780_output_r_address0 );
    sensitive << ( grp_max_pooling2_fu_790_input_r_address0 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state99 );

    SC_METHOD(thread_conv1_output_ce0);
    sensitive << ( grp_convolution1_fu_780_output_r_ce0 );
    sensitive << ( grp_max_pooling2_fu_790_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state99 );

    SC_METHOD(thread_conv1_output_we0);
    sensitive << ( grp_convolution1_fu_780_output_r_we0 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_conv1_weights_0_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( grp_convolution1_fu_780_weights_0_address0 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( zext_ln154_5_fu_1025_p1 );

    SC_METHOD(thread_conv1_weights_0_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( grp_convolution1_fu_780_weights_0_ce0 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_conv1_weights_0_ce1);
    sensitive << ( grp_convolution1_fu_780_weights_0_ce1 );
    sensitive << ( ap_CS_fsm_state97 );

    SC_METHOD(thread_conv1_weights_0_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln154_reg_1430_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_conv3_bias_address0);
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( grp_convolution3_fu_764_bias_address0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( zext_ln158_fu_1120_p1 );

    SC_METHOD(thread_conv3_bias_ce0);
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( grp_convolution3_fu_764_bias_ce0 );
    sensitive << ( ap_CS_fsm_state101 );

    SC_METHOD(thread_conv3_bias_we0);
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( icmp_ln158_reg_1536_pp3_iter1_reg );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_conv3_output_address0);
    sensitive << ( grp_convolution3_fu_764_output_r_address0 );
    sensitive << ( grp_max_pooling4_fu_796_input_r_address0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_METHOD(thread_conv3_output_ce0);
    sensitive << ( grp_convolution3_fu_764_output_r_ce0 );
    sensitive << ( grp_max_pooling4_fu_796_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_METHOD(thread_conv3_output_we0);
    sensitive << ( grp_convolution3_fu_764_output_r_we0 );
    sensitive << ( ap_CS_fsm_state101 );

    SC_METHOD(thread_conv3_weights_address0);
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( grp_convolution3_fu_764_weights_address0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( zext_ln157_1_fu_1088_p1 );

    SC_METHOD(thread_conv3_weights_ce0);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( grp_convolution3_fu_764_weights_ce0 );
    sensitive << ( ap_CS_fsm_state101 );

    SC_METHOD(thread_conv3_weights_ce1);
    sensitive << ( grp_convolution3_fu_764_weights_ce1 );
    sensitive << ( ap_CS_fsm_state101 );

    SC_METHOD(thread_conv3_weights_we0);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( icmp_ln157_reg_1511_pp2_iter1_reg );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_conv5_bias_address0);
    sensitive << ( ap_block_pp5_stage0 );
    sensitive << ( ap_enable_reg_pp5_iter2 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_bias_address0 );
    sensitive << ( zext_ln161_fu_1184_p1 );

    SC_METHOD(thread_conv5_bias_ce0);
    sensitive << ( ap_block_pp5_stage0_11001 );
    sensitive << ( ap_enable_reg_pp5_iter2 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_bias_ce0 );

    SC_METHOD(thread_conv5_bias_we0);
    sensitive << ( ap_block_pp5_stage0_11001 );
    sensitive << ( icmp_ln161_reg_1586_pp5_iter1_reg );
    sensitive << ( ap_enable_reg_pp5_iter2 );

    SC_METHOD(thread_conv5_output_0_0_address0);
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( grp_convolution5_fu_772_output_0_0_address0 );
    sensitive << ( ap_block_pp8_stage0 );
    sensitive << ( zext_ln125_1_fu_1310_p1 );

    SC_METHOD(thread_conv5_output_0_0_ce0);
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( grp_convolution5_fu_772_output_0_0_ce0 );

    SC_METHOD(thread_conv5_output_0_0_we0);
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_output_0_0_we0 );

    SC_METHOD(thread_conv5_weights_address0);
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_weights_address0 );
    sensitive << ( zext_ln160_1_fu_1152_p1 );

    SC_METHOD(thread_conv5_weights_ce0);
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_weights_ce0 );

    SC_METHOD(thread_conv5_weights_we0);
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( icmp_ln160_reg_1561_pp4_iter1_reg );
    sensitive << ( ap_enable_reg_pp4_iter2 );

    SC_METHOD(thread_empty_15_fu_840_p1);
    sensitive << ( parameters3_reg_1396 );

    SC_METHOD(thread_empty_fu_850_p1);
    sensitive << ( fc6_output5_reg_1391 );

    SC_METHOD(thread_fc6_bias_address0);
    sensitive << ( ap_block_pp7_stage0 );
    sensitive << ( ap_enable_reg_pp7_iter2 );
    sensitive << ( ap_enable_reg_pp8_iter5 );
    sensitive << ( ap_block_pp8_stage0 );
    sensitive << ( zext_ln164_fu_1248_p1 );
    sensitive << ( zext_ln125_fu_1356_p1 );

    SC_METHOD(thread_fc6_bias_ce0);
    sensitive << ( ap_block_pp7_stage0_11001 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp7_iter2 );
    sensitive << ( ap_enable_reg_pp8_iter5 );

    SC_METHOD(thread_fc6_bias_we0);
    sensitive << ( ap_block_pp7_stage0_11001 );
    sensitive << ( icmp_ln164_reg_1636_pp7_iter1_reg );
    sensitive << ( ap_enable_reg_pp7_iter2 );

    SC_METHOD(thread_fc6_weights_0_0_address0);
    sensitive << ( ap_block_pp6_stage0 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_enable_reg_pp6_iter2 );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( ap_block_pp8_stage0 );
    sensitive << ( zext_ln163_1_fu_1216_p1 );
    sensitive << ( sext_ln126_fu_1351_p1 );

    SC_METHOD(thread_fc6_weights_0_0_ce0);
    sensitive << ( ap_block_pp6_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp6_iter2 );
    sensitive << ( ap_enable_reg_pp8_iter1 );

    SC_METHOD(thread_fc6_weights_0_0_we0);
    sensitive << ( ap_block_pp6_stage0_11001 );
    sensitive << ( icmp_ln163_reg_1611_pp6_iter1_reg );
    sensitive << ( ap_enable_reg_pp6_iter2 );

    SC_METHOD(thread_grp_convolution1_fu_780_ap_start);
    sensitive << ( grp_convolution1_fu_780_ap_start_reg );

    SC_METHOD(thread_grp_convolution3_fu_764_ap_start);
    sensitive << ( grp_convolution3_fu_764_ap_start_reg );

    SC_METHOD(thread_grp_convolution5_fu_772_ap_start);
    sensitive << ( grp_convolution5_fu_772_ap_start_reg );

    SC_METHOD(thread_grp_fu_954_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_954_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_max_pooling2_fu_790_ap_start);
    sensitive << ( grp_max_pooling2_fu_790_ap_start_reg );

    SC_METHOD(thread_grp_max_pooling4_fu_796_ap_start);
    sensitive << ( grp_max_pooling4_fu_796_ap_start_reg );

    SC_METHOD(thread_icmp_ln122_fu_1253_p2);
    sensitive << ( indvar_flatten_reg_720 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp8_iter0 );

    SC_METHOD(thread_icmp_ln123_fu_1271_p2);
    sensitive << ( n_0_i_reg_742 );
    sensitive << ( icmp_ln122_fu_1253_p2 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp8_iter0 );

    SC_METHOD(thread_icmp_ln125_1_fu_1285_p2);
    sensitive << ( icmp_ln122_fu_1253_p2 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp8_iter0 );
    sensitive << ( ap_phi_mux_c_0_i_phi_fu_735_p4 );

    SC_METHOD(thread_icmp_ln125_fu_1305_p2);
    sensitive << ( icmp_ln122_reg_1650 );
    sensitive << ( ap_CS_fsm_pp8_stage0 );
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( c_reg_1659 );
    sensitive << ( icmp_ln123_reg_1664 );
    sensitive << ( ap_enable_reg_pp8_iter1 );

    SC_METHOD(thread_icmp_ln154_1_fu_914_p2);
    sensitive << ( icmp_ln154_fu_862_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( trunc_ln154_fu_910_p1 );

    SC_METHOD(thread_icmp_ln154_2_fu_880_p2);
    sensitive << ( icmp_ln154_fu_862_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( add_ln154_1_fu_874_p2 );

    SC_METHOD(thread_icmp_ln154_fu_862_p2);
    sensitive << ( phi_ln154_reg_603 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln155_fu_1044_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_phi_ln155_phi_fu_640_p4 );

    SC_METHOD(thread_icmp_ln157_fu_1076_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_phi_mux_phi_ln157_phi_fu_652_p4 );

    SC_METHOD(thread_icmp_ln158_fu_1108_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_phi_mux_phi_ln158_phi_fu_664_p4 );

    SC_METHOD(thread_icmp_ln160_fu_1140_p2);
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_phi_mux_phi_ln160_phi_fu_676_p4 );

    SC_METHOD(thread_icmp_ln161_fu_1172_p2);
    sensitive << ( ap_CS_fsm_pp5_stage0 );
    sensitive << ( ap_block_pp5_stage0_11001 );
    sensitive << ( ap_enable_reg_pp5_iter0 );
    sensitive << ( ap_phi_mux_phi_ln161_phi_fu_688_p4 );

    SC_METHOD(thread_icmp_ln163_fu_1204_p2);
    sensitive << ( ap_CS_fsm_pp6_stage0 );
    sensitive << ( ap_block_pp6_stage0_11001 );
    sensitive << ( ap_enable_reg_pp6_iter0 );
    sensitive << ( ap_phi_mux_phi_ln163_phi_fu_700_p4 );

    SC_METHOD(thread_icmp_ln164_fu_1236_p2);
    sensitive << ( ap_CS_fsm_pp7_stage0 );
    sensitive << ( ap_block_pp7_stage0_11001 );
    sensitive << ( ap_enable_reg_pp7_iter0 );
    sensitive << ( ap_phi_mux_phi_ln164_phi_fu_712_p4 );

    SC_METHOD(thread_icmp_ln178_fu_1374_p2);
    sensitive << ( phi_ln178_reg_753 );
    sensitive << ( ap_CS_fsm_pp9_stage0 );
    sensitive << ( ap_block_pp9_stage0_11001 );
    sensitive << ( ap_enable_reg_pp9_iter0 );

    SC_METHOD(thread_mul_ln154_fu_938_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( mul_ln154_fu_938_p10 );

    SC_METHOD(thread_mul_ln154_fu_938_p10);
    sensitive << ( select_ln154_fu_926_p3 );

    SC_METHOD(thread_mul_ln154_fu_938_p2);
    sensitive << ( mul_ln154_fu_938_p1 );

    SC_METHOD(thread_n_fu_1299_p2);
    sensitive << ( select_ln125_fu_1277_p3 );

    SC_METHOD(thread_output_assign_address0);
    sensitive << ( ap_block_pp9_stage0 );
    sensitive << ( ap_CS_fsm_pp9_stage0 );
    sensitive << ( ap_enable_reg_pp9_iter0 );
    sensitive << ( ap_enable_reg_pp8_iter5 );
    sensitive << ( ap_block_pp8_stage0 );
    sensitive << ( zext_ln125_fu_1356_p1 );
    sensitive << ( zext_ln178_fu_1386_p1 );

    SC_METHOD(thread_output_assign_ce0);
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp9_stage0 );
    sensitive << ( ap_block_pp9_stage0_11001 );
    sensitive << ( ap_enable_reg_pp9_iter0 );
    sensitive << ( ap_enable_reg_pp8_iter5 );

    SC_METHOD(thread_output_assign_ce1);
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( ap_enable_reg_pp8_iter12 );

    SC_METHOD(thread_output_assign_we1);
    sensitive << ( ap_block_pp8_stage0_11001 );
    sensitive << ( icmp_ln122_reg_1650_pp8_iter11_reg );
    sensitive << ( ap_enable_reg_pp8_iter12 );

    SC_METHOD(thread_p_cast_fu_859_p1);
    sensitive << ( parameters3_reg_1396 );

    SC_METHOD(thread_p_shl_cast_fu_1001_p3);
    sensitive << ( trunc_ln154_2_fu_997_p1 );

    SC_METHOD(thread_pool2_output_address0);
    sensitive << ( grp_convolution3_fu_764_input_r_address0 );
    sensitive << ( grp_max_pooling2_fu_790_output_r_address0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state99 );

    SC_METHOD(thread_pool2_output_ce0);
    sensitive << ( grp_convolution3_fu_764_input_r_ce0 );
    sensitive << ( grp_max_pooling2_fu_790_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state99 );

    SC_METHOD(thread_pool2_output_ce1);
    sensitive << ( grp_convolution3_fu_764_input_r_ce1 );
    sensitive << ( ap_CS_fsm_state101 );

    SC_METHOD(thread_pool2_output_we0);
    sensitive << ( grp_max_pooling2_fu_790_output_r_we0 );
    sensitive << ( ap_CS_fsm_state99 );

    SC_METHOD(thread_pool4_output_address0);
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_input_r_address0 );
    sensitive << ( grp_max_pooling4_fu_796_output_r_address0 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_METHOD(thread_pool4_output_ce0);
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_input_r_ce0 );
    sensitive << ( grp_max_pooling4_fu_796_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_METHOD(thread_pool4_output_we0);
    sensitive << ( grp_max_pooling4_fu_796_output_r_we0 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_METHOD(thread_select_ln125_1_fu_1361_p3);
    sensitive << ( icmp_ln123_reg_1664_pp8_iter5_reg );
    sensitive << ( icmp_ln125_1_reg_1676_pp8_iter5_reg );
    sensitive << ( icmp_ln125_reg_1693_pp8_iter5_reg );

    SC_METHOD(thread_select_ln125_3_fu_1291_p3);
    sensitive << ( c_fu_1265_p2 );
    sensitive << ( icmp_ln123_fu_1271_p2 );
    sensitive << ( ap_phi_mux_c_0_i_phi_fu_735_p4 );

    SC_METHOD(thread_select_ln125_fu_1277_p3);
    sensitive << ( n_0_i_reg_742 );
    sensitive << ( icmp_ln123_fu_1271_p2 );

    SC_METHOD(thread_select_ln154_1_fu_886_p3);
    sensitive << ( add_ln154_1_fu_874_p2 );
    sensitive << ( icmp_ln154_2_fu_880_p2 );

    SC_METHOD(thread_select_ln154_fu_926_p3);
    sensitive << ( trunc_ln154_fu_910_p1 );
    sensitive << ( icmp_ln154_1_fu_914_p2 );
    sensitive << ( add_ln154_3_fu_920_p2 );

    SC_METHOD(thread_sext_ln126_fu_1351_p1);
    sensitive << ( add_ln126_fu_1345_p2 );

    SC_METHOD(thread_sext_ln154_fu_980_p1);
    sensitive << ( tmp_13_reg_1460_pp0_iter7_reg );

    SC_METHOD(thread_sub_ln126_fu_1339_p2);
    sensitive << ( zext_ln126_1_fu_1324_p1 );
    sensitive << ( zext_ln126_2_fu_1335_p1 );

    SC_METHOD(thread_tmp_12_fu_963_p3);
    sensitive << ( tmp_reg_1449_pp0_iter7_reg );

    SC_METHOD(thread_tmp_5_fu_1328_p3);
    sensitive << ( select_ln125_reg_1669 );

    SC_METHOD(thread_tmp_s_fu_1317_p3);
    sensitive << ( select_ln125_reg_1669 );

    SC_METHOD(thread_trunc_ln154_1_fu_993_p1);
    sensitive << ( add_ln154_4_fu_987_p2 );

    SC_METHOD(thread_trunc_ln154_2_fu_997_p1);
    sensitive << ( add_ln154_4_fu_987_p2 );

    SC_METHOD(thread_trunc_ln154_fu_910_p1);
    sensitive << ( phi_urem_reg_625 );

    SC_METHOD(thread_zext_ln125_1_fu_1310_p1);
    sensitive << ( select_ln125_3_reg_1681 );

    SC_METHOD(thread_zext_ln125_fu_1356_p1);
    sensitive << ( select_ln125_reg_1669_pp8_iter4_reg );

    SC_METHOD(thread_zext_ln126_1_fu_1324_p1);
    sensitive << ( tmp_s_fu_1317_p3 );

    SC_METHOD(thread_zext_ln126_2_fu_1335_p1);
    sensitive << ( tmp_5_fu_1328_p3 );

    SC_METHOD(thread_zext_ln126_fu_1314_p1);
    sensitive << ( select_ln125_3_reg_1681 );

    SC_METHOD(thread_zext_ln154_1_fu_970_p1);
    sensitive << ( tmp_12_fu_963_p3 );

    SC_METHOD(thread_zext_ln154_3_fu_983_p1);
    sensitive << ( sext_ln154_fu_980_p1 );

    SC_METHOD(thread_zext_ln154_4_fu_1015_p1);
    sensitive << ( grp_fu_954_p2 );

    SC_METHOD(thread_zext_ln154_5_fu_1025_p1);
    sensitive << ( add_ln154_6_reg_1470 );

    SC_METHOD(thread_zext_ln154_fu_960_p1);
    sensitive << ( tmp_reg_1449_pp0_iter7_reg );

    SC_METHOD(thread_zext_ln155_1_fu_1034_p1);
    sensitive << ( add_ln155_1_reg_1475 );

    SC_METHOD(thread_zext_ln155_fu_1056_p1);
    sensitive << ( phi_ln155_reg_636_pp1_iter1_reg );

    SC_METHOD(thread_zext_ln157_1_fu_1088_p1);
    sensitive << ( phi_ln157_reg_648_pp2_iter1_reg );

    SC_METHOD(thread_zext_ln157_fu_1066_p1);
    sensitive << ( add_ln157_1_reg_1500 );

    SC_METHOD(thread_zext_ln158_1_fu_1098_p1);
    sensitive << ( add_ln158_1_reg_1525 );

    SC_METHOD(thread_zext_ln158_fu_1120_p1);
    sensitive << ( phi_ln158_reg_660_pp3_iter1_reg );

    SC_METHOD(thread_zext_ln160_1_fu_1152_p1);
    sensitive << ( phi_ln160_reg_672_pp4_iter1_reg );

    SC_METHOD(thread_zext_ln160_fu_1130_p1);
    sensitive << ( add_ln160_1_reg_1550 );

    SC_METHOD(thread_zext_ln161_1_fu_1162_p1);
    sensitive << ( add_ln161_1_reg_1575 );

    SC_METHOD(thread_zext_ln161_fu_1184_p1);
    sensitive << ( phi_ln161_reg_684_pp5_iter1_reg );

    SC_METHOD(thread_zext_ln163_1_fu_1216_p1);
    sensitive << ( phi_ln163_reg_696_pp6_iter1_reg );

    SC_METHOD(thread_zext_ln163_fu_1194_p1);
    sensitive << ( add_ln163_1_reg_1600 );

    SC_METHOD(thread_zext_ln164_1_fu_1226_p1);
    sensitive << ( add_ln164_1_reg_1625 );

    SC_METHOD(thread_zext_ln164_fu_1248_p1);
    sensitive << ( phi_ln164_reg_708_pp7_iter1_reg );

    SC_METHOD(thread_zext_ln178_fu_1386_p1);
    sensitive << ( phi_ln178_reg_753 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_enable_reg_pp5_iter1 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_enable_reg_pp6_iter1 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_enable_reg_pp7_iter1 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_enable_reg_pp9_iter2 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( DATA_PARAMETERS_ARREADY );
    sensitive << ( DATA_FC6_OUTPUT_AWREADY );
    sensitive << ( DATA_FC6_OUTPUT_BVALID );
    sensitive << ( icmp_ln154_fu_862_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln155_fu_1044_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln157_fu_1076_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( icmp_ln158_fu_1108_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( icmp_ln160_fu_1140_p2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( icmp_ln161_fu_1172_p2 );
    sensitive << ( ap_enable_reg_pp5_iter0 );
    sensitive << ( icmp_ln163_fu_1204_p2 );
    sensitive << ( ap_enable_reg_pp6_iter0 );
    sensitive << ( icmp_ln164_fu_1236_p2 );
    sensitive << ( ap_enable_reg_pp7_iter0 );
    sensitive << ( icmp_ln122_fu_1253_p2 );
    sensitive << ( ap_enable_reg_pp8_iter0 );
    sensitive << ( icmp_ln178_fu_1374_p2 );
    sensitive << ( ap_enable_reg_pp9_iter0 );
    sensitive << ( ap_enable_reg_pp9_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_pp4_stage0_subdone );
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_block_pp5_stage0_subdone );
    sensitive << ( ap_enable_reg_pp5_iter2 );
    sensitive << ( ap_block_pp6_stage0_subdone );
    sensitive << ( ap_enable_reg_pp6_iter2 );
    sensitive << ( ap_block_pp7_stage0_subdone );
    sensitive << ( ap_enable_reg_pp7_iter2 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( grp_convolution5_fu_772_ap_done );
    sensitive << ( ap_block_pp8_stage0_subdone );
    sensitive << ( ap_enable_reg_pp8_iter1 );
    sensitive << ( ap_enable_reg_pp8_iter11 );
    sensitive << ( ap_enable_reg_pp8_iter12 );
    sensitive << ( ap_block_pp9_stage0_subdone );
    sensitive << ( grp_convolution3_fu_764_ap_done );
    sensitive << ( grp_convolution1_fu_780_ap_done );
    sensitive << ( grp_max_pooling2_fu_790_ap_done );
    sensitive << ( grp_max_pooling4_fu_796_ap_done );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state103 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp5_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp6_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp7_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp9_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp5_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp6_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp7_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp9_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp9_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp5_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp6_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp7_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp8_iter12 = SC_LOGIC_0;
    grp_convolution3_fu_764_ap_start_reg = SC_LOGIC_0;
    grp_convolution5_fu_772_ap_start_reg = SC_LOGIC_0;
    grp_convolution1_fu_780_ap_start_reg = SC_LOGIC_0;
    grp_max_pooling2_fu_790_ap_start_reg = SC_LOGIC_0;
    grp_max_pooling4_fu_796_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "lenet_cnn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWVALID, "(port)m_axi_DATA_IMAGE_AWVALID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWREADY, "(port)m_axi_DATA_IMAGE_AWREADY");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWADDR, "(port)m_axi_DATA_IMAGE_AWADDR");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWID, "(port)m_axi_DATA_IMAGE_AWID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWLEN, "(port)m_axi_DATA_IMAGE_AWLEN");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWSIZE, "(port)m_axi_DATA_IMAGE_AWSIZE");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWBURST, "(port)m_axi_DATA_IMAGE_AWBURST");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWLOCK, "(port)m_axi_DATA_IMAGE_AWLOCK");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWCACHE, "(port)m_axi_DATA_IMAGE_AWCACHE");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWPROT, "(port)m_axi_DATA_IMAGE_AWPROT");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWQOS, "(port)m_axi_DATA_IMAGE_AWQOS");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWREGION, "(port)m_axi_DATA_IMAGE_AWREGION");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_AWUSER, "(port)m_axi_DATA_IMAGE_AWUSER");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WVALID, "(port)m_axi_DATA_IMAGE_WVALID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WREADY, "(port)m_axi_DATA_IMAGE_WREADY");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WDATA, "(port)m_axi_DATA_IMAGE_WDATA");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WSTRB, "(port)m_axi_DATA_IMAGE_WSTRB");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WLAST, "(port)m_axi_DATA_IMAGE_WLAST");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WID, "(port)m_axi_DATA_IMAGE_WID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_WUSER, "(port)m_axi_DATA_IMAGE_WUSER");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARVALID, "(port)m_axi_DATA_IMAGE_ARVALID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARREADY, "(port)m_axi_DATA_IMAGE_ARREADY");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARADDR, "(port)m_axi_DATA_IMAGE_ARADDR");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARID, "(port)m_axi_DATA_IMAGE_ARID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARLEN, "(port)m_axi_DATA_IMAGE_ARLEN");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARSIZE, "(port)m_axi_DATA_IMAGE_ARSIZE");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARBURST, "(port)m_axi_DATA_IMAGE_ARBURST");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARLOCK, "(port)m_axi_DATA_IMAGE_ARLOCK");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARCACHE, "(port)m_axi_DATA_IMAGE_ARCACHE");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARPROT, "(port)m_axi_DATA_IMAGE_ARPROT");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARQOS, "(port)m_axi_DATA_IMAGE_ARQOS");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARREGION, "(port)m_axi_DATA_IMAGE_ARREGION");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_ARUSER, "(port)m_axi_DATA_IMAGE_ARUSER");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RVALID, "(port)m_axi_DATA_IMAGE_RVALID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RREADY, "(port)m_axi_DATA_IMAGE_RREADY");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RDATA, "(port)m_axi_DATA_IMAGE_RDATA");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RLAST, "(port)m_axi_DATA_IMAGE_RLAST");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RID, "(port)m_axi_DATA_IMAGE_RID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RUSER, "(port)m_axi_DATA_IMAGE_RUSER");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_RRESP, "(port)m_axi_DATA_IMAGE_RRESP");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_BVALID, "(port)m_axi_DATA_IMAGE_BVALID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_BREADY, "(port)m_axi_DATA_IMAGE_BREADY");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_BRESP, "(port)m_axi_DATA_IMAGE_BRESP");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_BID, "(port)m_axi_DATA_IMAGE_BID");
    sc_trace(mVcdFile, m_axi_DATA_IMAGE_BUSER, "(port)m_axi_DATA_IMAGE_BUSER");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWVALID, "(port)m_axi_DATA_PARAMETERS_AWVALID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWREADY, "(port)m_axi_DATA_PARAMETERS_AWREADY");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWADDR, "(port)m_axi_DATA_PARAMETERS_AWADDR");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWID, "(port)m_axi_DATA_PARAMETERS_AWID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWLEN, "(port)m_axi_DATA_PARAMETERS_AWLEN");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWSIZE, "(port)m_axi_DATA_PARAMETERS_AWSIZE");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWBURST, "(port)m_axi_DATA_PARAMETERS_AWBURST");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWLOCK, "(port)m_axi_DATA_PARAMETERS_AWLOCK");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWCACHE, "(port)m_axi_DATA_PARAMETERS_AWCACHE");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWPROT, "(port)m_axi_DATA_PARAMETERS_AWPROT");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWQOS, "(port)m_axi_DATA_PARAMETERS_AWQOS");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWREGION, "(port)m_axi_DATA_PARAMETERS_AWREGION");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_AWUSER, "(port)m_axi_DATA_PARAMETERS_AWUSER");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WVALID, "(port)m_axi_DATA_PARAMETERS_WVALID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WREADY, "(port)m_axi_DATA_PARAMETERS_WREADY");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WDATA, "(port)m_axi_DATA_PARAMETERS_WDATA");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WSTRB, "(port)m_axi_DATA_PARAMETERS_WSTRB");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WLAST, "(port)m_axi_DATA_PARAMETERS_WLAST");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WID, "(port)m_axi_DATA_PARAMETERS_WID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_WUSER, "(port)m_axi_DATA_PARAMETERS_WUSER");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARVALID, "(port)m_axi_DATA_PARAMETERS_ARVALID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARREADY, "(port)m_axi_DATA_PARAMETERS_ARREADY");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARADDR, "(port)m_axi_DATA_PARAMETERS_ARADDR");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARID, "(port)m_axi_DATA_PARAMETERS_ARID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARLEN, "(port)m_axi_DATA_PARAMETERS_ARLEN");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARSIZE, "(port)m_axi_DATA_PARAMETERS_ARSIZE");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARBURST, "(port)m_axi_DATA_PARAMETERS_ARBURST");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARLOCK, "(port)m_axi_DATA_PARAMETERS_ARLOCK");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARCACHE, "(port)m_axi_DATA_PARAMETERS_ARCACHE");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARPROT, "(port)m_axi_DATA_PARAMETERS_ARPROT");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARQOS, "(port)m_axi_DATA_PARAMETERS_ARQOS");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARREGION, "(port)m_axi_DATA_PARAMETERS_ARREGION");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_ARUSER, "(port)m_axi_DATA_PARAMETERS_ARUSER");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RVALID, "(port)m_axi_DATA_PARAMETERS_RVALID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RREADY, "(port)m_axi_DATA_PARAMETERS_RREADY");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RDATA, "(port)m_axi_DATA_PARAMETERS_RDATA");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RLAST, "(port)m_axi_DATA_PARAMETERS_RLAST");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RID, "(port)m_axi_DATA_PARAMETERS_RID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RUSER, "(port)m_axi_DATA_PARAMETERS_RUSER");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_RRESP, "(port)m_axi_DATA_PARAMETERS_RRESP");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_BVALID, "(port)m_axi_DATA_PARAMETERS_BVALID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_BREADY, "(port)m_axi_DATA_PARAMETERS_BREADY");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_BRESP, "(port)m_axi_DATA_PARAMETERS_BRESP");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_BID, "(port)m_axi_DATA_PARAMETERS_BID");
    sc_trace(mVcdFile, m_axi_DATA_PARAMETERS_BUSER, "(port)m_axi_DATA_PARAMETERS_BUSER");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWVALID, "(port)m_axi_DATA_FC6_OUTPUT_AWVALID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWREADY, "(port)m_axi_DATA_FC6_OUTPUT_AWREADY");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWADDR, "(port)m_axi_DATA_FC6_OUTPUT_AWADDR");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWID, "(port)m_axi_DATA_FC6_OUTPUT_AWID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWLEN, "(port)m_axi_DATA_FC6_OUTPUT_AWLEN");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWSIZE, "(port)m_axi_DATA_FC6_OUTPUT_AWSIZE");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWBURST, "(port)m_axi_DATA_FC6_OUTPUT_AWBURST");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWLOCK, "(port)m_axi_DATA_FC6_OUTPUT_AWLOCK");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWCACHE, "(port)m_axi_DATA_FC6_OUTPUT_AWCACHE");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWPROT, "(port)m_axi_DATA_FC6_OUTPUT_AWPROT");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWQOS, "(port)m_axi_DATA_FC6_OUTPUT_AWQOS");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWREGION, "(port)m_axi_DATA_FC6_OUTPUT_AWREGION");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_AWUSER, "(port)m_axi_DATA_FC6_OUTPUT_AWUSER");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WVALID, "(port)m_axi_DATA_FC6_OUTPUT_WVALID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WREADY, "(port)m_axi_DATA_FC6_OUTPUT_WREADY");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WDATA, "(port)m_axi_DATA_FC6_OUTPUT_WDATA");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WSTRB, "(port)m_axi_DATA_FC6_OUTPUT_WSTRB");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WLAST, "(port)m_axi_DATA_FC6_OUTPUT_WLAST");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WID, "(port)m_axi_DATA_FC6_OUTPUT_WID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_WUSER, "(port)m_axi_DATA_FC6_OUTPUT_WUSER");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARVALID, "(port)m_axi_DATA_FC6_OUTPUT_ARVALID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARREADY, "(port)m_axi_DATA_FC6_OUTPUT_ARREADY");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARADDR, "(port)m_axi_DATA_FC6_OUTPUT_ARADDR");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARID, "(port)m_axi_DATA_FC6_OUTPUT_ARID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARLEN, "(port)m_axi_DATA_FC6_OUTPUT_ARLEN");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARSIZE, "(port)m_axi_DATA_FC6_OUTPUT_ARSIZE");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARBURST, "(port)m_axi_DATA_FC6_OUTPUT_ARBURST");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARLOCK, "(port)m_axi_DATA_FC6_OUTPUT_ARLOCK");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARCACHE, "(port)m_axi_DATA_FC6_OUTPUT_ARCACHE");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARPROT, "(port)m_axi_DATA_FC6_OUTPUT_ARPROT");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARQOS, "(port)m_axi_DATA_FC6_OUTPUT_ARQOS");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARREGION, "(port)m_axi_DATA_FC6_OUTPUT_ARREGION");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_ARUSER, "(port)m_axi_DATA_FC6_OUTPUT_ARUSER");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RVALID, "(port)m_axi_DATA_FC6_OUTPUT_RVALID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RREADY, "(port)m_axi_DATA_FC6_OUTPUT_RREADY");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RDATA, "(port)m_axi_DATA_FC6_OUTPUT_RDATA");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RLAST, "(port)m_axi_DATA_FC6_OUTPUT_RLAST");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RID, "(port)m_axi_DATA_FC6_OUTPUT_RID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RUSER, "(port)m_axi_DATA_FC6_OUTPUT_RUSER");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_RRESP, "(port)m_axi_DATA_FC6_OUTPUT_RRESP");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_BVALID, "(port)m_axi_DATA_FC6_OUTPUT_BVALID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_BREADY, "(port)m_axi_DATA_FC6_OUTPUT_BREADY");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_BRESP, "(port)m_axi_DATA_FC6_OUTPUT_BRESP");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_BID, "(port)m_axi_DATA_FC6_OUTPUT_BID");
    sc_trace(mVcdFile, m_axi_DATA_FC6_OUTPUT_BUSER, "(port)m_axi_DATA_FC6_OUTPUT_BUSER");
    sc_trace(mVcdFile, s_axi_CTL_AWVALID, "(port)s_axi_CTL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTL_AWREADY, "(port)s_axi_CTL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTL_AWADDR, "(port)s_axi_CTL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTL_WVALID, "(port)s_axi_CTL_WVALID");
    sc_trace(mVcdFile, s_axi_CTL_WREADY, "(port)s_axi_CTL_WREADY");
    sc_trace(mVcdFile, s_axi_CTL_WDATA, "(port)s_axi_CTL_WDATA");
    sc_trace(mVcdFile, s_axi_CTL_WSTRB, "(port)s_axi_CTL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTL_ARVALID, "(port)s_axi_CTL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTL_ARREADY, "(port)s_axi_CTL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTL_ARADDR, "(port)s_axi_CTL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTL_RVALID, "(port)s_axi_CTL_RVALID");
    sc_trace(mVcdFile, s_axi_CTL_RREADY, "(port)s_axi_CTL_RREADY");
    sc_trace(mVcdFile, s_axi_CTL_RDATA, "(port)s_axi_CTL_RDATA");
    sc_trace(mVcdFile, s_axi_CTL_RRESP, "(port)s_axi_CTL_RRESP");
    sc_trace(mVcdFile, s_axi_CTL_BVALID, "(port)s_axi_CTL_BVALID");
    sc_trace(mVcdFile, s_axi_CTL_BREADY, "(port)s_axi_CTL_BREADY");
    sc_trace(mVcdFile, s_axi_CTL_BRESP, "(port)s_axi_CTL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, image_r, "image_r");
    sc_trace(mVcdFile, parameters, "parameters");
    sc_trace(mVcdFile, fc6_output, "fc6_output");
    sc_trace(mVcdFile, DATA_PARAMETERS_blk_n_AR, "DATA_PARAMETERS_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, DATA_PARAMETERS_blk_n_R, "DATA_PARAMETERS_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln154_reg_1430, "icmp_ln154_reg_1430");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter7_reg, "icmp_ln154_reg_1430_pp0_iter7_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln155_reg_1486, "icmp_ln155_reg_1486");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, icmp_ln157_reg_1511, "icmp_ln157_reg_1511");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, icmp_ln158_reg_1536, "icmp_ln158_reg_1536");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage0, "ap_CS_fsm_pp4_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter1, "ap_enable_reg_pp4_iter1");
    sc_trace(mVcdFile, ap_block_pp4_stage0, "ap_block_pp4_stage0");
    sc_trace(mVcdFile, icmp_ln160_reg_1561, "icmp_ln160_reg_1561");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_pp5_stage0, "ap_CS_fsm_pp5_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp5_iter1, "ap_enable_reg_pp5_iter1");
    sc_trace(mVcdFile, ap_block_pp5_stage0, "ap_block_pp5_stage0");
    sc_trace(mVcdFile, icmp_ln161_reg_1586, "icmp_ln161_reg_1586");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_pp6_stage0, "ap_CS_fsm_pp6_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp6_iter1, "ap_enable_reg_pp6_iter1");
    sc_trace(mVcdFile, ap_block_pp6_stage0, "ap_block_pp6_stage0");
    sc_trace(mVcdFile, icmp_ln163_reg_1611, "icmp_ln163_reg_1611");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_pp7_stage0, "ap_CS_fsm_pp7_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp7_iter1, "ap_enable_reg_pp7_iter1");
    sc_trace(mVcdFile, ap_block_pp7_stage0, "ap_block_pp7_stage0");
    sc_trace(mVcdFile, icmp_ln164_reg_1636, "icmp_ln164_reg_1636");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_blk_n_AW, "DATA_FC6_OUTPUT_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state119, "ap_CS_fsm_state119");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_blk_n_W, "DATA_FC6_OUTPUT_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp9_iter2, "ap_enable_reg_pp9_iter2");
    sc_trace(mVcdFile, ap_block_pp9_stage0, "ap_block_pp9_stage0");
    sc_trace(mVcdFile, icmp_ln178_reg_1744, "icmp_ln178_reg_1744");
    sc_trace(mVcdFile, icmp_ln178_reg_1744_pp9_iter1_reg, "icmp_ln178_reg_1744_pp9_iter1_reg");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_blk_n_B, "DATA_FC6_OUTPUT_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state127, "ap_CS_fsm_state127");
    sc_trace(mVcdFile, DATA_IMAGE_AWREADY, "DATA_IMAGE_AWREADY");
    sc_trace(mVcdFile, DATA_IMAGE_WREADY, "DATA_IMAGE_WREADY");
    sc_trace(mVcdFile, DATA_IMAGE_ARVALID, "DATA_IMAGE_ARVALID");
    sc_trace(mVcdFile, DATA_IMAGE_ARREADY, "DATA_IMAGE_ARREADY");
    sc_trace(mVcdFile, DATA_IMAGE_RVALID, "DATA_IMAGE_RVALID");
    sc_trace(mVcdFile, DATA_IMAGE_RREADY, "DATA_IMAGE_RREADY");
    sc_trace(mVcdFile, DATA_IMAGE_RDATA, "DATA_IMAGE_RDATA");
    sc_trace(mVcdFile, DATA_IMAGE_RLAST, "DATA_IMAGE_RLAST");
    sc_trace(mVcdFile, DATA_IMAGE_RID, "DATA_IMAGE_RID");
    sc_trace(mVcdFile, DATA_IMAGE_RUSER, "DATA_IMAGE_RUSER");
    sc_trace(mVcdFile, DATA_IMAGE_RRESP, "DATA_IMAGE_RRESP");
    sc_trace(mVcdFile, DATA_IMAGE_BVALID, "DATA_IMAGE_BVALID");
    sc_trace(mVcdFile, DATA_IMAGE_BRESP, "DATA_IMAGE_BRESP");
    sc_trace(mVcdFile, DATA_IMAGE_BID, "DATA_IMAGE_BID");
    sc_trace(mVcdFile, DATA_IMAGE_BUSER, "DATA_IMAGE_BUSER");
    sc_trace(mVcdFile, DATA_PARAMETERS_AWREADY, "DATA_PARAMETERS_AWREADY");
    sc_trace(mVcdFile, DATA_PARAMETERS_WREADY, "DATA_PARAMETERS_WREADY");
    sc_trace(mVcdFile, DATA_PARAMETERS_ARVALID, "DATA_PARAMETERS_ARVALID");
    sc_trace(mVcdFile, DATA_PARAMETERS_ARREADY, "DATA_PARAMETERS_ARREADY");
    sc_trace(mVcdFile, DATA_PARAMETERS_ARADDR, "DATA_PARAMETERS_ARADDR");
    sc_trace(mVcdFile, DATA_PARAMETERS_ARLEN, "DATA_PARAMETERS_ARLEN");
    sc_trace(mVcdFile, DATA_PARAMETERS_RVALID, "DATA_PARAMETERS_RVALID");
    sc_trace(mVcdFile, DATA_PARAMETERS_RREADY, "DATA_PARAMETERS_RREADY");
    sc_trace(mVcdFile, DATA_PARAMETERS_RDATA, "DATA_PARAMETERS_RDATA");
    sc_trace(mVcdFile, DATA_PARAMETERS_RLAST, "DATA_PARAMETERS_RLAST");
    sc_trace(mVcdFile, DATA_PARAMETERS_RID, "DATA_PARAMETERS_RID");
    sc_trace(mVcdFile, DATA_PARAMETERS_RUSER, "DATA_PARAMETERS_RUSER");
    sc_trace(mVcdFile, DATA_PARAMETERS_RRESP, "DATA_PARAMETERS_RRESP");
    sc_trace(mVcdFile, DATA_PARAMETERS_BVALID, "DATA_PARAMETERS_BVALID");
    sc_trace(mVcdFile, DATA_PARAMETERS_BRESP, "DATA_PARAMETERS_BRESP");
    sc_trace(mVcdFile, DATA_PARAMETERS_BID, "DATA_PARAMETERS_BID");
    sc_trace(mVcdFile, DATA_PARAMETERS_BUSER, "DATA_PARAMETERS_BUSER");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_AWVALID, "DATA_FC6_OUTPUT_AWVALID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_AWREADY, "DATA_FC6_OUTPUT_AWREADY");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_WVALID, "DATA_FC6_OUTPUT_WVALID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_WREADY, "DATA_FC6_OUTPUT_WREADY");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_ARREADY, "DATA_FC6_OUTPUT_ARREADY");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RVALID, "DATA_FC6_OUTPUT_RVALID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RDATA, "DATA_FC6_OUTPUT_RDATA");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RLAST, "DATA_FC6_OUTPUT_RLAST");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RID, "DATA_FC6_OUTPUT_RID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RUSER, "DATA_FC6_OUTPUT_RUSER");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_RRESP, "DATA_FC6_OUTPUT_RRESP");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_BVALID, "DATA_FC6_OUTPUT_BVALID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_BREADY, "DATA_FC6_OUTPUT_BREADY");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_BRESP, "DATA_FC6_OUTPUT_BRESP");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_BID, "DATA_FC6_OUTPUT_BID");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_BUSER, "DATA_FC6_OUTPUT_BUSER");
    sc_trace(mVcdFile, phi_ln154_reg_603, "phi_ln154_reg_603");
    sc_trace(mVcdFile, phi_mul_reg_614, "phi_mul_reg_614");
    sc_trace(mVcdFile, phi_urem_reg_625, "phi_urem_reg_625");
    sc_trace(mVcdFile, phi_ln155_reg_636, "phi_ln155_reg_636");
    sc_trace(mVcdFile, phi_ln155_reg_636_pp1_iter1_reg, "phi_ln155_reg_636_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter0, "ap_block_state27_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter1, "ap_block_state28_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage0_iter2, "ap_block_state29_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, phi_ln157_reg_648, "phi_ln157_reg_648");
    sc_trace(mVcdFile, phi_ln157_reg_648_pp2_iter1_reg, "phi_ln157_reg_648_pp2_iter1_reg");
    sc_trace(mVcdFile, ap_block_state38_pp2_stage0_iter0, "ap_block_state38_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state39_pp2_stage0_iter1, "ap_block_state39_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state40_pp2_stage0_iter2, "ap_block_state40_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, phi_ln158_reg_660, "phi_ln158_reg_660");
    sc_trace(mVcdFile, phi_ln158_reg_660_pp3_iter1_reg, "phi_ln158_reg_660_pp3_iter1_reg");
    sc_trace(mVcdFile, ap_block_state49_pp3_stage0_iter0, "ap_block_state49_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state50_pp3_stage0_iter1, "ap_block_state50_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state51_pp3_stage0_iter2, "ap_block_state51_pp3_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, phi_ln160_reg_672, "phi_ln160_reg_672");
    sc_trace(mVcdFile, phi_ln160_reg_672_pp4_iter1_reg, "phi_ln160_reg_672_pp4_iter1_reg");
    sc_trace(mVcdFile, ap_block_state60_pp4_stage0_iter0, "ap_block_state60_pp4_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state61_pp4_stage0_iter1, "ap_block_state61_pp4_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state62_pp4_stage0_iter2, "ap_block_state62_pp4_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp4_stage0_11001, "ap_block_pp4_stage0_11001");
    sc_trace(mVcdFile, phi_ln161_reg_684, "phi_ln161_reg_684");
    sc_trace(mVcdFile, phi_ln161_reg_684_pp5_iter1_reg, "phi_ln161_reg_684_pp5_iter1_reg");
    sc_trace(mVcdFile, ap_block_state71_pp5_stage0_iter0, "ap_block_state71_pp5_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state72_pp5_stage0_iter1, "ap_block_state72_pp5_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state73_pp5_stage0_iter2, "ap_block_state73_pp5_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp5_stage0_11001, "ap_block_pp5_stage0_11001");
    sc_trace(mVcdFile, phi_ln163_reg_696, "phi_ln163_reg_696");
    sc_trace(mVcdFile, phi_ln163_reg_696_pp6_iter1_reg, "phi_ln163_reg_696_pp6_iter1_reg");
    sc_trace(mVcdFile, ap_block_state82_pp6_stage0_iter0, "ap_block_state82_pp6_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state83_pp6_stage0_iter1, "ap_block_state83_pp6_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state84_pp6_stage0_iter2, "ap_block_state84_pp6_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp6_stage0_11001, "ap_block_pp6_stage0_11001");
    sc_trace(mVcdFile, phi_ln164_reg_708, "phi_ln164_reg_708");
    sc_trace(mVcdFile, phi_ln164_reg_708_pp7_iter1_reg, "phi_ln164_reg_708_pp7_iter1_reg");
    sc_trace(mVcdFile, ap_block_state93_pp7_stage0_iter0, "ap_block_state93_pp7_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state94_pp7_stage0_iter1, "ap_block_state94_pp7_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state95_pp7_stage0_iter2, "ap_block_state95_pp7_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp7_stage0_11001, "ap_block_pp7_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_reg_720, "indvar_flatten_reg_720");
    sc_trace(mVcdFile, c_0_i_reg_731, "c_0_i_reg_731");
    sc_trace(mVcdFile, n_0_i_reg_742, "n_0_i_reg_742");
    sc_trace(mVcdFile, phi_ln178_reg_753, "phi_ln178_reg_753");
    sc_trace(mVcdFile, fc6_output5_reg_1391, "fc6_output5_reg_1391");
    sc_trace(mVcdFile, parameters3_reg_1396, "parameters3_reg_1396");
    sc_trace(mVcdFile, image1_reg_1402, "image1_reg_1402");
    sc_trace(mVcdFile, DATA_FC6_OUTPUT_addr_reg_1413, "DATA_FC6_OUTPUT_addr_reg_1413");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_cast_fu_859_p1, "p_cast_fu_859_p1");
    sc_trace(mVcdFile, p_cast_reg_1419, "p_cast_reg_1419");
    sc_trace(mVcdFile, icmp_ln154_fu_862_p2, "icmp_ln154_fu_862_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter3, "ap_block_state12_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter4, "ap_block_state13_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter5, "ap_block_state14_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter6, "ap_block_state15_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter7, "ap_block_state16_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter8, "ap_block_state17_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter9, "ap_block_state18_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter1_reg, "icmp_ln154_reg_1430_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter2_reg, "icmp_ln154_reg_1430_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter3_reg, "icmp_ln154_reg_1430_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter4_reg, "icmp_ln154_reg_1430_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter5_reg, "icmp_ln154_reg_1430_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter6_reg, "icmp_ln154_reg_1430_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln154_reg_1430_pp0_iter8_reg, "icmp_ln154_reg_1430_pp0_iter8_reg");
    sc_trace(mVcdFile, add_ln154_fu_868_p2, "add_ln154_fu_868_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln154_1_fu_886_p3, "select_ln154_1_fu_886_p3");
    sc_trace(mVcdFile, add_ln154_7_fu_894_p2, "add_ln154_7_fu_894_p2");
    sc_trace(mVcdFile, tmp_reg_1449, "tmp_reg_1449");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter1_reg, "tmp_reg_1449_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter2_reg, "tmp_reg_1449_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter3_reg, "tmp_reg_1449_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter4_reg, "tmp_reg_1449_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter5_reg, "tmp_reg_1449_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter6_reg, "tmp_reg_1449_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_reg_1449_pp0_iter7_reg, "tmp_reg_1449_pp0_iter7_reg");
    sc_trace(mVcdFile, select_ln154_fu_926_p3, "select_ln154_fu_926_p3");
    sc_trace(mVcdFile, tmp_13_reg_1460, "tmp_13_reg_1460");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter1_reg, "tmp_13_reg_1460_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter2_reg, "tmp_13_reg_1460_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter3_reg, "tmp_13_reg_1460_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter4_reg, "tmp_13_reg_1460_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter5_reg, "tmp_13_reg_1460_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter6_reg, "tmp_13_reg_1460_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_13_reg_1460_pp0_iter7_reg, "tmp_13_reg_1460_pp0_iter7_reg");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_9_reg_1465, "DATA_PARAMETERS_addr_9_reg_1465");
    sc_trace(mVcdFile, add_ln154_6_fu_1019_p2, "add_ln154_6_fu_1019_p2");
    sc_trace(mVcdFile, add_ln154_6_reg_1470, "add_ln154_6_reg_1470");
    sc_trace(mVcdFile, add_ln155_1_fu_1029_p2, "add_ln155_1_fu_1029_p2");
    sc_trace(mVcdFile, add_ln155_1_reg_1475, "add_ln155_1_reg_1475");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, icmp_ln155_fu_1044_p2, "icmp_ln155_fu_1044_p2");
    sc_trace(mVcdFile, icmp_ln155_reg_1486_pp1_iter1_reg, "icmp_ln155_reg_1486_pp1_iter1_reg");
    sc_trace(mVcdFile, add_ln155_fu_1050_p2, "add_ln155_fu_1050_p2");
    sc_trace(mVcdFile, add_ln155_reg_1490, "add_ln155_reg_1490");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_11_reg_1495, "DATA_PARAMETERS_addr_11_reg_1495");
    sc_trace(mVcdFile, add_ln157_1_fu_1061_p2, "add_ln157_1_fu_1061_p2");
    sc_trace(mVcdFile, add_ln157_1_reg_1500, "add_ln157_1_reg_1500");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, icmp_ln157_fu_1076_p2, "icmp_ln157_fu_1076_p2");
    sc_trace(mVcdFile, icmp_ln157_reg_1511_pp2_iter1_reg, "icmp_ln157_reg_1511_pp2_iter1_reg");
    sc_trace(mVcdFile, add_ln157_fu_1082_p2, "add_ln157_fu_1082_p2");
    sc_trace(mVcdFile, add_ln157_reg_1515, "add_ln157_reg_1515");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_13_reg_1520, "DATA_PARAMETERS_addr_13_reg_1520");
    sc_trace(mVcdFile, add_ln158_1_fu_1093_p2, "add_ln158_1_fu_1093_p2");
    sc_trace(mVcdFile, add_ln158_1_reg_1525, "add_ln158_1_reg_1525");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, icmp_ln158_fu_1108_p2, "icmp_ln158_fu_1108_p2");
    sc_trace(mVcdFile, icmp_ln158_reg_1536_pp3_iter1_reg, "icmp_ln158_reg_1536_pp3_iter1_reg");
    sc_trace(mVcdFile, add_ln158_fu_1114_p2, "add_ln158_fu_1114_p2");
    sc_trace(mVcdFile, add_ln158_reg_1540, "add_ln158_reg_1540");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_15_reg_1545, "DATA_PARAMETERS_addr_15_reg_1545");
    sc_trace(mVcdFile, add_ln160_1_fu_1125_p2, "add_ln160_1_fu_1125_p2");
    sc_trace(mVcdFile, add_ln160_1_reg_1550, "add_ln160_1_reg_1550");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, icmp_ln160_fu_1140_p2, "icmp_ln160_fu_1140_p2");
    sc_trace(mVcdFile, icmp_ln160_reg_1561_pp4_iter1_reg, "icmp_ln160_reg_1561_pp4_iter1_reg");
    sc_trace(mVcdFile, add_ln160_fu_1146_p2, "add_ln160_fu_1146_p2");
    sc_trace(mVcdFile, add_ln160_reg_1565, "add_ln160_reg_1565");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter0, "ap_enable_reg_pp4_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_17_reg_1570, "DATA_PARAMETERS_addr_17_reg_1570");
    sc_trace(mVcdFile, add_ln161_1_fu_1157_p2, "add_ln161_1_fu_1157_p2");
    sc_trace(mVcdFile, add_ln161_1_reg_1575, "add_ln161_1_reg_1575");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, icmp_ln161_fu_1172_p2, "icmp_ln161_fu_1172_p2");
    sc_trace(mVcdFile, icmp_ln161_reg_1586_pp5_iter1_reg, "icmp_ln161_reg_1586_pp5_iter1_reg");
    sc_trace(mVcdFile, add_ln161_fu_1178_p2, "add_ln161_fu_1178_p2");
    sc_trace(mVcdFile, add_ln161_reg_1590, "add_ln161_reg_1590");
    sc_trace(mVcdFile, ap_enable_reg_pp5_iter0, "ap_enable_reg_pp5_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_19_reg_1595, "DATA_PARAMETERS_addr_19_reg_1595");
    sc_trace(mVcdFile, add_ln163_1_fu_1189_p2, "add_ln163_1_fu_1189_p2");
    sc_trace(mVcdFile, add_ln163_1_reg_1600, "add_ln163_1_reg_1600");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, icmp_ln163_fu_1204_p2, "icmp_ln163_fu_1204_p2");
    sc_trace(mVcdFile, icmp_ln163_reg_1611_pp6_iter1_reg, "icmp_ln163_reg_1611_pp6_iter1_reg");
    sc_trace(mVcdFile, add_ln163_fu_1210_p2, "add_ln163_fu_1210_p2");
    sc_trace(mVcdFile, add_ln163_reg_1615, "add_ln163_reg_1615");
    sc_trace(mVcdFile, ap_enable_reg_pp6_iter0, "ap_enable_reg_pp6_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_21_reg_1620, "DATA_PARAMETERS_addr_21_reg_1620");
    sc_trace(mVcdFile, add_ln164_1_fu_1221_p2, "add_ln164_1_fu_1221_p2");
    sc_trace(mVcdFile, add_ln164_1_reg_1625, "add_ln164_1_reg_1625");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, icmp_ln164_fu_1236_p2, "icmp_ln164_fu_1236_p2");
    sc_trace(mVcdFile, icmp_ln164_reg_1636_pp7_iter1_reg, "icmp_ln164_reg_1636_pp7_iter1_reg");
    sc_trace(mVcdFile, add_ln164_fu_1242_p2, "add_ln164_fu_1242_p2");
    sc_trace(mVcdFile, add_ln164_reg_1640, "add_ln164_reg_1640");
    sc_trace(mVcdFile, ap_enable_reg_pp7_iter0, "ap_enable_reg_pp7_iter0");
    sc_trace(mVcdFile, DATA_PARAMETERS_addr_23_reg_1645, "DATA_PARAMETERS_addr_23_reg_1645");
    sc_trace(mVcdFile, icmp_ln122_fu_1253_p2, "icmp_ln122_fu_1253_p2");
    sc_trace(mVcdFile, icmp_ln122_reg_1650, "icmp_ln122_reg_1650");
    sc_trace(mVcdFile, ap_CS_fsm_pp8_stage0, "ap_CS_fsm_pp8_stage0");
    sc_trace(mVcdFile, ap_block_state106_pp8_stage0_iter0, "ap_block_state106_pp8_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state107_pp8_stage0_iter1, "ap_block_state107_pp8_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state108_pp8_stage0_iter2, "ap_block_state108_pp8_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state109_pp8_stage0_iter3, "ap_block_state109_pp8_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state110_pp8_stage0_iter4, "ap_block_state110_pp8_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state111_pp8_stage0_iter5, "ap_block_state111_pp8_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state112_pp8_stage0_iter6, "ap_block_state112_pp8_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state113_pp8_stage0_iter7, "ap_block_state113_pp8_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state114_pp8_stage0_iter8, "ap_block_state114_pp8_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state115_pp8_stage0_iter9, "ap_block_state115_pp8_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state116_pp8_stage0_iter10, "ap_block_state116_pp8_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state117_pp8_stage0_iter11, "ap_block_state117_pp8_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state118_pp8_stage0_iter12, "ap_block_state118_pp8_stage0_iter12");
    sc_trace(mVcdFile, ap_block_pp8_stage0_11001, "ap_block_pp8_stage0_11001");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter1_reg, "icmp_ln122_reg_1650_pp8_iter1_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter2_reg, "icmp_ln122_reg_1650_pp8_iter2_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter3_reg, "icmp_ln122_reg_1650_pp8_iter3_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter4_reg, "icmp_ln122_reg_1650_pp8_iter4_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter5_reg, "icmp_ln122_reg_1650_pp8_iter5_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter6_reg, "icmp_ln122_reg_1650_pp8_iter6_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter7_reg, "icmp_ln122_reg_1650_pp8_iter7_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter8_reg, "icmp_ln122_reg_1650_pp8_iter8_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter9_reg, "icmp_ln122_reg_1650_pp8_iter9_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter10_reg, "icmp_ln122_reg_1650_pp8_iter10_reg");
    sc_trace(mVcdFile, icmp_ln122_reg_1650_pp8_iter11_reg, "icmp_ln122_reg_1650_pp8_iter11_reg");
    sc_trace(mVcdFile, add_ln122_fu_1259_p2, "add_ln122_fu_1259_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter0, "ap_enable_reg_pp8_iter0");
    sc_trace(mVcdFile, c_fu_1265_p2, "c_fu_1265_p2");
    sc_trace(mVcdFile, c_reg_1659, "c_reg_1659");
    sc_trace(mVcdFile, icmp_ln123_fu_1271_p2, "icmp_ln123_fu_1271_p2");
    sc_trace(mVcdFile, icmp_ln123_reg_1664, "icmp_ln123_reg_1664");
    sc_trace(mVcdFile, icmp_ln123_reg_1664_pp8_iter1_reg, "icmp_ln123_reg_1664_pp8_iter1_reg");
    sc_trace(mVcdFile, icmp_ln123_reg_1664_pp8_iter2_reg, "icmp_ln123_reg_1664_pp8_iter2_reg");
    sc_trace(mVcdFile, icmp_ln123_reg_1664_pp8_iter3_reg, "icmp_ln123_reg_1664_pp8_iter3_reg");
    sc_trace(mVcdFile, icmp_ln123_reg_1664_pp8_iter4_reg, "icmp_ln123_reg_1664_pp8_iter4_reg");
    sc_trace(mVcdFile, icmp_ln123_reg_1664_pp8_iter5_reg, "icmp_ln123_reg_1664_pp8_iter5_reg");
    sc_trace(mVcdFile, select_ln125_fu_1277_p3, "select_ln125_fu_1277_p3");
    sc_trace(mVcdFile, select_ln125_reg_1669, "select_ln125_reg_1669");
    sc_trace(mVcdFile, select_ln125_reg_1669_pp8_iter1_reg, "select_ln125_reg_1669_pp8_iter1_reg");
    sc_trace(mVcdFile, select_ln125_reg_1669_pp8_iter2_reg, "select_ln125_reg_1669_pp8_iter2_reg");
    sc_trace(mVcdFile, select_ln125_reg_1669_pp8_iter3_reg, "select_ln125_reg_1669_pp8_iter3_reg");
    sc_trace(mVcdFile, select_ln125_reg_1669_pp8_iter4_reg, "select_ln125_reg_1669_pp8_iter4_reg");
    sc_trace(mVcdFile, icmp_ln125_1_fu_1285_p2, "icmp_ln125_1_fu_1285_p2");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676, "icmp_ln125_1_reg_1676");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676_pp8_iter1_reg, "icmp_ln125_1_reg_1676_pp8_iter1_reg");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676_pp8_iter2_reg, "icmp_ln125_1_reg_1676_pp8_iter2_reg");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676_pp8_iter3_reg, "icmp_ln125_1_reg_1676_pp8_iter3_reg");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676_pp8_iter4_reg, "icmp_ln125_1_reg_1676_pp8_iter4_reg");
    sc_trace(mVcdFile, icmp_ln125_1_reg_1676_pp8_iter5_reg, "icmp_ln125_1_reg_1676_pp8_iter5_reg");
    sc_trace(mVcdFile, select_ln125_3_fu_1291_p3, "select_ln125_3_fu_1291_p3");
    sc_trace(mVcdFile, select_ln125_3_reg_1681, "select_ln125_3_reg_1681");
    sc_trace(mVcdFile, n_fu_1299_p2, "n_fu_1299_p2");
    sc_trace(mVcdFile, icmp_ln125_fu_1305_p2, "icmp_ln125_fu_1305_p2");
    sc_trace(mVcdFile, icmp_ln125_reg_1693, "icmp_ln125_reg_1693");
    sc_trace(mVcdFile, icmp_ln125_reg_1693_pp8_iter2_reg, "icmp_ln125_reg_1693_pp8_iter2_reg");
    sc_trace(mVcdFile, icmp_ln125_reg_1693_pp8_iter3_reg, "icmp_ln125_reg_1693_pp8_iter3_reg");
    sc_trace(mVcdFile, icmp_ln125_reg_1693_pp8_iter4_reg, "icmp_ln125_reg_1693_pp8_iter4_reg");
    sc_trace(mVcdFile, icmp_ln125_reg_1693_pp8_iter5_reg, "icmp_ln125_reg_1693_pp8_iter5_reg");
    sc_trace(mVcdFile, conv5_output_0_0_q0, "conv5_output_0_0_q0");
    sc_trace(mVcdFile, conv5_output_0_0_l_reg_1708, "conv5_output_0_0_l_reg_1708");
    sc_trace(mVcdFile, fc6_weights_0_0_q0, "fc6_weights_0_0_q0");
    sc_trace(mVcdFile, fc6_weights_0_0_lo_reg_1713, "fc6_weights_0_0_lo_reg_1713");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter2, "ap_enable_reg_pp8_iter2");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723, "output_assign_addr_1_reg_1723");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter6_reg, "output_assign_addr_1_reg_1723_pp8_iter6_reg");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter7_reg, "output_assign_addr_1_reg_1723_pp8_iter7_reg");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter8_reg, "output_assign_addr_1_reg_1723_pp8_iter8_reg");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter9_reg, "output_assign_addr_1_reg_1723_pp8_iter9_reg");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter10_reg, "output_assign_addr_1_reg_1723_pp8_iter10_reg");
    sc_trace(mVcdFile, output_assign_addr_1_reg_1723_pp8_iter11_reg, "output_assign_addr_1_reg_1723_pp8_iter11_reg");
    sc_trace(mVcdFile, acc_fu_1366_p3, "acc_fu_1366_p3");
    sc_trace(mVcdFile, acc_reg_1729, "acc_reg_1729");
    sc_trace(mVcdFile, grp_fu_806_p2, "grp_fu_806_p2");
    sc_trace(mVcdFile, tmp_i_reg_1734, "tmp_i_reg_1734");
    sc_trace(mVcdFile, grp_fu_802_p2, "grp_fu_802_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_1739, "tmp_7_i_reg_1739");
    sc_trace(mVcdFile, icmp_ln178_fu_1374_p2, "icmp_ln178_fu_1374_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp9_stage0, "ap_CS_fsm_pp9_stage0");
    sc_trace(mVcdFile, ap_block_state120_pp9_stage0_iter0, "ap_block_state120_pp9_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state121_pp9_stage0_iter1, "ap_block_state121_pp9_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state122_pp9_stage0_iter2, "ap_block_state122_pp9_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state122_io, "ap_block_state122_io");
    sc_trace(mVcdFile, ap_block_pp9_stage0_11001, "ap_block_pp9_stage0_11001");
    sc_trace(mVcdFile, add_ln178_fu_1380_p2, "add_ln178_fu_1380_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp9_iter0, "ap_enable_reg_pp9_iter0");
    sc_trace(mVcdFile, output_assign_q0, "output_assign_q0");
    sc_trace(mVcdFile, output_assign_load_reg_1758, "output_assign_load_reg_1758");
    sc_trace(mVcdFile, ap_enable_reg_pp9_iter1, "ap_enable_reg_pp9_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state27, "ap_condition_pp1_exit_iter0_state27");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state38, "ap_condition_pp2_exit_iter0_state38");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state49, "ap_condition_pp3_exit_iter0_state49");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_block_pp4_stage0_subdone, "ap_block_pp4_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp4_exit_iter0_state60, "ap_condition_pp4_exit_iter0_state60");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter2, "ap_enable_reg_pp4_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_block_pp5_stage0_subdone, "ap_block_pp5_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp5_exit_iter0_state71, "ap_condition_pp5_exit_iter0_state71");
    sc_trace(mVcdFile, ap_enable_reg_pp5_iter2, "ap_enable_reg_pp5_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_block_pp6_stage0_subdone, "ap_block_pp6_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp6_exit_iter0_state82, "ap_condition_pp6_exit_iter0_state82");
    sc_trace(mVcdFile, ap_enable_reg_pp6_iter2, "ap_enable_reg_pp6_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state92, "ap_CS_fsm_state92");
    sc_trace(mVcdFile, ap_block_pp7_stage0_subdone, "ap_block_pp7_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp7_exit_iter0_state93, "ap_condition_pp7_exit_iter0_state93");
    sc_trace(mVcdFile, ap_enable_reg_pp7_iter2, "ap_enable_reg_pp7_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state105, "ap_CS_fsm_state105");
    sc_trace(mVcdFile, grp_convolution5_fu_772_ap_ready, "grp_convolution5_fu_772_ap_ready");
    sc_trace(mVcdFile, grp_convolution5_fu_772_ap_done, "grp_convolution5_fu_772_ap_done");
    sc_trace(mVcdFile, ap_block_pp8_stage0_subdone, "ap_block_pp8_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp8_exit_iter0_state106, "ap_condition_pp8_exit_iter0_state106");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter1, "ap_enable_reg_pp8_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter3, "ap_enable_reg_pp8_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter4, "ap_enable_reg_pp8_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter5, "ap_enable_reg_pp8_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter6, "ap_enable_reg_pp8_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter7, "ap_enable_reg_pp8_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter8, "ap_enable_reg_pp8_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter9, "ap_enable_reg_pp8_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter10, "ap_enable_reg_pp8_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter11, "ap_enable_reg_pp8_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp8_iter12, "ap_enable_reg_pp8_iter12");
    sc_trace(mVcdFile, ap_block_pp9_stage0_subdone, "ap_block_pp9_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp9_exit_iter0_state120, "ap_condition_pp9_exit_iter0_state120");
    sc_trace(mVcdFile, conv1_weights_0_address0, "conv1_weights_0_address0");
    sc_trace(mVcdFile, conv1_weights_0_ce0, "conv1_weights_0_ce0");
    sc_trace(mVcdFile, conv1_weights_0_we0, "conv1_weights_0_we0");
    sc_trace(mVcdFile, conv1_weights_0_q0, "conv1_weights_0_q0");
    sc_trace(mVcdFile, conv1_weights_0_ce1, "conv1_weights_0_ce1");
    sc_trace(mVcdFile, conv1_weights_0_q1, "conv1_weights_0_q1");
    sc_trace(mVcdFile, conv1_bias_address0, "conv1_bias_address0");
    sc_trace(mVcdFile, conv1_bias_ce0, "conv1_bias_ce0");
    sc_trace(mVcdFile, conv1_bias_we0, "conv1_bias_we0");
    sc_trace(mVcdFile, conv1_bias_q0, "conv1_bias_q0");
    sc_trace(mVcdFile, conv3_weights_address0, "conv3_weights_address0");
    sc_trace(mVcdFile, conv3_weights_ce0, "conv3_weights_ce0");
    sc_trace(mVcdFile, conv3_weights_we0, "conv3_weights_we0");
    sc_trace(mVcdFile, conv3_weights_q0, "conv3_weights_q0");
    sc_trace(mVcdFile, conv3_weights_ce1, "conv3_weights_ce1");
    sc_trace(mVcdFile, conv3_weights_q1, "conv3_weights_q1");
    sc_trace(mVcdFile, conv3_bias_address0, "conv3_bias_address0");
    sc_trace(mVcdFile, conv3_bias_ce0, "conv3_bias_ce0");
    sc_trace(mVcdFile, conv3_bias_we0, "conv3_bias_we0");
    sc_trace(mVcdFile, conv3_bias_q0, "conv3_bias_q0");
    sc_trace(mVcdFile, conv5_weights_address0, "conv5_weights_address0");
    sc_trace(mVcdFile, conv5_weights_ce0, "conv5_weights_ce0");
    sc_trace(mVcdFile, conv5_weights_we0, "conv5_weights_we0");
    sc_trace(mVcdFile, conv5_weights_q0, "conv5_weights_q0");
    sc_trace(mVcdFile, conv5_bias_address0, "conv5_bias_address0");
    sc_trace(mVcdFile, conv5_bias_ce0, "conv5_bias_ce0");
    sc_trace(mVcdFile, conv5_bias_we0, "conv5_bias_we0");
    sc_trace(mVcdFile, conv5_bias_q0, "conv5_bias_q0");
    sc_trace(mVcdFile, fc6_weights_0_0_address0, "fc6_weights_0_0_address0");
    sc_trace(mVcdFile, fc6_weights_0_0_ce0, "fc6_weights_0_0_ce0");
    sc_trace(mVcdFile, fc6_weights_0_0_we0, "fc6_weights_0_0_we0");
    sc_trace(mVcdFile, fc6_bias_address0, "fc6_bias_address0");
    sc_trace(mVcdFile, fc6_bias_ce0, "fc6_bias_ce0");
    sc_trace(mVcdFile, fc6_bias_we0, "fc6_bias_we0");
    sc_trace(mVcdFile, fc6_bias_q0, "fc6_bias_q0");
    sc_trace(mVcdFile, output_assign_address0, "output_assign_address0");
    sc_trace(mVcdFile, output_assign_ce0, "output_assign_ce0");
    sc_trace(mVcdFile, output_assign_ce1, "output_assign_ce1");
    sc_trace(mVcdFile, output_assign_we1, "output_assign_we1");
    sc_trace(mVcdFile, conv1_output_address0, "conv1_output_address0");
    sc_trace(mVcdFile, conv1_output_ce0, "conv1_output_ce0");
    sc_trace(mVcdFile, conv1_output_we0, "conv1_output_we0");
    sc_trace(mVcdFile, conv1_output_q0, "conv1_output_q0");
    sc_trace(mVcdFile, pool2_output_address0, "pool2_output_address0");
    sc_trace(mVcdFile, pool2_output_ce0, "pool2_output_ce0");
    sc_trace(mVcdFile, pool2_output_we0, "pool2_output_we0");
    sc_trace(mVcdFile, pool2_output_q0, "pool2_output_q0");
    sc_trace(mVcdFile, pool2_output_ce1, "pool2_output_ce1");
    sc_trace(mVcdFile, pool2_output_q1, "pool2_output_q1");
    sc_trace(mVcdFile, conv3_output_address0, "conv3_output_address0");
    sc_trace(mVcdFile, conv3_output_ce0, "conv3_output_ce0");
    sc_trace(mVcdFile, conv3_output_we0, "conv3_output_we0");
    sc_trace(mVcdFile, conv3_output_q0, "conv3_output_q0");
    sc_trace(mVcdFile, pool4_output_address0, "pool4_output_address0");
    sc_trace(mVcdFile, pool4_output_ce0, "pool4_output_ce0");
    sc_trace(mVcdFile, pool4_output_we0, "pool4_output_we0");
    sc_trace(mVcdFile, pool4_output_q0, "pool4_output_q0");
    sc_trace(mVcdFile, conv5_output_0_0_address0, "conv5_output_0_0_address0");
    sc_trace(mVcdFile, conv5_output_0_0_ce0, "conv5_output_0_0_ce0");
    sc_trace(mVcdFile, conv5_output_0_0_we0, "conv5_output_0_0_we0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_ap_start, "grp_convolution3_fu_764_ap_start");
    sc_trace(mVcdFile, grp_convolution3_fu_764_ap_done, "grp_convolution3_fu_764_ap_done");
    sc_trace(mVcdFile, grp_convolution3_fu_764_ap_idle, "grp_convolution3_fu_764_ap_idle");
    sc_trace(mVcdFile, grp_convolution3_fu_764_ap_ready, "grp_convolution3_fu_764_ap_ready");
    sc_trace(mVcdFile, grp_convolution3_fu_764_input_r_address0, "grp_convolution3_fu_764_input_r_address0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_input_r_ce0, "grp_convolution3_fu_764_input_r_ce0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_input_r_address1, "grp_convolution3_fu_764_input_r_address1");
    sc_trace(mVcdFile, grp_convolution3_fu_764_input_r_ce1, "grp_convolution3_fu_764_input_r_ce1");
    sc_trace(mVcdFile, grp_convolution3_fu_764_weights_address0, "grp_convolution3_fu_764_weights_address0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_weights_ce0, "grp_convolution3_fu_764_weights_ce0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_weights_address1, "grp_convolution3_fu_764_weights_address1");
    sc_trace(mVcdFile, grp_convolution3_fu_764_weights_ce1, "grp_convolution3_fu_764_weights_ce1");
    sc_trace(mVcdFile, grp_convolution3_fu_764_bias_address0, "grp_convolution3_fu_764_bias_address0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_bias_ce0, "grp_convolution3_fu_764_bias_ce0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_output_r_address0, "grp_convolution3_fu_764_output_r_address0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_output_r_ce0, "grp_convolution3_fu_764_output_r_ce0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_output_r_we0, "grp_convolution3_fu_764_output_r_we0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_output_r_d0, "grp_convolution3_fu_764_output_r_d0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_ap_start, "grp_convolution5_fu_772_ap_start");
    sc_trace(mVcdFile, grp_convolution5_fu_772_ap_idle, "grp_convolution5_fu_772_ap_idle");
    sc_trace(mVcdFile, grp_convolution5_fu_772_input_r_address0, "grp_convolution5_fu_772_input_r_address0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_input_r_ce0, "grp_convolution5_fu_772_input_r_ce0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_weights_address0, "grp_convolution5_fu_772_weights_address0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_weights_ce0, "grp_convolution5_fu_772_weights_ce0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_bias_address0, "grp_convolution5_fu_772_bias_address0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_bias_ce0, "grp_convolution5_fu_772_bias_ce0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_output_0_0_address0, "grp_convolution5_fu_772_output_0_0_address0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_output_0_0_ce0, "grp_convolution5_fu_772_output_0_0_ce0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_output_0_0_we0, "grp_convolution5_fu_772_output_0_0_we0");
    sc_trace(mVcdFile, grp_convolution5_fu_772_output_0_0_d0, "grp_convolution5_fu_772_output_0_0_d0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_ap_start, "grp_convolution1_fu_780_ap_start");
    sc_trace(mVcdFile, grp_convolution1_fu_780_ap_done, "grp_convolution1_fu_780_ap_done");
    sc_trace(mVcdFile, grp_convolution1_fu_780_ap_idle, "grp_convolution1_fu_780_ap_idle");
    sc_trace(mVcdFile, grp_convolution1_fu_780_ap_ready, "grp_convolution1_fu_780_ap_ready");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWVALID, "grp_convolution1_fu_780_m_axi_input_r_AWVALID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWADDR, "grp_convolution1_fu_780_m_axi_input_r_AWADDR");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWID, "grp_convolution1_fu_780_m_axi_input_r_AWID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWLEN, "grp_convolution1_fu_780_m_axi_input_r_AWLEN");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWSIZE, "grp_convolution1_fu_780_m_axi_input_r_AWSIZE");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWBURST, "grp_convolution1_fu_780_m_axi_input_r_AWBURST");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWLOCK, "grp_convolution1_fu_780_m_axi_input_r_AWLOCK");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWCACHE, "grp_convolution1_fu_780_m_axi_input_r_AWCACHE");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWPROT, "grp_convolution1_fu_780_m_axi_input_r_AWPROT");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWQOS, "grp_convolution1_fu_780_m_axi_input_r_AWQOS");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWREGION, "grp_convolution1_fu_780_m_axi_input_r_AWREGION");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_AWUSER, "grp_convolution1_fu_780_m_axi_input_r_AWUSER");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WVALID, "grp_convolution1_fu_780_m_axi_input_r_WVALID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WDATA, "grp_convolution1_fu_780_m_axi_input_r_WDATA");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WSTRB, "grp_convolution1_fu_780_m_axi_input_r_WSTRB");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WLAST, "grp_convolution1_fu_780_m_axi_input_r_WLAST");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WID, "grp_convolution1_fu_780_m_axi_input_r_WID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_WUSER, "grp_convolution1_fu_780_m_axi_input_r_WUSER");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARVALID, "grp_convolution1_fu_780_m_axi_input_r_ARVALID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARADDR, "grp_convolution1_fu_780_m_axi_input_r_ARADDR");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARID, "grp_convolution1_fu_780_m_axi_input_r_ARID");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARLEN, "grp_convolution1_fu_780_m_axi_input_r_ARLEN");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARSIZE, "grp_convolution1_fu_780_m_axi_input_r_ARSIZE");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARBURST, "grp_convolution1_fu_780_m_axi_input_r_ARBURST");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARLOCK, "grp_convolution1_fu_780_m_axi_input_r_ARLOCK");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARCACHE, "grp_convolution1_fu_780_m_axi_input_r_ARCACHE");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARPROT, "grp_convolution1_fu_780_m_axi_input_r_ARPROT");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARQOS, "grp_convolution1_fu_780_m_axi_input_r_ARQOS");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARREGION, "grp_convolution1_fu_780_m_axi_input_r_ARREGION");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_ARUSER, "grp_convolution1_fu_780_m_axi_input_r_ARUSER");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_RREADY, "grp_convolution1_fu_780_m_axi_input_r_RREADY");
    sc_trace(mVcdFile, grp_convolution1_fu_780_m_axi_input_r_BREADY, "grp_convolution1_fu_780_m_axi_input_r_BREADY");
    sc_trace(mVcdFile, grp_convolution1_fu_780_weights_0_address0, "grp_convolution1_fu_780_weights_0_address0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_weights_0_ce0, "grp_convolution1_fu_780_weights_0_ce0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_weights_0_address1, "grp_convolution1_fu_780_weights_0_address1");
    sc_trace(mVcdFile, grp_convolution1_fu_780_weights_0_ce1, "grp_convolution1_fu_780_weights_0_ce1");
    sc_trace(mVcdFile, grp_convolution1_fu_780_bias_address0, "grp_convolution1_fu_780_bias_address0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_bias_ce0, "grp_convolution1_fu_780_bias_ce0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_output_r_address0, "grp_convolution1_fu_780_output_r_address0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_output_r_ce0, "grp_convolution1_fu_780_output_r_ce0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_output_r_we0, "grp_convolution1_fu_780_output_r_we0");
    sc_trace(mVcdFile, grp_convolution1_fu_780_output_r_d0, "grp_convolution1_fu_780_output_r_d0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_ap_start, "grp_max_pooling2_fu_790_ap_start");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_ap_done, "grp_max_pooling2_fu_790_ap_done");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_ap_idle, "grp_max_pooling2_fu_790_ap_idle");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_ap_ready, "grp_max_pooling2_fu_790_ap_ready");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_input_r_address0, "grp_max_pooling2_fu_790_input_r_address0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_input_r_ce0, "grp_max_pooling2_fu_790_input_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_output_r_address0, "grp_max_pooling2_fu_790_output_r_address0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_output_r_ce0, "grp_max_pooling2_fu_790_output_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_output_r_we0, "grp_max_pooling2_fu_790_output_r_we0");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_output_r_d0, "grp_max_pooling2_fu_790_output_r_d0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_ap_start, "grp_max_pooling4_fu_796_ap_start");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_ap_done, "grp_max_pooling4_fu_796_ap_done");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_ap_idle, "grp_max_pooling4_fu_796_ap_idle");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_ap_ready, "grp_max_pooling4_fu_796_ap_ready");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_input_r_address0, "grp_max_pooling4_fu_796_input_r_address0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_input_r_ce0, "grp_max_pooling4_fu_796_input_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_output_r_address0, "grp_max_pooling4_fu_796_output_r_address0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_output_r_ce0, "grp_max_pooling4_fu_796_output_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_output_r_we0, "grp_max_pooling4_fu_796_output_r_we0");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_output_r_d0, "grp_max_pooling4_fu_796_output_r_d0");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln155_phi_fu_640_p4, "ap_phi_mux_phi_ln155_phi_fu_640_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln157_phi_fu_652_p4, "ap_phi_mux_phi_ln157_phi_fu_652_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln158_phi_fu_664_p4, "ap_phi_mux_phi_ln158_phi_fu_664_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln160_phi_fu_676_p4, "ap_phi_mux_phi_ln160_phi_fu_676_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln161_phi_fu_688_p4, "ap_phi_mux_phi_ln161_phi_fu_688_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln163_phi_fu_700_p4, "ap_phi_mux_phi_ln163_phi_fu_700_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln164_phi_fu_712_p4, "ap_phi_mux_phi_ln164_phi_fu_712_p4");
    sc_trace(mVcdFile, ap_phi_mux_c_0_i_phi_fu_735_p4, "ap_phi_mux_c_0_i_phi_fu_735_p4");
    sc_trace(mVcdFile, ap_block_pp8_stage0, "ap_block_pp8_stage0");
    sc_trace(mVcdFile, grp_convolution3_fu_764_ap_start_reg, "grp_convolution3_fu_764_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state100, "ap_CS_fsm_state100");
    sc_trace(mVcdFile, ap_CS_fsm_state101, "ap_CS_fsm_state101");
    sc_trace(mVcdFile, grp_convolution5_fu_772_ap_start_reg, "grp_convolution5_fu_772_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state104, "ap_CS_fsm_state104");
    sc_trace(mVcdFile, grp_convolution1_fu_780_ap_start_reg, "grp_convolution1_fu_780_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state96, "ap_CS_fsm_state96");
    sc_trace(mVcdFile, ap_CS_fsm_state97, "ap_CS_fsm_state97");
    sc_trace(mVcdFile, grp_max_pooling2_fu_790_ap_start_reg, "grp_max_pooling2_fu_790_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state98, "ap_CS_fsm_state98");
    sc_trace(mVcdFile, ap_CS_fsm_state99, "ap_CS_fsm_state99");
    sc_trace(mVcdFile, grp_max_pooling4_fu_796_ap_start_reg, "grp_max_pooling4_fu_796_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state102, "ap_CS_fsm_state102");
    sc_trace(mVcdFile, ap_CS_fsm_state103, "ap_CS_fsm_state103");
    sc_trace(mVcdFile, zext_ln154_5_fu_1025_p1, "zext_ln154_5_fu_1025_p1");
    sc_trace(mVcdFile, zext_ln155_fu_1056_p1, "zext_ln155_fu_1056_p1");
    sc_trace(mVcdFile, zext_ln157_1_fu_1088_p1, "zext_ln157_1_fu_1088_p1");
    sc_trace(mVcdFile, zext_ln158_fu_1120_p1, "zext_ln158_fu_1120_p1");
    sc_trace(mVcdFile, zext_ln160_1_fu_1152_p1, "zext_ln160_1_fu_1152_p1");
    sc_trace(mVcdFile, zext_ln161_fu_1184_p1, "zext_ln161_fu_1184_p1");
    sc_trace(mVcdFile, zext_ln163_1_fu_1216_p1, "zext_ln163_1_fu_1216_p1");
    sc_trace(mVcdFile, zext_ln164_fu_1248_p1, "zext_ln164_fu_1248_p1");
    sc_trace(mVcdFile, zext_ln125_1_fu_1310_p1, "zext_ln125_1_fu_1310_p1");
    sc_trace(mVcdFile, sext_ln126_fu_1351_p1, "sext_ln126_fu_1351_p1");
    sc_trace(mVcdFile, zext_ln125_fu_1356_p1, "zext_ln125_fu_1356_p1");
    sc_trace(mVcdFile, zext_ln178_fu_1386_p1, "zext_ln178_fu_1386_p1");
    sc_trace(mVcdFile, empty_15_fu_840_p1, "empty_15_fu_840_p1");
    sc_trace(mVcdFile, empty_fu_850_p1, "empty_fu_850_p1");
    sc_trace(mVcdFile, zext_ln155_1_fu_1034_p1, "zext_ln155_1_fu_1034_p1");
    sc_trace(mVcdFile, zext_ln157_fu_1066_p1, "zext_ln157_fu_1066_p1");
    sc_trace(mVcdFile, zext_ln158_1_fu_1098_p1, "zext_ln158_1_fu_1098_p1");
    sc_trace(mVcdFile, zext_ln160_fu_1130_p1, "zext_ln160_fu_1130_p1");
    sc_trace(mVcdFile, zext_ln161_1_fu_1162_p1, "zext_ln161_1_fu_1162_p1");
    sc_trace(mVcdFile, zext_ln163_fu_1194_p1, "zext_ln163_fu_1194_p1");
    sc_trace(mVcdFile, zext_ln164_1_fu_1226_p1, "zext_ln164_1_fu_1226_p1");
    sc_trace(mVcdFile, ap_block_pp9_stage0_01001, "ap_block_pp9_stage0_01001");
    sc_trace(mVcdFile, add_ln154_1_fu_874_p2, "add_ln154_1_fu_874_p2");
    sc_trace(mVcdFile, icmp_ln154_2_fu_880_p2, "icmp_ln154_2_fu_880_p2");
    sc_trace(mVcdFile, trunc_ln154_fu_910_p1, "trunc_ln154_fu_910_p1");
    sc_trace(mVcdFile, icmp_ln154_1_fu_914_p2, "icmp_ln154_1_fu_914_p2");
    sc_trace(mVcdFile, add_ln154_3_fu_920_p2, "add_ln154_3_fu_920_p2");
    sc_trace(mVcdFile, mul_ln154_fu_938_p1, "mul_ln154_fu_938_p1");
    sc_trace(mVcdFile, mul_ln154_fu_938_p2, "mul_ln154_fu_938_p2");
    sc_trace(mVcdFile, grp_fu_954_p1, "grp_fu_954_p1");
    sc_trace(mVcdFile, tmp_12_fu_963_p3, "tmp_12_fu_963_p3");
    sc_trace(mVcdFile, zext_ln154_fu_960_p1, "zext_ln154_fu_960_p1");
    sc_trace(mVcdFile, zext_ln154_1_fu_970_p1, "zext_ln154_1_fu_970_p1");
    sc_trace(mVcdFile, sext_ln154_fu_980_p1, "sext_ln154_fu_980_p1");
    sc_trace(mVcdFile, add_ln154_2_fu_974_p2, "add_ln154_2_fu_974_p2");
    sc_trace(mVcdFile, zext_ln154_3_fu_983_p1, "zext_ln154_3_fu_983_p1");
    sc_trace(mVcdFile, add_ln154_4_fu_987_p2, "add_ln154_4_fu_987_p2");
    sc_trace(mVcdFile, trunc_ln154_2_fu_997_p1, "trunc_ln154_2_fu_997_p1");
    sc_trace(mVcdFile, trunc_ln154_1_fu_993_p1, "trunc_ln154_1_fu_993_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_1001_p3, "p_shl_cast_fu_1001_p3");
    sc_trace(mVcdFile, grp_fu_954_p2, "grp_fu_954_p2");
    sc_trace(mVcdFile, add_ln154_5_fu_1009_p2, "add_ln154_5_fu_1009_p2");
    sc_trace(mVcdFile, zext_ln154_4_fu_1015_p1, "zext_ln154_4_fu_1015_p1");
    sc_trace(mVcdFile, tmp_s_fu_1317_p3, "tmp_s_fu_1317_p3");
    sc_trace(mVcdFile, tmp_5_fu_1328_p3, "tmp_5_fu_1328_p3");
    sc_trace(mVcdFile, zext_ln126_1_fu_1324_p1, "zext_ln126_1_fu_1324_p1");
    sc_trace(mVcdFile, zext_ln126_2_fu_1335_p1, "zext_ln126_2_fu_1335_p1");
    sc_trace(mVcdFile, sub_ln126_fu_1339_p2, "sub_ln126_fu_1339_p2");
    sc_trace(mVcdFile, zext_ln126_fu_1314_p1, "zext_ln126_fu_1314_p1");
    sc_trace(mVcdFile, add_ln126_fu_1345_p2, "add_ln126_fu_1345_p2");
    sc_trace(mVcdFile, select_ln125_1_fu_1361_p3, "select_ln125_1_fu_1361_p3");
    sc_trace(mVcdFile, grp_fu_954_ce, "grp_fu_954_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_idle_pp4, "ap_idle_pp4");
    sc_trace(mVcdFile, ap_enable_pp4, "ap_enable_pp4");
    sc_trace(mVcdFile, ap_idle_pp5, "ap_idle_pp5");
    sc_trace(mVcdFile, ap_enable_pp5, "ap_enable_pp5");
    sc_trace(mVcdFile, ap_idle_pp6, "ap_idle_pp6");
    sc_trace(mVcdFile, ap_enable_pp6, "ap_enable_pp6");
    sc_trace(mVcdFile, ap_idle_pp7, "ap_idle_pp7");
    sc_trace(mVcdFile, ap_enable_pp7, "ap_enable_pp7");
    sc_trace(mVcdFile, ap_idle_pp8, "ap_idle_pp8");
    sc_trace(mVcdFile, ap_enable_pp8, "ap_enable_pp8");
    sc_trace(mVcdFile, ap_idle_pp9, "ap_idle_pp9");
    sc_trace(mVcdFile, ap_enable_pp9, "ap_enable_pp9");
    sc_trace(mVcdFile, mul_ln154_fu_938_p10, "mul_ln154_fu_938_p10");
#endif

    }
    mHdltvinHandle.open("lenet_cnn.hdltvin.dat");
    mHdltvoutHandle.open("lenet_cnn.hdltvout.dat");
}

lenet_cnn::~lenet_cnn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lenet_cnn_CTL_s_axi_U;
    delete lenet_cnn_DATA_IMAGE_m_axi_U;
    delete lenet_cnn_DATA_PARAMETERS_m_axi_U;
    delete lenet_cnn_DATA_FC6_OUTPUT_m_axi_U;
    delete conv1_weights_0_U;
    delete conv1_bias_U;
    delete conv3_weights_U;
    delete conv3_bias_U;
    delete conv5_weights_U;
    delete conv5_bias_U;
    delete fc6_weights_0_0_U;
    delete fc6_bias_U;
    delete output_assign_U;
    delete conv1_output_U;
    delete pool2_output_U;
    delete conv3_output_U;
    delete pool4_output_U;
    delete conv5_output_0_0_U;
    delete grp_convolution3_fu_764;
    delete grp_convolution5_fu_772;
    delete grp_convolution1_fu_780;
    delete grp_max_pooling2_fu_790;
    delete grp_max_pooling4_fu_796;
    delete lenet_cnn_fadd_32bkb_U36;
    delete lenet_cnn_fmul_32cud_U37;
    delete lenet_cnn_urem_5nsc4_U38;
}

void lenet_cnn::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void lenet_cnn::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void lenet_cnn::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void lenet_cnn::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void lenet_cnn::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_A;
}

void lenet_cnn::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void lenet_cnn::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void lenet_cnn::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void lenet_cnn::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv4_F;
}

void lenet_cnn::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter9 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state27.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state27.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state27.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state38.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state38.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state38.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state49.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state49.read())) {
                ap_enable_reg_pp3_iter1 = (ap_condition_pp3_exit_iter0_state49.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            ap_enable_reg_pp3_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state60.read()))) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state60.read())) {
                ap_enable_reg_pp4_iter1 = (ap_condition_pp4_exit_iter0_state60.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp4_iter1 = ap_enable_reg_pp4_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp4_iter2 = ap_enable_reg_pp4_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
            ap_enable_reg_pp4_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp5_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp5_exit_iter0_state71.read()))) {
            ap_enable_reg_pp5_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
            ap_enable_reg_pp5_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp5_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp5_exit_iter0_state71.read())) {
                ap_enable_reg_pp5_iter1 = (ap_condition_pp5_exit_iter0_state71.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp5_iter1 = ap_enable_reg_pp5_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp5_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp5_iter2 = ap_enable_reg_pp5_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
            ap_enable_reg_pp5_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp6_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp6_exit_iter0_state82.read()))) {
            ap_enable_reg_pp6_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
            ap_enable_reg_pp6_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp6_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp6_exit_iter0_state82.read())) {
                ap_enable_reg_pp6_iter1 = (ap_condition_pp6_exit_iter0_state82.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp6_iter1 = ap_enable_reg_pp6_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp6_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp6_iter2 = ap_enable_reg_pp6_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
            ap_enable_reg_pp6_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp7_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp7_exit_iter0_state93.read()))) {
            ap_enable_reg_pp7_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
            ap_enable_reg_pp7_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp7_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp7_exit_iter0_state93.read())) {
                ap_enable_reg_pp7_iter1 = (ap_condition_pp7_exit_iter0_state93.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp7_iter1 = ap_enable_reg_pp7_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp7_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp7_iter2 = ap_enable_reg_pp7_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
            ap_enable_reg_pp7_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp8_exit_iter0_state106.read()))) {
            ap_enable_reg_pp8_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
                    esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp8_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp8_exit_iter0_state106.read())) {
                ap_enable_reg_pp8_iter1 = (ap_condition_pp8_exit_iter0_state106.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp8_iter1 = ap_enable_reg_pp8_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter10 = ap_enable_reg_pp8_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter11 = ap_enable_reg_pp8_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter12 = ap_enable_reg_pp8_iter11.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
                    esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp8_iter12 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter2 = ap_enable_reg_pp8_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter3 = ap_enable_reg_pp8_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter4 = ap_enable_reg_pp8_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter5 = ap_enable_reg_pp8_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter6 = ap_enable_reg_pp8_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter7 = ap_enable_reg_pp8_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter8 = ap_enable_reg_pp8_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp8_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp8_iter9 = ap_enable_reg_pp8_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp9_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp9_exit_iter0_state120.read()))) {
            ap_enable_reg_pp9_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
                    esl_seteq<1,1,1>(DATA_FC6_OUTPUT_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp9_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp9_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp9_exit_iter0_state120.read())) {
                ap_enable_reg_pp9_iter1 = (ap_condition_pp9_exit_iter0_state120.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp9_iter1 = ap_enable_reg_pp9_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp9_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp9_iter2 = ap_enable_reg_pp9_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
                    esl_seteq<1,1,1>(DATA_FC6_OUTPUT_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp9_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read()))) {
        c_0_i_reg_731 = select_ln125_3_reg_1681.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
                esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
        c_0_i_reg_731 = ap_const_lv7_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_convolution1_fu_780_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read())) {
            grp_convolution1_fu_780_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution1_fu_780_ap_ready.read())) {
            grp_convolution1_fu_780_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_convolution3_fu_764_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read())) {
            grp_convolution3_fu_764_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution3_fu_764_ap_ready.read())) {
            grp_convolution3_fu_764_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_convolution5_fu_772_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read())) {
            grp_convolution5_fu_772_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution5_fu_772_ap_ready.read())) {
            grp_convolution5_fu_772_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_max_pooling2_fu_790_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read())) {
            grp_max_pooling2_fu_790_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_max_pooling2_fu_790_ap_ready.read())) {
            grp_max_pooling2_fu_790_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_max_pooling4_fu_796_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read())) {
            grp_max_pooling4_fu_796_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_max_pooling4_fu_796_ap_ready.read())) {
            grp_max_pooling4_fu_796_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_1253_p2.read()))) {
        indvar_flatten_reg_720 = add_ln122_fu_1259_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
                esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
        indvar_flatten_reg_720 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_1253_p2.read()))) {
        n_0_i_reg_742 = n_fu_1299_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
                esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
        n_0_i_reg_742 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln154_fu_862_p2.read()))) {
        phi_ln154_reg_603 = add_ln154_fu_868_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_ln154_reg_603 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln155_reg_636 = add_ln155_reg_1490.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        phi_ln155_reg_636 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln157_reg_648 = add_ln157_reg_1515.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        phi_ln157_reg_648 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln158_reg_660 = add_ln158_reg_1540.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        phi_ln158_reg_660 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln160_reg_672 = add_ln160_reg_1565.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        phi_ln160_reg_672 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && 
         esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln161_reg_684 = add_ln161_reg_1590.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        phi_ln161_reg_684 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && 
         esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln163_reg_696 = add_ln163_reg_1615.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        phi_ln163_reg_696 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && 
         esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln164_reg_708 = add_ln164_reg_1640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        phi_ln164_reg_708 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
         esl_seteq<1,1,1>(DATA_FC6_OUTPUT_AWREADY.read(), ap_const_logic_1))) {
        phi_ln178_reg_753 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp9_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln178_fu_1374_p2.read()))) {
        phi_ln178_reg_753 = add_ln178_fu_1380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln154_fu_862_p2.read()))) {
        phi_mul_reg_614 = add_ln154_7_fu_894_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_mul_reg_614 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln154_fu_862_p2.read()))) {
        phi_urem_reg_625 = select_ln154_1_fu_886_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_urem_reg_625 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        DATA_FC6_OUTPUT_addr_reg_1413 =  (sc_lv<32>) (empty_fu_850_p1.read());
        p_cast_reg_1419 = p_cast_fu_859_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_11_reg_1495 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_13_reg_1520 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_15_reg_1545 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_17_reg_1570 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_19_reg_1595 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_21_reg_1620 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_23_reg_1645 = DATA_PARAMETERS_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_PARAMETERS_addr_9_reg_1465 = DATA_PARAMETERS_RDATA.read();
        add_ln154_6_reg_1470 = add_ln154_6_fu_1019_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter5_reg.read()))) {
        acc_reg_1729 = acc_fu_1366_p3.read();
        tmp_i_reg_1734 = grp_fu_806_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        add_ln155_1_reg_1475 = add_ln155_1_fu_1029_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        add_ln155_reg_1490 = add_ln155_fu_1050_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        add_ln157_1_reg_1500 = add_ln157_1_fu_1061_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        add_ln157_reg_1515 = add_ln157_fu_1082_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        add_ln158_1_reg_1525 = add_ln158_1_fu_1093_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        add_ln158_reg_1540 = add_ln158_fu_1114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        add_ln160_1_reg_1550 = add_ln160_1_fu_1125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()))) {
        add_ln160_reg_1565 = add_ln160_fu_1146_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        add_ln161_1_reg_1575 = add_ln161_1_fu_1157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter0.read()))) {
        add_ln161_reg_1590 = add_ln161_fu_1178_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        add_ln163_1_reg_1600 = add_ln163_1_fu_1189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter0.read()))) {
        add_ln163_reg_1615 = add_ln163_fu_1210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        add_ln164_1_reg_1625 = add_ln164_1_fu_1221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter0.read()))) {
        add_ln164_reg_1640 = add_ln164_fu_1242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_1253_p2.read()))) {
        c_reg_1659 = c_fu_1265_p2.read();
        icmp_ln123_reg_1664 = icmp_ln123_fu_1271_p2.read();
        icmp_ln125_1_reg_1676 = icmp_ln125_1_fu_1285_p2.read();
        select_ln125_reg_1669 = select_ln125_fu_1277_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter1_reg.read()))) {
        conv5_output_0_0_l_reg_1708 = conv5_output_0_0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        fc6_output5_reg_1391 = fc6_output.read().range(31, 2);
        image1_reg_1402 = image_r.read().range(31, 2);
        parameters3_reg_1396 = parameters.read().range(31, 2);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter2.read()))) {
        fc6_weights_0_0_lo_reg_1713 = fc6_weights_0_0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln122_reg_1650 = icmp_ln122_fu_1253_p2.read();
        icmp_ln122_reg_1650_pp8_iter1_reg = icmp_ln122_reg_1650.read();
        icmp_ln123_reg_1664_pp8_iter1_reg = icmp_ln123_reg_1664.read();
        icmp_ln125_1_reg_1676_pp8_iter1_reg = icmp_ln125_1_reg_1676.read();
        select_ln125_reg_1669_pp8_iter1_reg = select_ln125_reg_1669.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln122_reg_1650_pp8_iter10_reg = icmp_ln122_reg_1650_pp8_iter9_reg.read();
        icmp_ln122_reg_1650_pp8_iter11_reg = icmp_ln122_reg_1650_pp8_iter10_reg.read();
        icmp_ln122_reg_1650_pp8_iter2_reg = icmp_ln122_reg_1650_pp8_iter1_reg.read();
        icmp_ln122_reg_1650_pp8_iter3_reg = icmp_ln122_reg_1650_pp8_iter2_reg.read();
        icmp_ln122_reg_1650_pp8_iter4_reg = icmp_ln122_reg_1650_pp8_iter3_reg.read();
        icmp_ln122_reg_1650_pp8_iter5_reg = icmp_ln122_reg_1650_pp8_iter4_reg.read();
        icmp_ln122_reg_1650_pp8_iter6_reg = icmp_ln122_reg_1650_pp8_iter5_reg.read();
        icmp_ln122_reg_1650_pp8_iter7_reg = icmp_ln122_reg_1650_pp8_iter6_reg.read();
        icmp_ln122_reg_1650_pp8_iter8_reg = icmp_ln122_reg_1650_pp8_iter7_reg.read();
        icmp_ln122_reg_1650_pp8_iter9_reg = icmp_ln122_reg_1650_pp8_iter8_reg.read();
        icmp_ln123_reg_1664_pp8_iter2_reg = icmp_ln123_reg_1664_pp8_iter1_reg.read();
        icmp_ln123_reg_1664_pp8_iter3_reg = icmp_ln123_reg_1664_pp8_iter2_reg.read();
        icmp_ln123_reg_1664_pp8_iter4_reg = icmp_ln123_reg_1664_pp8_iter3_reg.read();
        icmp_ln123_reg_1664_pp8_iter5_reg = icmp_ln123_reg_1664_pp8_iter4_reg.read();
        icmp_ln125_1_reg_1676_pp8_iter2_reg = icmp_ln125_1_reg_1676_pp8_iter1_reg.read();
        icmp_ln125_1_reg_1676_pp8_iter3_reg = icmp_ln125_1_reg_1676_pp8_iter2_reg.read();
        icmp_ln125_1_reg_1676_pp8_iter4_reg = icmp_ln125_1_reg_1676_pp8_iter3_reg.read();
        icmp_ln125_1_reg_1676_pp8_iter5_reg = icmp_ln125_1_reg_1676_pp8_iter4_reg.read();
        icmp_ln125_reg_1693_pp8_iter2_reg = icmp_ln125_reg_1693.read();
        icmp_ln125_reg_1693_pp8_iter3_reg = icmp_ln125_reg_1693_pp8_iter2_reg.read();
        icmp_ln125_reg_1693_pp8_iter4_reg = icmp_ln125_reg_1693_pp8_iter3_reg.read();
        icmp_ln125_reg_1693_pp8_iter5_reg = icmp_ln125_reg_1693_pp8_iter4_reg.read();
        output_assign_addr_1_reg_1723_pp8_iter10_reg = output_assign_addr_1_reg_1723_pp8_iter9_reg.read();
        output_assign_addr_1_reg_1723_pp8_iter11_reg = output_assign_addr_1_reg_1723_pp8_iter10_reg.read();
        output_assign_addr_1_reg_1723_pp8_iter6_reg = output_assign_addr_1_reg_1723.read();
        output_assign_addr_1_reg_1723_pp8_iter7_reg = output_assign_addr_1_reg_1723_pp8_iter6_reg.read();
        output_assign_addr_1_reg_1723_pp8_iter8_reg = output_assign_addr_1_reg_1723_pp8_iter7_reg.read();
        output_assign_addr_1_reg_1723_pp8_iter9_reg = output_assign_addr_1_reg_1723_pp8_iter8_reg.read();
        select_ln125_reg_1669_pp8_iter2_reg = select_ln125_reg_1669_pp8_iter1_reg.read();
        select_ln125_reg_1669_pp8_iter3_reg = select_ln125_reg_1669_pp8_iter2_reg.read();
        select_ln125_reg_1669_pp8_iter4_reg = select_ln125_reg_1669_pp8_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650.read()) && esl_seteq<1,1,1>(icmp_ln123_reg_1664.read(), ap_const_lv1_1))) {
        icmp_ln125_reg_1693 = icmp_ln125_fu_1305_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln154_reg_1430 = icmp_ln154_fu_862_p2.read();
        icmp_ln154_reg_1430_pp0_iter1_reg = icmp_ln154_reg_1430.read();
        tmp_13_reg_1460_pp0_iter1_reg = tmp_13_reg_1460.read();
        tmp_reg_1449_pp0_iter1_reg = tmp_reg_1449.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln154_reg_1430_pp0_iter2_reg = icmp_ln154_reg_1430_pp0_iter1_reg.read();
        icmp_ln154_reg_1430_pp0_iter3_reg = icmp_ln154_reg_1430_pp0_iter2_reg.read();
        icmp_ln154_reg_1430_pp0_iter4_reg = icmp_ln154_reg_1430_pp0_iter3_reg.read();
        icmp_ln154_reg_1430_pp0_iter5_reg = icmp_ln154_reg_1430_pp0_iter4_reg.read();
        icmp_ln154_reg_1430_pp0_iter6_reg = icmp_ln154_reg_1430_pp0_iter5_reg.read();
        icmp_ln154_reg_1430_pp0_iter7_reg = icmp_ln154_reg_1430_pp0_iter6_reg.read();
        icmp_ln154_reg_1430_pp0_iter8_reg = icmp_ln154_reg_1430_pp0_iter7_reg.read();
        tmp_13_reg_1460_pp0_iter2_reg = tmp_13_reg_1460_pp0_iter1_reg.read();
        tmp_13_reg_1460_pp0_iter3_reg = tmp_13_reg_1460_pp0_iter2_reg.read();
        tmp_13_reg_1460_pp0_iter4_reg = tmp_13_reg_1460_pp0_iter3_reg.read();
        tmp_13_reg_1460_pp0_iter5_reg = tmp_13_reg_1460_pp0_iter4_reg.read();
        tmp_13_reg_1460_pp0_iter6_reg = tmp_13_reg_1460_pp0_iter5_reg.read();
        tmp_13_reg_1460_pp0_iter7_reg = tmp_13_reg_1460_pp0_iter6_reg.read();
        tmp_reg_1449_pp0_iter2_reg = tmp_reg_1449_pp0_iter1_reg.read();
        tmp_reg_1449_pp0_iter3_reg = tmp_reg_1449_pp0_iter2_reg.read();
        tmp_reg_1449_pp0_iter4_reg = tmp_reg_1449_pp0_iter3_reg.read();
        tmp_reg_1449_pp0_iter5_reg = tmp_reg_1449_pp0_iter4_reg.read();
        tmp_reg_1449_pp0_iter6_reg = tmp_reg_1449_pp0_iter5_reg.read();
        tmp_reg_1449_pp0_iter7_reg = tmp_reg_1449_pp0_iter6_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln155_reg_1486 = icmp_ln155_fu_1044_p2.read();
        icmp_ln155_reg_1486_pp1_iter1_reg = icmp_ln155_reg_1486.read();
        phi_ln155_reg_636_pp1_iter1_reg = phi_ln155_reg_636.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln157_reg_1511 = icmp_ln157_fu_1076_p2.read();
        icmp_ln157_reg_1511_pp2_iter1_reg = icmp_ln157_reg_1511.read();
        phi_ln157_reg_648_pp2_iter1_reg = phi_ln157_reg_648.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln158_reg_1536 = icmp_ln158_fu_1108_p2.read();
        icmp_ln158_reg_1536_pp3_iter1_reg = icmp_ln158_reg_1536.read();
        phi_ln158_reg_660_pp3_iter1_reg = phi_ln158_reg_660.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln160_reg_1561 = icmp_ln160_fu_1140_p2.read();
        icmp_ln160_reg_1561_pp4_iter1_reg = icmp_ln160_reg_1561.read();
        phi_ln160_reg_672_pp4_iter1_reg = phi_ln160_reg_672.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln161_reg_1586 = icmp_ln161_fu_1172_p2.read();
        icmp_ln161_reg_1586_pp5_iter1_reg = icmp_ln161_reg_1586.read();
        phi_ln161_reg_684_pp5_iter1_reg = phi_ln161_reg_684.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln163_reg_1611 = icmp_ln163_fu_1204_p2.read();
        icmp_ln163_reg_1611_pp6_iter1_reg = icmp_ln163_reg_1611.read();
        phi_ln163_reg_696_pp6_iter1_reg = phi_ln163_reg_696.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln164_reg_1636 = icmp_ln164_fu_1236_p2.read();
        icmp_ln164_reg_1636_pp7_iter1_reg = icmp_ln164_reg_1636.read();
        phi_ln164_reg_708_pp7_iter1_reg = phi_ln164_reg_708.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp9_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln178_reg_1744 = icmp_ln178_fu_1374_p2.read();
        icmp_ln178_reg_1744_pp9_iter1_reg = icmp_ln178_reg_1744.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter4_reg.read()))) {
        output_assign_addr_1_reg_1723 =  (sc_lv<4>) (zext_ln125_fu_1356_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp9_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln178_reg_1744.read()))) {
        output_assign_load_reg_1758 = output_assign_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_fu_1253_p2.read()))) {
        select_ln125_3_reg_1681 = select_ln125_3_fu_1291_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln154_fu_862_p2.read()))) {
        tmp_13_reg_1460 = mul_ln154_fu_938_p2.read().range(11, 8);
        tmp_reg_1449 = phi_mul_reg_614.read().range(15, 13);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter10_reg.read()))) {
        tmp_7_i_reg_1739 = grp_fu_802_p2.read();
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
         esl_seteq<1,1,1>(DATA_FC6_OUTPUT_AWREADY.read(), ap_const_logic_1))) {
        DATA_FC6_OUTPUT_AWVALID = ap_const_logic_1;
    } else {
        DATA_FC6_OUTPUT_AWVALID = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
         esl_seteq<1,1,1>(DATA_FC6_OUTPUT_BVALID.read(), ap_const_logic_1))) {
        DATA_FC6_OUTPUT_BREADY = ap_const_logic_1;
    } else {
        DATA_FC6_OUTPUT_BREADY = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln178_reg_1744_pp9_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp9_stage0_11001.read(), ap_const_boolean_0))) {
        DATA_FC6_OUTPUT_WVALID = ap_const_logic_1;
    } else {
        DATA_FC6_OUTPUT_WVALID = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read())) {
        DATA_FC6_OUTPUT_blk_n_AW = m_axi_DATA_FC6_OUTPUT_AWREADY.read();
    } else {
        DATA_FC6_OUTPUT_blk_n_AW = ap_const_logic_1;
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read())) {
        DATA_FC6_OUTPUT_blk_n_B = m_axi_DATA_FC6_OUTPUT_BVALID.read();
    } else {
        DATA_FC6_OUTPUT_blk_n_B = ap_const_logic_1;
    }
}

void lenet_cnn::thread_DATA_FC6_OUTPUT_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp9_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln178_reg_1744_pp9_iter1_reg.read()))) {
        DATA_FC6_OUTPUT_blk_n_W = m_axi_DATA_FC6_OUTPUT_WREADY.read();
    } else {
        DATA_FC6_OUTPUT_blk_n_W = ap_const_logic_1;
    }
}

void lenet_cnn::thread_DATA_IMAGE_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()))) {
        DATA_IMAGE_ARVALID = grp_convolution1_fu_780_m_axi_input_r_ARVALID.read();
    } else {
        DATA_IMAGE_ARVALID = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_IMAGE_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()))) {
        DATA_IMAGE_RREADY = grp_convolution1_fu_780_m_axi_input_r_RREADY.read();
    } else {
        DATA_IMAGE_RREADY = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_ARADDR() {
    if (esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln164_1_fu_1226_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln163_fu_1194_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln161_1_fu_1162_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln160_fu_1130_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln158_1_fu_1098_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln157_fu_1066_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (zext_ln155_1_fu_1034_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            DATA_PARAMETERS_ARADDR =  (sc_lv<32>) (empty_15_fu_840_p1.read());
        } else {
            DATA_PARAMETERS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        DATA_PARAMETERS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_ARLEN() {
    if (esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_A;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_4B0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_78;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_BB80;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_10;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_960;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_6;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            DATA_PARAMETERS_ARLEN = ap_const_lv32_96;
        } else {
            DATA_PARAMETERS_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        DATA_PARAMETERS_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && 
          esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1)))) {
        DATA_PARAMETERS_ARVALID = ap_const_logic_1;
    } else {
        DATA_PARAMETERS_ARVALID = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && 
          esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && 
          esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && 
          esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        DATA_PARAMETERS_RREADY = ap_const_logic_1;
    } else {
        DATA_PARAMETERS_RREADY = ap_const_logic_0;
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()))) {
        DATA_PARAMETERS_blk_n_AR = m_axi_DATA_PARAMETERS_ARREADY.read();
    } else {
        DATA_PARAMETERS_blk_n_AR = ap_const_logic_1;
    }
}

void lenet_cnn::thread_DATA_PARAMETERS_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp5_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp6_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp7_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read())))) {
        DATA_PARAMETERS_blk_n_R = m_axi_DATA_PARAMETERS_RVALID.read();
    } else {
        DATA_PARAMETERS_blk_n_R = ap_const_logic_1;
    }
}

void lenet_cnn::thread_acc_fu_1366_p3() {
    acc_fu_1366_p3 = (!select_ln125_1_fu_1361_p3.read()[0].is_01())? sc_lv<32>(): ((select_ln125_1_fu_1361_p3.read()[0].to_bool())? fc6_bias_q0.read(): output_assign_q0.read());
}

void lenet_cnn::thread_add_ln122_fu_1259_p2() {
    add_ln122_fu_1259_p2 = (!indvar_flatten_reg_720.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_flatten_reg_720.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void lenet_cnn::thread_add_ln126_fu_1345_p2() {
    add_ln126_fu_1345_p2 = (!sub_ln126_fu_1339_p2.read().is_01() || !zext_ln126_fu_1314_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(sub_ln126_fu_1339_p2.read()) + sc_biguint<12>(zext_ln126_fu_1314_p1.read()));
}

void lenet_cnn::thread_add_ln154_1_fu_874_p2() {
    add_ln154_1_fu_874_p2 = (!ap_const_lv8_1.is_01() || !phi_urem_reg_625.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(phi_urem_reg_625.read()));
}

void lenet_cnn::thread_add_ln154_2_fu_974_p2() {
    add_ln154_2_fu_974_p2 = (!zext_ln154_fu_960_p1.read().is_01() || !zext_ln154_1_fu_970_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln154_fu_960_p1.read()) + sc_biguint<11>(zext_ln154_1_fu_970_p1.read()));
}

void lenet_cnn::thread_add_ln154_3_fu_920_p2() {
    add_ln154_3_fu_920_p2 = (!ap_const_lv5_7.is_01() || !trunc_ln154_fu_910_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_7) + sc_biguint<5>(trunc_ln154_fu_910_p1.read()));
}

void lenet_cnn::thread_add_ln154_4_fu_987_p2() {
    add_ln154_4_fu_987_p2 = (!add_ln154_2_fu_974_p2.read().is_01() || !zext_ln154_3_fu_983_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(add_ln154_2_fu_974_p2.read()) + sc_biguint<11>(zext_ln154_3_fu_983_p1.read()));
}

void lenet_cnn::thread_add_ln154_5_fu_1009_p2() {
    add_ln154_5_fu_1009_p2 = (!trunc_ln154_1_fu_993_p1.read().is_01() || !p_shl_cast_fu_1001_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(trunc_ln154_1_fu_993_p1.read()) + sc_biguint<9>(p_shl_cast_fu_1001_p3.read()));
}

void lenet_cnn::thread_add_ln154_6_fu_1019_p2() {
    add_ln154_6_fu_1019_p2 = (!add_ln154_5_fu_1009_p2.read().is_01() || !zext_ln154_4_fu_1015_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln154_5_fu_1009_p2.read()) + sc_biguint<9>(zext_ln154_4_fu_1015_p1.read()));
}

void lenet_cnn::thread_add_ln154_7_fu_894_p2() {
    add_ln154_7_fu_894_p2 = (!ap_const_lv16_148.is_01() || !phi_mul_reg_614.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_148) + sc_biguint<16>(phi_mul_reg_614.read()));
}

void lenet_cnn::thread_add_ln154_fu_868_p2() {
    add_ln154_fu_868_p2 = (!phi_ln154_reg_603.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_ln154_reg_603.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void lenet_cnn::thread_add_ln155_1_fu_1029_p2() {
    add_ln155_1_fu_1029_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_96.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_96));
}

void lenet_cnn::thread_add_ln155_fu_1050_p2() {
    add_ln155_fu_1050_p2 = (!ap_phi_mux_phi_ln155_phi_fu_640_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_phi_ln155_phi_fu_640_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void lenet_cnn::thread_add_ln157_1_fu_1061_p2() {
    add_ln157_1_fu_1061_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_9C.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_9C));
}

void lenet_cnn::thread_add_ln157_fu_1082_p2() {
    add_ln157_fu_1082_p2 = (!ap_phi_mux_phi_ln157_phi_fu_652_p4.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(ap_phi_mux_phi_ln157_phi_fu_652_p4.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void lenet_cnn::thread_add_ln158_1_fu_1093_p2() {
    add_ln158_1_fu_1093_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_9FC.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_9FC));
}

void lenet_cnn::thread_add_ln158_fu_1114_p2() {
    add_ln158_fu_1114_p2 = (!ap_phi_mux_phi_ln158_phi_fu_664_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_phi_ln158_phi_fu_664_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void lenet_cnn::thread_add_ln160_1_fu_1125_p2() {
    add_ln160_1_fu_1125_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_A0C.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_A0C));
}

void lenet_cnn::thread_add_ln160_fu_1146_p2() {
    add_ln160_fu_1146_p2 = (!ap_phi_mux_phi_ln160_phi_fu_676_p4.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(ap_phi_mux_phi_ln160_phi_fu_676_p4.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void lenet_cnn::thread_add_ln161_1_fu_1157_p2() {
    add_ln161_1_fu_1157_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_C58C.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_C58C));
}

void lenet_cnn::thread_add_ln161_fu_1178_p2() {
    add_ln161_fu_1178_p2 = (!ap_phi_mux_phi_ln161_phi_fu_688_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ap_phi_mux_phi_ln161_phi_fu_688_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void lenet_cnn::thread_add_ln163_1_fu_1189_p2() {
    add_ln163_1_fu_1189_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_C604.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_C604));
}

void lenet_cnn::thread_add_ln163_fu_1210_p2() {
    add_ln163_fu_1210_p2 = (!ap_phi_mux_phi_ln163_phi_fu_700_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(ap_phi_mux_phi_ln163_phi_fu_700_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void lenet_cnn::thread_add_ln164_1_fu_1221_p2() {
    add_ln164_1_fu_1221_p2 = (!p_cast_reg_1419.read().is_01() || !ap_const_lv31_CAB4.is_01())? sc_lv<31>(): (sc_biguint<31>(p_cast_reg_1419.read()) + sc_biguint<31>(ap_const_lv31_CAB4));
}

void lenet_cnn::thread_add_ln164_fu_1242_p2() {
    add_ln164_fu_1242_p2 = (!ap_phi_mux_phi_ln164_phi_fu_712_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_phi_ln164_phi_fu_712_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void lenet_cnn::thread_add_ln178_fu_1380_p2() {
    add_ln178_fu_1380_p2 = (!phi_ln178_reg_753.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(phi_ln178_reg_753.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void lenet_cnn::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void lenet_cnn::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[17];
}

void lenet_cnn::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[26];
}

void lenet_cnn::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[35];
}

void lenet_cnn::thread_ap_CS_fsm_pp4_stage0() {
    ap_CS_fsm_pp4_stage0 = ap_CS_fsm.read()[44];
}

void lenet_cnn::thread_ap_CS_fsm_pp5_stage0() {
    ap_CS_fsm_pp5_stage0 = ap_CS_fsm.read()[53];
}

void lenet_cnn::thread_ap_CS_fsm_pp6_stage0() {
    ap_CS_fsm_pp6_stage0 = ap_CS_fsm.read()[62];
}

void lenet_cnn::thread_ap_CS_fsm_pp7_stage0() {
    ap_CS_fsm_pp7_stage0 = ap_CS_fsm.read()[71];
}

void lenet_cnn::thread_ap_CS_fsm_pp8_stage0() {
    ap_CS_fsm_pp8_stage0 = ap_CS_fsm.read()[82];
}

void lenet_cnn::thread_ap_CS_fsm_pp9_stage0() {
    ap_CS_fsm_pp9_stage0 = ap_CS_fsm.read()[84];
}

void lenet_cnn::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void lenet_cnn::thread_ap_CS_fsm_state100() {
    ap_CS_fsm_state100 = ap_CS_fsm.read()[76];
}

void lenet_cnn::thread_ap_CS_fsm_state101() {
    ap_CS_fsm_state101 = ap_CS_fsm.read()[77];
}

void lenet_cnn::thread_ap_CS_fsm_state102() {
    ap_CS_fsm_state102 = ap_CS_fsm.read()[78];
}

void lenet_cnn::thread_ap_CS_fsm_state103() {
    ap_CS_fsm_state103 = ap_CS_fsm.read()[79];
}

void lenet_cnn::thread_ap_CS_fsm_state104() {
    ap_CS_fsm_state104 = ap_CS_fsm.read()[80];
}

void lenet_cnn::thread_ap_CS_fsm_state105() {
    ap_CS_fsm_state105 = ap_CS_fsm.read()[81];
}

void lenet_cnn::thread_ap_CS_fsm_state119() {
    ap_CS_fsm_state119 = ap_CS_fsm.read()[83];
}

void lenet_cnn::thread_ap_CS_fsm_state127() {
    ap_CS_fsm_state127 = ap_CS_fsm.read()[89];
}

void lenet_cnn::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[9];
}

void lenet_cnn::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void lenet_cnn::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[10];
}

void lenet_cnn::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[16];
}

void lenet_cnn::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[18];
}

void lenet_cnn::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[19];
}

void lenet_cnn::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[25];
}

void lenet_cnn::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[27];
}

void lenet_cnn::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[28];
}

void lenet_cnn::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[34];
}

void lenet_cnn::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[36];
}

void lenet_cnn::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[37];
}

void lenet_cnn::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[43];
}

void lenet_cnn::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[45];
}

void lenet_cnn::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[46];
}

void lenet_cnn::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[52];
}

void lenet_cnn::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[54];
}

void lenet_cnn::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[55];
}

void lenet_cnn::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void lenet_cnn::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[61];
}

void lenet_cnn::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[63];
}

void lenet_cnn::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[64];
}

void lenet_cnn::thread_ap_CS_fsm_state92() {
    ap_CS_fsm_state92 = ap_CS_fsm.read()[70];
}

void lenet_cnn::thread_ap_CS_fsm_state96() {
    ap_CS_fsm_state96 = ap_CS_fsm.read()[72];
}

void lenet_cnn::thread_ap_CS_fsm_state97() {
    ap_CS_fsm_state97 = ap_CS_fsm.read()[73];
}

void lenet_cnn::thread_ap_CS_fsm_state98() {
    ap_CS_fsm_state98 = ap_CS_fsm.read()[74];
}

void lenet_cnn::thread_ap_CS_fsm_state99() {
    ap_CS_fsm_state99 = ap_CS_fsm.read()[75];
}

void lenet_cnn::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp4_stage0() {
    ap_block_pp4_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp4_stage0_11001() {
    ap_block_pp4_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp4_stage0_subdone() {
    ap_block_pp4_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp5_stage0() {
    ap_block_pp5_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp5_stage0_11001() {
    ap_block_pp5_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp5_stage0_subdone() {
    ap_block_pp5_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp6_stage0() {
    ap_block_pp6_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp6_stage0_11001() {
    ap_block_pp6_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp6_stage0_subdone() {
    ap_block_pp6_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp7_stage0() {
    ap_block_pp7_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp7_stage0_11001() {
    ap_block_pp7_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp7_stage0_subdone() {
    ap_block_pp7_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_pp8_stage0() {
    ap_block_pp8_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp8_stage0_11001() {
    ap_block_pp8_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp8_stage0_subdone() {
    ap_block_pp8_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp9_stage0() {
    ap_block_pp9_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp9_stage0_01001() {
    ap_block_pp9_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_pp9_stage0_11001() {
    ap_block_pp9_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state122_io.read()));
}

void lenet_cnn::thread_ap_block_pp9_stage0_subdone() {
    ap_block_pp9_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state122_io.read()));
}

void lenet_cnn::thread_ap_block_state106_pp8_stage0_iter0() {
    ap_block_state106_pp8_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state107_pp8_stage0_iter1() {
    ap_block_state107_pp8_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state108_pp8_stage0_iter2() {
    ap_block_state108_pp8_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state109_pp8_stage0_iter3() {
    ap_block_state109_pp8_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state110_pp8_stage0_iter4() {
    ap_block_state110_pp8_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state111_pp8_stage0_iter5() {
    ap_block_state111_pp8_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state112_pp8_stage0_iter6() {
    ap_block_state112_pp8_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state113_pp8_stage0_iter7() {
    ap_block_state113_pp8_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state114_pp8_stage0_iter8() {
    ap_block_state114_pp8_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state115_pp8_stage0_iter9() {
    ap_block_state115_pp8_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state116_pp8_stage0_iter10() {
    ap_block_state116_pp8_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state117_pp8_stage0_iter11() {
    ap_block_state117_pp8_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state118_pp8_stage0_iter12() {
    ap_block_state118_pp8_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state120_pp9_stage0_iter0() {
    ap_block_state120_pp9_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state121_pp9_stage0_iter1() {
    ap_block_state121_pp9_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state122_io() {
    ap_block_state122_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln178_reg_1744_pp9_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_FC6_OUTPUT_WREADY.read()));
}

void lenet_cnn::thread_ap_block_state122_pp9_stage0_iter2() {
    ap_block_state122_pp9_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state12_pp0_stage0_iter3() {
    ap_block_state12_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state13_pp0_stage0_iter4() {
    ap_block_state13_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state14_pp0_stage0_iter5() {
    ap_block_state14_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state15_pp0_stage0_iter6() {
    ap_block_state15_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state16_pp0_stage0_iter7() {
    ap_block_state16_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state17_pp0_stage0_iter8() {
    ap_block_state17_pp0_stage0_iter8 = (esl_seteq<1,1,1>(icmp_ln154_reg_1430_pp0_iter7_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state18_pp0_stage0_iter9() {
    ap_block_state18_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state27_pp1_stage0_iter0() {
    ap_block_state27_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state28_pp1_stage0_iter1() {
    ap_block_state28_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state29_pp1_stage0_iter2() {
    ap_block_state29_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state38_pp2_stage0_iter0() {
    ap_block_state38_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state39_pp2_stage0_iter1() {
    ap_block_state39_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state40_pp2_stage0_iter2() {
    ap_block_state40_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state49_pp3_stage0_iter0() {
    ap_block_state49_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state50_pp3_stage0_iter1() {
    ap_block_state50_pp3_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state51_pp3_stage0_iter2() {
    ap_block_state51_pp3_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state60_pp4_stage0_iter0() {
    ap_block_state60_pp4_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state61_pp4_stage0_iter1() {
    ap_block_state61_pp4_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state62_pp4_stage0_iter2() {
    ap_block_state62_pp4_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state71_pp5_stage0_iter0() {
    ap_block_state71_pp5_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state72_pp5_stage0_iter1() {
    ap_block_state72_pp5_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state73_pp5_stage0_iter2() {
    ap_block_state73_pp5_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state82_pp6_stage0_iter0() {
    ap_block_state82_pp6_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state83_pp6_stage0_iter1() {
    ap_block_state83_pp6_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state84_pp6_stage0_iter2() {
    ap_block_state84_pp6_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state93_pp7_stage0_iter0() {
    ap_block_state93_pp7_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state94_pp7_stage0_iter1() {
    ap_block_state94_pp7_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()) && esl_seteq<1,1,1>(ap_const_logic_0, DATA_PARAMETERS_RVALID.read()));
}

void lenet_cnn::thread_ap_block_state95_pp7_stage0_iter2() {
    ap_block_state95_pp7_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void lenet_cnn::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln154_fu_862_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp1_exit_iter0_state27() {
    if (esl_seteq<1,1,1>(icmp_ln155_fu_1044_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state27 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state27 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp2_exit_iter0_state38() {
    if (esl_seteq<1,1,1>(icmp_ln157_fu_1076_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state38 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state38 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp3_exit_iter0_state49() {
    if (esl_seteq<1,1,1>(icmp_ln158_fu_1108_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp3_exit_iter0_state49 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state49 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp4_exit_iter0_state60() {
    if (esl_seteq<1,1,1>(icmp_ln160_fu_1140_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp4_exit_iter0_state60 = ap_const_logic_1;
    } else {
        ap_condition_pp4_exit_iter0_state60 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp5_exit_iter0_state71() {
    if (esl_seteq<1,1,1>(icmp_ln161_fu_1172_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp5_exit_iter0_state71 = ap_const_logic_1;
    } else {
        ap_condition_pp5_exit_iter0_state71 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp6_exit_iter0_state82() {
    if (esl_seteq<1,1,1>(icmp_ln163_fu_1204_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp6_exit_iter0_state82 = ap_const_logic_1;
    } else {
        ap_condition_pp6_exit_iter0_state82 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp7_exit_iter0_state93() {
    if (esl_seteq<1,1,1>(icmp_ln164_fu_1236_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp7_exit_iter0_state93 = ap_const_logic_1;
    } else {
        ap_condition_pp7_exit_iter0_state93 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp8_exit_iter0_state106() {
    if (esl_seteq<1,1,1>(icmp_ln122_fu_1253_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp8_exit_iter0_state106 = ap_const_logic_1;
    } else {
        ap_condition_pp8_exit_iter0_state106 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_condition_pp9_exit_iter0_state120() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln178_fu_1374_p2.read())) {
        ap_condition_pp9_exit_iter0_state120 = ap_const_logic_1;
    } else {
        ap_condition_pp9_exit_iter0_state120 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
         esl_seteq<1,1,1>(DATA_FC6_OUTPUT_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp4() {
    ap_enable_pp4 = (ap_idle_pp4.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp5() {
    ap_enable_pp5 = (ap_idle_pp5.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp6() {
    ap_enable_pp6 = (ap_idle_pp6.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp7() {
    ap_enable_pp7 = (ap_idle_pp7.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp8() {
    ap_enable_pp8 = (ap_idle_pp8.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_enable_pp9() {
    ap_enable_pp9 = (ap_idle_pp9.read() ^ ap_const_logic_1);
}

void lenet_cnn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter2.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter2.read()))) {
        ap_idle_pp4 = ap_const_logic_1;
    } else {
        ap_idle_pp4 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp5_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp5_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp5_iter2.read()))) {
        ap_idle_pp5 = ap_const_logic_1;
    } else {
        ap_idle_pp5 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp6_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp6_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp6_iter2.read()))) {
        ap_idle_pp6 = ap_const_logic_1;
    } else {
        ap_idle_pp6 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp7_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp7_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp7_iter2.read()))) {
        ap_idle_pp7 = ap_const_logic_1;
    } else {
        ap_idle_pp7 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp8_iter12.read()))) {
        ap_idle_pp8 = ap_const_logic_1;
    } else {
        ap_idle_pp8 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_idle_pp9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp9_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp9_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp9_iter2.read()))) {
        ap_idle_pp9 = ap_const_logic_1;
    } else {
        ap_idle_pp9 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_phi_mux_c_0_i_phi_fu_735_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_0_i_phi_fu_735_p4 = select_ln125_3_reg_1681.read();
    } else {
        ap_phi_mux_c_0_i_phi_fu_735_p4 = c_0_i_reg_731.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln155_phi_fu_640_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486.read()))) {
        ap_phi_mux_phi_ln155_phi_fu_640_p4 = add_ln155_reg_1490.read();
    } else {
        ap_phi_mux_phi_ln155_phi_fu_640_p4 = phi_ln155_reg_636.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln157_phi_fu_652_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511.read()))) {
        ap_phi_mux_phi_ln157_phi_fu_652_p4 = add_ln157_reg_1515.read();
    } else {
        ap_phi_mux_phi_ln157_phi_fu_652_p4 = phi_ln157_reg_648.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln158_phi_fu_664_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536.read()))) {
        ap_phi_mux_phi_ln158_phi_fu_664_p4 = add_ln158_reg_1540.read();
    } else {
        ap_phi_mux_phi_ln158_phi_fu_664_p4 = phi_ln158_reg_660.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln160_phi_fu_676_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561.read()))) {
        ap_phi_mux_phi_ln160_phi_fu_676_p4 = add_ln160_reg_1565.read();
    } else {
        ap_phi_mux_phi_ln160_phi_fu_676_p4 = phi_ln160_reg_672.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln161_phi_fu_688_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp5_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp5_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586.read()))) {
        ap_phi_mux_phi_ln161_phi_fu_688_p4 = add_ln161_reg_1590.read();
    } else {
        ap_phi_mux_phi_ln161_phi_fu_688_p4 = phi_ln161_reg_684.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln163_phi_fu_700_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp6_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp6_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611.read()))) {
        ap_phi_mux_phi_ln163_phi_fu_700_p4 = add_ln163_reg_1615.read();
    } else {
        ap_phi_mux_phi_ln163_phi_fu_700_p4 = phi_ln163_reg_696.read();
    }
}

void lenet_cnn::thread_ap_phi_mux_phi_ln164_phi_fu_712_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp7_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp7_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636.read()))) {
        ap_phi_mux_phi_ln164_phi_fu_712_p4 = add_ln164_reg_1640.read();
    } else {
        ap_phi_mux_phi_ln164_phi_fu_712_p4 = phi_ln164_reg_708.read();
    }
}

void lenet_cnn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
         esl_seteq<1,1,1>(DATA_FC6_OUTPUT_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void lenet_cnn::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void lenet_cnn::thread_c_fu_1265_p2() {
    c_fu_1265_p2 = (!ap_phi_mux_c_0_i_phi_fu_735_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ap_phi_mux_c_0_i_phi_fu_735_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void lenet_cnn::thread_conv1_bias_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        conv1_bias_address0 =  (sc_lv<3>) (zext_ln155_fu_1056_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_bias_address0 = grp_convolution1_fu_780_bias_address0.read();
    } else {
        conv1_bias_address0 =  (sc_lv<3>) ("XXX");
    }
}

void lenet_cnn::thread_conv1_bias_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        conv1_bias_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_bias_ce0 = grp_convolution1_fu_780_bias_ce0.read();
    } else {
        conv1_bias_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_bias_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_reg_1486_pp1_iter1_reg.read()))) {
        conv1_bias_we0 = ap_const_logic_1;
    } else {
        conv1_bias_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        conv1_output_address0 = grp_max_pooling2_fu_790_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_output_address0 = grp_convolution1_fu_780_output_r_address0.read();
    } else {
        conv1_output_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void lenet_cnn::thread_conv1_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        conv1_output_ce0 = grp_max_pooling2_fu_790_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_output_ce0 = grp_convolution1_fu_780_output_r_ce0.read();
    } else {
        conv1_output_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_output_we0 = grp_convolution1_fu_780_output_r_we0.read();
    } else {
        conv1_output_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_weights_0_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        conv1_weights_0_address0 =  (sc_lv<8>) (zext_ln154_5_fu_1025_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_weights_0_address0 = grp_convolution1_fu_780_weights_0_address0.read();
    } else {
        conv1_weights_0_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void lenet_cnn::thread_conv1_weights_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        conv1_weights_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_weights_0_ce0 = grp_convolution1_fu_780_weights_0_ce0.read();
    } else {
        conv1_weights_0_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_weights_0_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        conv1_weights_0_ce1 = grp_convolution1_fu_780_weights_0_ce1.read();
    } else {
        conv1_weights_0_ce1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv1_weights_0_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln154_reg_1430_pp0_iter8_reg.read()))) {
        conv1_weights_0_we0 = ap_const_logic_1;
    } else {
        conv1_weights_0_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_bias_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        conv3_bias_address0 =  (sc_lv<4>) (zext_ln158_fu_1120_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_bias_address0 = grp_convolution3_fu_764_bias_address0.read();
    } else {
        conv3_bias_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void lenet_cnn::thread_conv3_bias_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        conv3_bias_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_bias_ce0 = grp_convolution3_fu_764_bias_ce0.read();
    } else {
        conv3_bias_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_bias_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln158_reg_1536_pp3_iter1_reg.read()))) {
        conv3_bias_we0 = ap_const_logic_1;
    } else {
        conv3_bias_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        conv3_output_address0 = grp_max_pooling4_fu_796_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_output_address0 = grp_convolution3_fu_764_output_r_address0.read();
    } else {
        conv3_output_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void lenet_cnn::thread_conv3_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        conv3_output_ce0 = grp_max_pooling4_fu_796_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_output_ce0 = grp_convolution3_fu_764_output_r_ce0.read();
    } else {
        conv3_output_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_output_we0 = grp_convolution3_fu_764_output_r_we0.read();
    } else {
        conv3_output_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_weights_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        conv3_weights_address0 =  (sc_lv<12>) (zext_ln157_1_fu_1088_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_weights_address0 = grp_convolution3_fu_764_weights_address0.read();
    } else {
        conv3_weights_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void lenet_cnn::thread_conv3_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        conv3_weights_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_weights_ce0 = grp_convolution3_fu_764_weights_ce0.read();
    } else {
        conv3_weights_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_weights_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        conv3_weights_ce1 = grp_convolution3_fu_764_weights_ce1.read();
    } else {
        conv3_weights_ce1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv3_weights_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln157_reg_1511_pp2_iter1_reg.read()))) {
        conv3_weights_we0 = ap_const_logic_1;
    } else {
        conv3_weights_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_bias_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp5_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter2.read()))) {
        conv5_bias_address0 =  (sc_lv<7>) (zext_ln161_fu_1184_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_bias_address0 = grp_convolution5_fu_772_bias_address0.read();
    } else {
        conv5_bias_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void lenet_cnn::thread_conv5_bias_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter2.read()))) {
        conv5_bias_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_bias_ce0 = grp_convolution5_fu_772_bias_ce0.read();
    } else {
        conv5_bias_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_bias_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp5_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_reg_1586_pp5_iter1_reg.read()))) {
        conv5_bias_we0 = ap_const_logic_1;
    } else {
        conv5_bias_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_output_0_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0.read(), ap_const_boolean_0))) {
        conv5_output_0_0_address0 =  (sc_lv<7>) (zext_ln125_1_fu_1310_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_output_0_0_address0 = grp_convolution5_fu_772_output_0_0_address0.read();
    } else {
        conv5_output_0_0_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void lenet_cnn::thread_conv5_output_0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read()))) {
        conv5_output_0_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_output_0_0_ce0 = grp_convolution5_fu_772_output_0_0_ce0.read();
    } else {
        conv5_output_0_0_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_output_0_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_output_0_0_we0 = grp_convolution5_fu_772_output_0_0_we0.read();
    } else {
        conv5_output_0_0_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_weights_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()))) {
        conv5_weights_address0 =  (sc_lv<16>) (zext_ln160_1_fu_1152_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_weights_address0 = grp_convolution5_fu_772_weights_address0.read();
    } else {
        conv5_weights_address0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void lenet_cnn::thread_conv5_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()))) {
        conv5_weights_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        conv5_weights_ce0 = grp_convolution5_fu_772_weights_ce0.read();
    } else {
        conv5_weights_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_conv5_weights_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_reg_1561_pp4_iter1_reg.read()))) {
        conv5_weights_we0 = ap_const_logic_1;
    } else {
        conv5_weights_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_empty_15_fu_840_p1() {
    empty_15_fu_840_p1 = esl_zext<64,30>(parameters3_reg_1396.read());
}

void lenet_cnn::thread_empty_fu_850_p1() {
    empty_fu_850_p1 = esl_zext<64,30>(fc6_output5_reg_1391.read());
}

void lenet_cnn::thread_fc6_bias_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter5.read()))) {
        fc6_bias_address0 =  (sc_lv<4>) (zext_ln125_fu_1356_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp7_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter2.read()))) {
        fc6_bias_address0 =  (sc_lv<4>) (zext_ln164_fu_1248_p1.read());
    } else {
        fc6_bias_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void lenet_cnn::thread_fc6_bias_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter5.read())))) {
        fc6_bias_ce0 = ap_const_logic_1;
    } else {
        fc6_bias_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_fc6_bias_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp7_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_reg_1636_pp7_iter1_reg.read()))) {
        fc6_bias_we0 = ap_const_logic_1;
    } else {
        fc6_bias_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_fc6_weights_0_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp8_stage0.read(), ap_const_boolean_0))) {
        fc6_weights_0_0_address0 =  (sc_lv<11>) (sext_ln126_fu_1351_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp6_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter2.read()))) {
        fc6_weights_0_0_address0 =  (sc_lv<11>) (zext_ln163_1_fu_1216_p1.read());
    } else {
        fc6_weights_0_0_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void lenet_cnn::thread_fc6_weights_0_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp8_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter2.read())))) {
        fc6_weights_0_0_ce0 = ap_const_logic_1;
    } else {
        fc6_weights_0_0_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_fc6_weights_0_0_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp6_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln163_reg_1611_pp6_iter1_reg.read()))) {
        fc6_weights_0_0_we0 = ap_const_logic_1;
    } else {
        fc6_weights_0_0_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_grp_convolution1_fu_780_ap_start() {
    grp_convolution1_fu_780_ap_start = grp_convolution1_fu_780_ap_start_reg.read();
}

void lenet_cnn::thread_grp_convolution3_fu_764_ap_start() {
    grp_convolution3_fu_764_ap_start = grp_convolution3_fu_764_ap_start_reg.read();
}

void lenet_cnn::thread_grp_convolution5_fu_772_ap_start() {
    grp_convolution5_fu_772_ap_start = grp_convolution5_fu_772_ap_start_reg.read();
}

void lenet_cnn::thread_grp_fu_954_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_954_ce = ap_const_logic_1;
    } else {
        grp_fu_954_ce = ap_const_logic_0;
    }
}

void lenet_cnn::thread_grp_fu_954_p1() {
    grp_fu_954_p1 =  (sc_lv<4>) (ap_const_lv5_5);
}

void lenet_cnn::thread_grp_max_pooling2_fu_790_ap_start() {
    grp_max_pooling2_fu_790_ap_start = grp_max_pooling2_fu_790_ap_start_reg.read();
}

void lenet_cnn::thread_grp_max_pooling4_fu_796_ap_start() {
    grp_max_pooling4_fu_796_ap_start = grp_max_pooling4_fu_796_ap_start_reg.read();
}

void lenet_cnn::thread_icmp_ln122_fu_1253_p2() {
    icmp_ln122_fu_1253_p2 = (!indvar_flatten_reg_720.read().is_01() || !ap_const_lv11_4B0.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_720.read() == ap_const_lv11_4B0);
}

void lenet_cnn::thread_icmp_ln123_fu_1271_p2() {
    icmp_ln123_fu_1271_p2 = (!n_0_i_reg_742.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(n_0_i_reg_742.read() == ap_const_lv4_A);
}

void lenet_cnn::thread_icmp_ln125_1_fu_1285_p2() {
    icmp_ln125_1_fu_1285_p2 = (!ap_phi_mux_c_0_i_phi_fu_735_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_c_0_i_phi_fu_735_p4.read() == ap_const_lv7_0);
}

void lenet_cnn::thread_icmp_ln125_fu_1305_p2() {
    icmp_ln125_fu_1305_p2 = (!c_reg_1659.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_1659.read() == ap_const_lv7_0);
}

void lenet_cnn::thread_icmp_ln154_1_fu_914_p2() {
    icmp_ln154_1_fu_914_p2 = (!trunc_ln154_fu_910_p1.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): (sc_biguint<5>(trunc_ln154_fu_910_p1.read()) < sc_biguint<5>(ap_const_lv5_19));
}

void lenet_cnn::thread_icmp_ln154_2_fu_880_p2() {
    icmp_ln154_2_fu_880_p2 = (!add_ln154_1_fu_874_p2.read().is_01() || !ap_const_lv8_19.is_01())? sc_lv<1>(): (sc_biguint<8>(add_ln154_1_fu_874_p2.read()) < sc_biguint<8>(ap_const_lv8_19));
}

void lenet_cnn::thread_icmp_ln154_fu_862_p2() {
    icmp_ln154_fu_862_p2 = (!phi_ln154_reg_603.read().is_01() || !ap_const_lv8_96.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln154_reg_603.read() == ap_const_lv8_96);
}

void lenet_cnn::thread_icmp_ln155_fu_1044_p2() {
    icmp_ln155_fu_1044_p2 = (!ap_phi_mux_phi_ln155_phi_fu_640_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln155_phi_fu_640_p4.read() == ap_const_lv3_6);
}

void lenet_cnn::thread_icmp_ln157_fu_1076_p2() {
    icmp_ln157_fu_1076_p2 = (!ap_phi_mux_phi_ln157_phi_fu_652_p4.read().is_01() || !ap_const_lv12_960.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln157_phi_fu_652_p4.read() == ap_const_lv12_960);
}

void lenet_cnn::thread_icmp_ln158_fu_1108_p2() {
    icmp_ln158_fu_1108_p2 = (!ap_phi_mux_phi_ln158_phi_fu_664_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln158_phi_fu_664_p4.read() == ap_const_lv5_10);
}

void lenet_cnn::thread_icmp_ln160_fu_1140_p2() {
    icmp_ln160_fu_1140_p2 = (!ap_phi_mux_phi_ln160_phi_fu_676_p4.read().is_01() || !ap_const_lv16_BB80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln160_phi_fu_676_p4.read() == ap_const_lv16_BB80);
}

void lenet_cnn::thread_icmp_ln161_fu_1172_p2() {
    icmp_ln161_fu_1172_p2 = (!ap_phi_mux_phi_ln161_phi_fu_688_p4.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln161_phi_fu_688_p4.read() == ap_const_lv7_78);
}

void lenet_cnn::thread_icmp_ln163_fu_1204_p2() {
    icmp_ln163_fu_1204_p2 = (!ap_phi_mux_phi_ln163_phi_fu_700_p4.read().is_01() || !ap_const_lv11_4B0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln163_phi_fu_700_p4.read() == ap_const_lv11_4B0);
}

void lenet_cnn::thread_icmp_ln164_fu_1236_p2() {
    icmp_ln164_fu_1236_p2 = (!ap_phi_mux_phi_ln164_phi_fu_712_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln164_phi_fu_712_p4.read() == ap_const_lv4_A);
}

void lenet_cnn::thread_icmp_ln178_fu_1374_p2() {
    icmp_ln178_fu_1374_p2 = (!phi_ln178_reg_753.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln178_reg_753.read() == ap_const_lv4_A);
}

void lenet_cnn::thread_mul_ln154_fu_938_p1() {
    mul_ln154_fu_938_p1 =  (sc_lv<5>) (mul_ln154_fu_938_p10.read());
}

void lenet_cnn::thread_mul_ln154_fu_938_p10() {
    mul_ln154_fu_938_p10 = esl_zext<12,5>(select_ln154_fu_926_p3.read());
}

void lenet_cnn::thread_mul_ln154_fu_938_p2() {
    mul_ln154_fu_938_p2 = (!ap_const_lv12_34.is_01() || !mul_ln154_fu_938_p1.read().is_01())? sc_lv<12>(): sc_biguint<12>(ap_const_lv12_34) * sc_biguint<5>(mul_ln154_fu_938_p1.read());
}

void lenet_cnn::thread_n_fu_1299_p2() {
    n_fu_1299_p2 = (!select_ln125_fu_1277_p3.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln125_fu_1277_p3.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void lenet_cnn::thread_output_assign_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp9_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter0.read()))) {
        output_assign_address0 =  (sc_lv<4>) (zext_ln178_fu_1386_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp8_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter5.read()))) {
        output_assign_address0 =  (sc_lv<4>) (zext_ln125_fu_1356_p1.read());
    } else {
        output_assign_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void lenet_cnn::thread_output_assign_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp9_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp9_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter5.read())))) {
        output_assign_ce0 = ap_const_logic_1;
    } else {
        output_assign_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_output_assign_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter12.read()))) {
        output_assign_ce1 = ap_const_logic_1;
    } else {
        output_assign_ce1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_output_assign_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp8_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln122_reg_1650_pp8_iter11_reg.read()))) {
        output_assign_we1 = ap_const_logic_1;
    } else {
        output_assign_we1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_p_cast_fu_859_p1() {
    p_cast_fu_859_p1 = esl_zext<31,30>(parameters3_reg_1396.read());
}

void lenet_cnn::thread_p_shl_cast_fu_1001_p3() {
    p_shl_cast_fu_1001_p3 = esl_concat<7,2>(trunc_ln154_2_fu_997_p1.read(), ap_const_lv2_0);
}

void lenet_cnn::thread_pool2_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        pool2_output_address0 = grp_max_pooling2_fu_790_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        pool2_output_address0 = grp_convolution3_fu_764_input_r_address0.read();
    } else {
        pool2_output_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void lenet_cnn::thread_pool2_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        pool2_output_ce0 = grp_max_pooling2_fu_790_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        pool2_output_ce0 = grp_convolution3_fu_764_input_r_ce0.read();
    } else {
        pool2_output_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_pool2_output_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read())) {
        pool2_output_ce1 = grp_convolution3_fu_764_input_r_ce1.read();
    } else {
        pool2_output_ce1 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_pool2_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        pool2_output_we0 = grp_max_pooling2_fu_790_output_r_we0.read();
    } else {
        pool2_output_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_pool4_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        pool4_output_address0 = grp_max_pooling4_fu_796_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        pool4_output_address0 = grp_convolution5_fu_772_input_r_address0.read();
    } else {
        pool4_output_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void lenet_cnn::thread_pool4_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        pool4_output_ce0 = grp_max_pooling4_fu_796_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        pool4_output_ce0 = grp_convolution5_fu_772_input_r_ce0.read();
    } else {
        pool4_output_ce0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_pool4_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        pool4_output_we0 = grp_max_pooling4_fu_796_output_r_we0.read();
    } else {
        pool4_output_we0 = ap_const_logic_0;
    }
}

void lenet_cnn::thread_select_ln125_1_fu_1361_p3() {
    select_ln125_1_fu_1361_p3 = (!icmp_ln123_reg_1664_pp8_iter5_reg.read()[0].is_01())? sc_lv<1>(): ((icmp_ln123_reg_1664_pp8_iter5_reg.read()[0].to_bool())? icmp_ln125_reg_1693_pp8_iter5_reg.read(): icmp_ln125_1_reg_1676_pp8_iter5_reg.read());
}

void lenet_cnn::thread_select_ln125_3_fu_1291_p3() {
    select_ln125_3_fu_1291_p3 = (!icmp_ln123_fu_1271_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln123_fu_1271_p2.read()[0].to_bool())? c_fu_1265_p2.read(): ap_phi_mux_c_0_i_phi_fu_735_p4.read());
}

void lenet_cnn::thread_select_ln125_fu_1277_p3() {
    select_ln125_fu_1277_p3 = (!icmp_ln123_fu_1271_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln123_fu_1271_p2.read()[0].to_bool())? ap_const_lv4_0: n_0_i_reg_742.read());
}

void lenet_cnn::thread_select_ln154_1_fu_886_p3() {
    select_ln154_1_fu_886_p3 = (!icmp_ln154_2_fu_880_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln154_2_fu_880_p2.read()[0].to_bool())? add_ln154_1_fu_874_p2.read(): ap_const_lv8_0);
}

void lenet_cnn::thread_select_ln154_fu_926_p3() {
    select_ln154_fu_926_p3 = (!icmp_ln154_1_fu_914_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln154_1_fu_914_p2.read()[0].to_bool())? trunc_ln154_fu_910_p1.read(): add_ln154_3_fu_920_p2.read());
}

void lenet_cnn::thread_sext_ln126_fu_1351_p1() {
    sext_ln126_fu_1351_p1 = esl_sext<64,12>(add_ln126_fu_1345_p2.read());
}

void lenet_cnn::thread_sext_ln154_fu_980_p1() {
    sext_ln154_fu_980_p1 = esl_sext<5,4>(tmp_13_reg_1460_pp0_iter7_reg.read());
}

void lenet_cnn::thread_sub_ln126_fu_1339_p2() {
    sub_ln126_fu_1339_p2 = (!zext_ln126_1_fu_1324_p1.read().is_01() || !zext_ln126_2_fu_1335_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln126_1_fu_1324_p1.read()) - sc_biguint<12>(zext_ln126_2_fu_1335_p1.read()));
}

void lenet_cnn::thread_tmp_12_fu_963_p3() {
    tmp_12_fu_963_p3 = esl_concat<3,2>(tmp_reg_1449_pp0_iter7_reg.read(), ap_const_lv2_0);
}

void lenet_cnn::thread_tmp_5_fu_1328_p3() {
    tmp_5_fu_1328_p3 = esl_concat<4,3>(select_ln125_reg_1669.read(), ap_const_lv3_0);
}

void lenet_cnn::thread_tmp_s_fu_1317_p3() {
    tmp_s_fu_1317_p3 = esl_concat<4,7>(select_ln125_reg_1669.read(), ap_const_lv7_0);
}

void lenet_cnn::thread_trunc_ln154_1_fu_993_p1() {
    trunc_ln154_1_fu_993_p1 = add_ln154_4_fu_987_p2.read().range(9-1, 0);
}

void lenet_cnn::thread_trunc_ln154_2_fu_997_p1() {
    trunc_ln154_2_fu_997_p1 = add_ln154_4_fu_987_p2.read().range(7-1, 0);
}

void lenet_cnn::thread_trunc_ln154_fu_910_p1() {
    trunc_ln154_fu_910_p1 = phi_urem_reg_625.read().range(5-1, 0);
}

void lenet_cnn::thread_zext_ln125_1_fu_1310_p1() {
    zext_ln125_1_fu_1310_p1 = esl_zext<64,7>(select_ln125_3_reg_1681.read());
}

void lenet_cnn::thread_zext_ln125_fu_1356_p1() {
    zext_ln125_fu_1356_p1 = esl_zext<64,4>(select_ln125_reg_1669_pp8_iter4_reg.read());
}

void lenet_cnn::thread_zext_ln126_1_fu_1324_p1() {
    zext_ln126_1_fu_1324_p1 = esl_zext<12,11>(tmp_s_fu_1317_p3.read());
}

void lenet_cnn::thread_zext_ln126_2_fu_1335_p1() {
    zext_ln126_2_fu_1335_p1 = esl_zext<12,7>(tmp_5_fu_1328_p3.read());
}

void lenet_cnn::thread_zext_ln126_fu_1314_p1() {
    zext_ln126_fu_1314_p1 = esl_zext<12,7>(select_ln125_3_reg_1681.read());
}

void lenet_cnn::thread_zext_ln154_1_fu_970_p1() {
    zext_ln154_1_fu_970_p1 = esl_zext<11,5>(tmp_12_fu_963_p3.read());
}

void lenet_cnn::thread_zext_ln154_3_fu_983_p1() {
    zext_ln154_3_fu_983_p1 = esl_zext<11,5>(sext_ln154_fu_980_p1.read());
}

void lenet_cnn::thread_zext_ln154_4_fu_1015_p1() {
    zext_ln154_4_fu_1015_p1 = esl_zext<9,5>(grp_fu_954_p2.read());
}

void lenet_cnn::thread_zext_ln154_5_fu_1025_p1() {
    zext_ln154_5_fu_1025_p1 = esl_zext<64,9>(add_ln154_6_reg_1470.read());
}

void lenet_cnn::thread_zext_ln154_fu_960_p1() {
    zext_ln154_fu_960_p1 = esl_zext<11,3>(tmp_reg_1449_pp0_iter7_reg.read());
}

void lenet_cnn::thread_zext_ln155_1_fu_1034_p1() {
    zext_ln155_1_fu_1034_p1 = esl_zext<64,31>(add_ln155_1_reg_1475.read());
}

void lenet_cnn::thread_zext_ln155_fu_1056_p1() {
    zext_ln155_fu_1056_p1 = esl_zext<64,3>(phi_ln155_reg_636_pp1_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln157_1_fu_1088_p1() {
    zext_ln157_1_fu_1088_p1 = esl_zext<64,12>(phi_ln157_reg_648_pp2_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln157_fu_1066_p1() {
    zext_ln157_fu_1066_p1 = esl_zext<64,31>(add_ln157_1_reg_1500.read());
}

void lenet_cnn::thread_zext_ln158_1_fu_1098_p1() {
    zext_ln158_1_fu_1098_p1 = esl_zext<64,31>(add_ln158_1_reg_1525.read());
}

void lenet_cnn::thread_zext_ln158_fu_1120_p1() {
    zext_ln158_fu_1120_p1 = esl_zext<64,5>(phi_ln158_reg_660_pp3_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln160_1_fu_1152_p1() {
    zext_ln160_1_fu_1152_p1 = esl_zext<64,16>(phi_ln160_reg_672_pp4_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln160_fu_1130_p1() {
    zext_ln160_fu_1130_p1 = esl_zext<64,31>(add_ln160_1_reg_1550.read());
}

void lenet_cnn::thread_zext_ln161_1_fu_1162_p1() {
    zext_ln161_1_fu_1162_p1 = esl_zext<64,31>(add_ln161_1_reg_1575.read());
}

void lenet_cnn::thread_zext_ln161_fu_1184_p1() {
    zext_ln161_fu_1184_p1 = esl_zext<64,7>(phi_ln161_reg_684_pp5_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln163_1_fu_1216_p1() {
    zext_ln163_1_fu_1216_p1 = esl_zext<64,11>(phi_ln163_reg_696_pp6_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln163_fu_1194_p1() {
    zext_ln163_fu_1194_p1 = esl_zext<64,31>(add_ln163_1_reg_1600.read());
}

void lenet_cnn::thread_zext_ln164_1_fu_1226_p1() {
    zext_ln164_1_fu_1226_p1 = esl_zext<64,31>(add_ln164_1_reg_1625.read());
}

void lenet_cnn::thread_zext_ln164_fu_1248_p1() {
    zext_ln164_fu_1248_p1 = esl_zext<64,4>(phi_ln164_reg_708_pp7_iter1_reg.read());
}

void lenet_cnn::thread_zext_ln178_fu_1386_p1() {
    zext_ln178_fu_1386_p1 = esl_zext<64,4>(phi_ln178_reg_753.read());
}

void lenet_cnn::thread_ap_NS_fsm() {
    if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln154_fu_862_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln154_fu_862_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state19;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state21;
        } else {
            ap_NS_fsm = ap_ST_fsm_state20;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_pp1_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp1_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln155_fu_1044_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln155_fu_1044_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state30;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state32;
        } else {
            ap_NS_fsm = ap_ST_fsm_state31;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_pp2_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp2_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln157_fu_1076_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln157_fu_1076_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state41;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state43;
        } else {
            ap_NS_fsm = ap_ST_fsm_state42;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_pp3_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp3_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln158_fu_1108_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln158_fu_1108_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state54;
        } else {
            ap_NS_fsm = ap_ST_fsm_state53;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_pp4_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp4_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln160_fu_1140_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln160_fu_1140_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_pp5_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp5_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp5_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln161_fu_1172_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp5_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp5_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp5_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp5_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln161_fu_1172_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp5_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state74;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state76;
        } else {
            ap_NS_fsm = ap_ST_fsm_state75;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_pp6_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp6_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp6_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln163_fu_1204_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp6_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp6_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp6_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp6_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln163_fu_1204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp6_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state85;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && esl_seteq<1,1,1>(DATA_PARAMETERS_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state87;
        } else {
            ap_NS_fsm = ap_ST_fsm_state86;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_pp7_stage0;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp7_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp7_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln164_fu_1236_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp7_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp7_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp7_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp7_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln164_fu_1236_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp7_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state96;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && esl_seteq<1,1,1>(grp_convolution1_fu_780_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state98;
        } else {
            ap_NS_fsm = ap_ST_fsm_state97;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) && esl_seteq<1,1,1>(grp_max_pooling2_fu_790_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state100;
        } else {
            ap_NS_fsm = ap_ST_fsm_state99;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) && esl_seteq<1,1,1>(grp_convolution3_fu_764_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state102;
        } else {
            ap_NS_fsm = ap_ST_fsm_state101;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) && esl_seteq<1,1,1>(grp_max_pooling4_fu_796_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state104;
        } else {
            ap_NS_fsm = ap_ST_fsm_state103;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && esl_seteq<1,1,1>(grp_convolution5_fu_772_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        } else {
            ap_NS_fsm = ap_ST_fsm_state105;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp8_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter12.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp8_iter11.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln122_fu_1253_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp8_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter12.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp8_iter11.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp8_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp8_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln122_fu_1253_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp8_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state119;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && esl_seteq<1,1,1>(DATA_FC6_OUTPUT_AWREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        } else {
            ap_NS_fsm = ap_ST_fsm_state119;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_pp9_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp9_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln178_fu_1374_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp9_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp9_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp9_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp9_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln178_fu_1374_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp9_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state123;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        }
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        ap_NS_fsm = ap_ST_fsm_state125;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        ap_NS_fsm = ap_ST_fsm_state126;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,90,90>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && esl_seteq<1,1,1>(DATA_FC6_OUTPUT_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state127;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<90>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void lenet_cnn::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_DATA_IMAGE_AWVALID\" :  \"" << m_axi_DATA_IMAGE_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWREADY\" :  \"" << m_axi_DATA_IMAGE_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWADDR\" :  \"" << m_axi_DATA_IMAGE_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWID\" :  \"" << m_axi_DATA_IMAGE_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWLEN\" :  \"" << m_axi_DATA_IMAGE_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWSIZE\" :  \"" << m_axi_DATA_IMAGE_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWBURST\" :  \"" << m_axi_DATA_IMAGE_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWLOCK\" :  \"" << m_axi_DATA_IMAGE_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWCACHE\" :  \"" << m_axi_DATA_IMAGE_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWPROT\" :  \"" << m_axi_DATA_IMAGE_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWQOS\" :  \"" << m_axi_DATA_IMAGE_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWREGION\" :  \"" << m_axi_DATA_IMAGE_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_AWUSER\" :  \"" << m_axi_DATA_IMAGE_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WVALID\" :  \"" << m_axi_DATA_IMAGE_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_WREADY\" :  \"" << m_axi_DATA_IMAGE_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WDATA\" :  \"" << m_axi_DATA_IMAGE_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WSTRB\" :  \"" << m_axi_DATA_IMAGE_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WLAST\" :  \"" << m_axi_DATA_IMAGE_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WID\" :  \"" << m_axi_DATA_IMAGE_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_WUSER\" :  \"" << m_axi_DATA_IMAGE_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARVALID\" :  \"" << m_axi_DATA_IMAGE_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARREADY\" :  \"" << m_axi_DATA_IMAGE_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARADDR\" :  \"" << m_axi_DATA_IMAGE_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARID\" :  \"" << m_axi_DATA_IMAGE_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARLEN\" :  \"" << m_axi_DATA_IMAGE_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARSIZE\" :  \"" << m_axi_DATA_IMAGE_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARBURST\" :  \"" << m_axi_DATA_IMAGE_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARLOCK\" :  \"" << m_axi_DATA_IMAGE_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARCACHE\" :  \"" << m_axi_DATA_IMAGE_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARPROT\" :  \"" << m_axi_DATA_IMAGE_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARQOS\" :  \"" << m_axi_DATA_IMAGE_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARREGION\" :  \"" << m_axi_DATA_IMAGE_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_ARUSER\" :  \"" << m_axi_DATA_IMAGE_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RVALID\" :  \"" << m_axi_DATA_IMAGE_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_RREADY\" :  \"" << m_axi_DATA_IMAGE_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RDATA\" :  \"" << m_axi_DATA_IMAGE_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RLAST\" :  \"" << m_axi_DATA_IMAGE_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RID\" :  \"" << m_axi_DATA_IMAGE_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RUSER\" :  \"" << m_axi_DATA_IMAGE_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_RRESP\" :  \"" << m_axi_DATA_IMAGE_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_BVALID\" :  \"" << m_axi_DATA_IMAGE_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_IMAGE_BREADY\" :  \"" << m_axi_DATA_IMAGE_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_BRESP\" :  \"" << m_axi_DATA_IMAGE_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_BID\" :  \"" << m_axi_DATA_IMAGE_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_IMAGE_BUSER\" :  \"" << m_axi_DATA_IMAGE_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWVALID\" :  \"" << m_axi_DATA_PARAMETERS_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWREADY\" :  \"" << m_axi_DATA_PARAMETERS_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWADDR\" :  \"" << m_axi_DATA_PARAMETERS_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWID\" :  \"" << m_axi_DATA_PARAMETERS_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWLEN\" :  \"" << m_axi_DATA_PARAMETERS_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWSIZE\" :  \"" << m_axi_DATA_PARAMETERS_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWBURST\" :  \"" << m_axi_DATA_PARAMETERS_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWLOCK\" :  \"" << m_axi_DATA_PARAMETERS_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWCACHE\" :  \"" << m_axi_DATA_PARAMETERS_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWPROT\" :  \"" << m_axi_DATA_PARAMETERS_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWQOS\" :  \"" << m_axi_DATA_PARAMETERS_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWREGION\" :  \"" << m_axi_DATA_PARAMETERS_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_AWUSER\" :  \"" << m_axi_DATA_PARAMETERS_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WVALID\" :  \"" << m_axi_DATA_PARAMETERS_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WREADY\" :  \"" << m_axi_DATA_PARAMETERS_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WDATA\" :  \"" << m_axi_DATA_PARAMETERS_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WSTRB\" :  \"" << m_axi_DATA_PARAMETERS_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WLAST\" :  \"" << m_axi_DATA_PARAMETERS_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WID\" :  \"" << m_axi_DATA_PARAMETERS_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_WUSER\" :  \"" << m_axi_DATA_PARAMETERS_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARVALID\" :  \"" << m_axi_DATA_PARAMETERS_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARREADY\" :  \"" << m_axi_DATA_PARAMETERS_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARADDR\" :  \"" << m_axi_DATA_PARAMETERS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARID\" :  \"" << m_axi_DATA_PARAMETERS_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARLEN\" :  \"" << m_axi_DATA_PARAMETERS_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARSIZE\" :  \"" << m_axi_DATA_PARAMETERS_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARBURST\" :  \"" << m_axi_DATA_PARAMETERS_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARLOCK\" :  \"" << m_axi_DATA_PARAMETERS_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARCACHE\" :  \"" << m_axi_DATA_PARAMETERS_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARPROT\" :  \"" << m_axi_DATA_PARAMETERS_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARQOS\" :  \"" << m_axi_DATA_PARAMETERS_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARREGION\" :  \"" << m_axi_DATA_PARAMETERS_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_ARUSER\" :  \"" << m_axi_DATA_PARAMETERS_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RVALID\" :  \"" << m_axi_DATA_PARAMETERS_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RREADY\" :  \"" << m_axi_DATA_PARAMETERS_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RDATA\" :  \"" << m_axi_DATA_PARAMETERS_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RLAST\" :  \"" << m_axi_DATA_PARAMETERS_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RID\" :  \"" << m_axi_DATA_PARAMETERS_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RUSER\" :  \"" << m_axi_DATA_PARAMETERS_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_RRESP\" :  \"" << m_axi_DATA_PARAMETERS_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_BVALID\" :  \"" << m_axi_DATA_PARAMETERS_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_BREADY\" :  \"" << m_axi_DATA_PARAMETERS_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_BRESP\" :  \"" << m_axi_DATA_PARAMETERS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_BID\" :  \"" << m_axi_DATA_PARAMETERS_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_PARAMETERS_BUSER\" :  \"" << m_axi_DATA_PARAMETERS_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWVALID\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWREADY\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWADDR\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWID\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWLEN\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWSIZE\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWBURST\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWLOCK\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWCACHE\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWPROT\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWQOS\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWREGION\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_AWUSER\" :  \"" << m_axi_DATA_FC6_OUTPUT_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WVALID\" :  \"" << m_axi_DATA_FC6_OUTPUT_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WREADY\" :  \"" << m_axi_DATA_FC6_OUTPUT_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WDATA\" :  \"" << m_axi_DATA_FC6_OUTPUT_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WSTRB\" :  \"" << m_axi_DATA_FC6_OUTPUT_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WLAST\" :  \"" << m_axi_DATA_FC6_OUTPUT_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WID\" :  \"" << m_axi_DATA_FC6_OUTPUT_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_WUSER\" :  \"" << m_axi_DATA_FC6_OUTPUT_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARVALID\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARREADY\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARADDR\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARID\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARLEN\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARSIZE\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARBURST\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARLOCK\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARCACHE\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARPROT\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARQOS\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARREGION\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_ARUSER\" :  \"" << m_axi_DATA_FC6_OUTPUT_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RVALID\" :  \"" << m_axi_DATA_FC6_OUTPUT_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RREADY\" :  \"" << m_axi_DATA_FC6_OUTPUT_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RDATA\" :  \"" << m_axi_DATA_FC6_OUTPUT_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RLAST\" :  \"" << m_axi_DATA_FC6_OUTPUT_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RID\" :  \"" << m_axi_DATA_FC6_OUTPUT_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RUSER\" :  \"" << m_axi_DATA_FC6_OUTPUT_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_RRESP\" :  \"" << m_axi_DATA_FC6_OUTPUT_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_BVALID\" :  \"" << m_axi_DATA_FC6_OUTPUT_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_BREADY\" :  \"" << m_axi_DATA_FC6_OUTPUT_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_BRESP\" :  \"" << m_axi_DATA_FC6_OUTPUT_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_BID\" :  \"" << m_axi_DATA_FC6_OUTPUT_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DATA_FC6_OUTPUT_BUSER\" :  \"" << m_axi_DATA_FC6_OUTPUT_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_AWVALID\" :  \"" << s_axi_CTL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_AWREADY\" :  \"" << s_axi_CTL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_AWADDR\" :  \"" << s_axi_CTL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_WVALID\" :  \"" << s_axi_CTL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_WREADY\" :  \"" << s_axi_CTL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_WDATA\" :  \"" << s_axi_CTL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_WSTRB\" :  \"" << s_axi_CTL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_ARVALID\" :  \"" << s_axi_CTL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_ARREADY\" :  \"" << s_axi_CTL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_ARADDR\" :  \"" << s_axi_CTL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_RVALID\" :  \"" << s_axi_CTL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_RREADY\" :  \"" << s_axi_CTL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_RDATA\" :  \"" << s_axi_CTL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_RRESP\" :  \"" << s_axi_CTL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_BVALID\" :  \"" << s_axi_CTL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTL_BREADY\" :  \"" << s_axi_CTL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTL_BRESP\" :  \"" << s_axi_CTL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

