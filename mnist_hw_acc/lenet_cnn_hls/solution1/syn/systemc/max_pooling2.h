// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2_HH_
#define _max_pooling2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_cnn_fcmp_32dEe.h"

namespace ap_rtl {

struct max_pooling2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pooling2(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2);

    ~max_pooling2();

    sc_trace_file* mVcdFile;

    lenet_cnn_fcmp_32dEe<1,2,32,32,1>* lenet_cnn_fcmp_32dEe_U12;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten117_reg_127;
    sc_signal< sc_lv<3> > c_0_reg_138;
    sc_signal< sc_lv<10> > indvar_flatten63_reg_150;
    sc_signal< sc_lv<4> > h_0_reg_162;
    sc_signal< sc_lv<7> > indvar_flatten24_reg_173;
    sc_signal< sc_lv<4> > w_0_reg_185;
    sc_signal< sc_lv<4> > indvar_flatten_reg_197;
    sc_signal< sc_lv<2> > i_0_reg_209;
    sc_signal< sc_lv<2> > j_0_reg_220;
    sc_signal< sc_lv<5> > shl_ln_fu_237_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_1021;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > add_ln40_fu_249_p2;
    sc_signal< sc_lv<5> > add_ln40_reg_1026;
    sc_signal< sc_lv<1> > icmp_ln32_fu_255_p2;
    sc_signal< sc_lv<1> > icmp_ln32_reg_1031;
    sc_signal< sc_lv<1> > icmp_ln32_reg_1031_pp0_iter1_reg;
    sc_signal< sc_lv<13> > add_ln32_fu_261_p2;
    sc_signal< sc_lv<13> > add_ln32_reg_1035;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > c_fu_267_p2;
    sc_signal< sc_lv<3> > c_reg_1040;
    sc_signal< sc_lv<1> > icmp_ln33_fu_273_p2;
    sc_signal< sc_lv<1> > icmp_ln33_reg_1045;
    sc_signal< sc_lv<4> > select_ln41_fu_279_p3;
    sc_signal< sc_lv<4> > select_ln41_reg_1053;
    sc_signal< sc_lv<1> > and_ln41_6_fu_345_p2;
    sc_signal< sc_lv<1> > and_ln41_6_reg_1058;
    sc_signal< sc_lv<4> > h_fu_351_p2;
    sc_signal< sc_lv<4> > h_reg_1065;
    sc_signal< sc_lv<1> > or_ln33_fu_357_p2;
    sc_signal< sc_lv<1> > or_ln33_reg_1071;
    sc_signal< sc_lv<1> > and_ln33_3_fu_393_p2;
    sc_signal< sc_lv<1> > and_ln33_3_reg_1078;
    sc_signal< sc_lv<1> > or_ln34_1_fu_405_p2;
    sc_signal< sc_lv<1> > or_ln34_1_reg_1085;
    sc_signal< sc_lv<2> > select_ln34_fu_411_p3;
    sc_signal< sc_lv<2> > select_ln34_reg_1090;
    sc_signal< sc_lv<1> > and_ln34_2_fu_437_p2;
    sc_signal< sc_lv<1> > and_ln34_2_reg_1095;
    sc_signal< sc_lv<2> > i_fu_443_p2;
    sc_signal< sc_lv<2> > i_reg_1101;
    sc_signal< sc_lv<2> > select_ln35_fu_461_p3;
    sc_signal< sc_lv<2> > select_ln35_reg_1107;
    sc_signal< sc_lv<2> > select_ln35_reg_1107_pp0_iter1_reg;
    sc_signal< sc_lv<1> > select_ln35_1_fu_473_p3;
    sc_signal< sc_lv<1> > select_ln35_1_reg_1114;
    sc_signal< sc_lv<1> > select_ln35_1_reg_1114_pp0_iter1_reg;
    sc_signal< sc_lv<1> > and_ln44_fu_501_p2;
    sc_signal< sc_lv<1> > and_ln44_reg_1119;
    sc_signal< sc_lv<1> > and_ln44_reg_1119_pp0_iter1_reg;
    sc_signal< sc_lv<1> > and_ln44_reg_1119_pp0_iter2_reg;
    sc_signal< sc_lv<1> > and_ln44_reg_1119_pp0_iter3_reg;
    sc_signal< sc_lv<3> > select_ln41_1_fu_507_p3;
    sc_signal< sc_lv<3> > select_ln41_1_reg_1123;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter3;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<4> > select_ln33_fu_559_p3;
    sc_signal< sc_lv<4> > select_ln33_reg_1130;
    sc_signal< sc_lv<4> > select_ln33_2_fu_580_p3;
    sc_signal< sc_lv<4> > select_ln33_2_reg_1135;
    sc_signal< sc_lv<4> > w_fu_607_p2;
    sc_signal< sc_lv<4> > w_reg_1141;
    sc_signal< sc_lv<2> > select_ln35_4_fu_691_p3;
    sc_signal< sc_lv<2> > select_ln35_4_reg_1146;
    sc_signal< sc_lv<14> > add_ln41_1_fu_709_p2;
    sc_signal< sc_lv<14> > add_ln41_1_reg_1151;
    sc_signal< sc_lv<2> > j_fu_715_p2;
    sc_signal< sc_lv<2> > j_reg_1156;
    sc_signal< sc_lv<4> > select_ln35_5_fu_726_p3;
    sc_signal< sc_lv<4> > select_ln35_5_reg_1161;
    sc_signal< sc_lv<7> > select_ln34_4_fu_739_p3;
    sc_signal< sc_lv<7> > select_ln34_4_reg_1166;
    sc_signal< sc_lv<10> > select_ln33_5_fu_752_p3;
    sc_signal< sc_lv<10> > select_ln33_5_reg_1171;
    sc_signal< sc_lv<4> > select_ln34_2_fu_830_p3;
    sc_signal< sc_lv<4> > select_ln34_2_reg_1176;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<11> > output_addr_reg_1181;
    sc_signal< sc_lv<11> > output_addr_reg_1181_pp0_iter2_reg;
    sc_signal< sc_lv<11> > output_addr_reg_1181_pp0_iter3_reg;
    sc_signal< sc_lv<32> > max_value_fu_865_p3;
    sc_signal< sc_lv<32> > max_value_reg_1191;
    sc_signal< sc_lv<32> > input_load_reg_1198;
    sc_signal< sc_lv<32> > max_value_2_fu_956_p3;
    sc_signal< sc_lv<32> > max_value_2_reg_1205;
    sc_signal< sc_lv<32> > max_value_2_reg_1205_pp0_iter3_reg;
    sc_signal< sc_lv<32> > select_ln5_fu_1008_p3;
    sc_signal< sc_lv<32> > select_ln5_reg_1212;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<13> > ap_phi_mux_indvar_flatten117_phi_fu_131_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_142_p4;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_flatten63_phi_fu_154_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_h_0_phi_fu_166_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_indvar_flatten24_phi_fu_177_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_w_0_phi_fu_189_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_201_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_i_0_phi_fu_213_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j_0_phi_fu_224_p4;
    sc_signal< sc_lv<64> > zext_ln45_2_fu_845_p1;
    sc_signal< sc_lv<64> > zext_ln41_3_fu_850_p1;
    sc_signal< sc_lv<32> > max_value_4_fu_98;
    sc_signal< sc_lv<32> > grp_fu_231_p0;
    sc_signal< sc_lv<32> > grp_fu_231_p1;
    sc_signal< sc_lv<5> > zext_ln35_fu_245_p1;
    sc_signal< sc_lv<1> > trunc_ln35_fu_293_p1;
    sc_signal< sc_lv<1> > xor_ln41_fu_287_p2;
    sc_signal< sc_lv<1> > icmp_ln44_fu_303_p2;
    sc_signal< sc_lv<1> > icmp_ln36_fu_315_p2;
    sc_signal< sc_lv<1> > icmp_ln35_fu_327_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_339_p2;
    sc_signal< sc_lv<1> > xor_ln33_fu_363_p2;
    sc_signal< sc_lv<1> > and_ln41_2_fu_297_p2;
    sc_signal< sc_lv<1> > or_ln33_1_fu_369_p2;
    sc_signal< sc_lv<1> > and_ln41_3_fu_309_p2;
    sc_signal< sc_lv<1> > and_ln41_4_fu_321_p2;
    sc_signal< sc_lv<1> > and_ln41_5_fu_333_p2;
    sc_signal< sc_lv<1> > or_ln34_fu_399_p2;
    sc_signal< sc_lv<1> > and_ln33_fu_375_p2;
    sc_signal< sc_lv<1> > xor_ln34_fu_419_p2;
    sc_signal< sc_lv<1> > and_ln33_1_fu_381_p2;
    sc_signal< sc_lv<1> > and_ln33_2_fu_387_p2;
    sc_signal< sc_lv<1> > or_ln35_fu_449_p2;
    sc_signal< sc_lv<1> > or_ln35_1_fu_455_p2;
    sc_signal< sc_lv<1> > trunc_ln35_1_fu_469_p1;
    sc_signal< sc_lv<1> > and_ln34_fu_425_p2;
    sc_signal< sc_lv<1> > icmp_ln44_2_fu_481_p2;
    sc_signal< sc_lv<1> > and_ln34_1_fu_431_p2;
    sc_signal< sc_lv<1> > select_ln35_3_fu_487_p3;
    sc_signal< sc_lv<1> > icmp_ln44_1_fu_495_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_513_p3;
    sc_signal< sc_lv<5> > tmp_1_fu_525_p3;
    sc_signal< sc_lv<9> > zext_ln41_fu_521_p1;
    sc_signal< sc_lv<9> > zext_ln41_1_fu_533_p1;
    sc_signal< sc_lv<9> > sub_ln41_fu_537_p2;
    sc_signal< sc_lv<5> > shl_ln40_mid1_fu_566_p3;
    sc_signal< sc_lv<5> > select_ln41_2_fu_547_p3;
    sc_signal< sc_lv<5> > shl_ln40_s_fu_585_p3;
    sc_signal< sc_lv<5> > select_ln41_3_fu_553_p3;
    sc_signal< sc_lv<5> > shl_ln40_1_mid1_fu_613_p3;
    sc_signal< sc_lv<5> > select_ln33_3_fu_593_p3;
    sc_signal< sc_lv<5> > select_ln33_1_fu_573_p3;
    sc_signal< sc_lv<5> > select_ln33_4_fu_600_p3;
    sc_signal< sc_lv<5> > zext_ln35_1_fu_635_p1;
    sc_signal< sc_lv<5> > add_ln40_2_fu_638_p2;
    sc_signal< sc_lv<5> > select_ln34_3_fu_628_p3;
    sc_signal< sc_lv<5> > select_ln35_2_fu_644_p3;
    sc_signal< sc_lv<10> > sext_ln41_fu_543_p1;
    sc_signal< sc_lv<10> > zext_ln35_2_fu_651_p1;
    sc_signal< sc_lv<10> > add_ln41_fu_655_p2;
    sc_signal< sc_lv<9> > trunc_ln41_fu_661_p1;
    sc_signal< sc_lv<12> > tmp_11_fu_673_p3;
    sc_signal< sc_lv<14> > p_shl_cast_fu_665_p3;
    sc_signal< sc_lv<14> > sext_ln41_1_fu_681_p1;
    sc_signal< sc_lv<5> > zext_ln36_fu_696_p1;
    sc_signal< sc_lv<5> > select_ln34_1_fu_621_p3;
    sc_signal< sc_lv<5> > add_ln40_1_fu_699_p2;
    sc_signal< sc_lv<14> > sub_ln41_1_fu_685_p2;
    sc_signal< sc_lv<14> > zext_ln41_2_fu_705_p1;
    sc_signal< sc_lv<4> > add_ln35_1_fu_720_p2;
    sc_signal< sc_lv<7> > add_ln34_1_fu_733_p2;
    sc_signal< sc_lv<10> > add_ln33_1_fu_746_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_759_p3;
    sc_signal< sc_lv<4> > tmp_4_fu_770_p3;
    sc_signal< sc_lv<8> > zext_ln45_fu_766_p1;
    sc_signal< sc_lv<8> > zext_ln45_1_fu_777_p1;
    sc_signal< sc_lv<8> > sub_ln45_fu_781_p2;
    sc_signal< sc_lv<9> > sext_ln45_fu_787_p1;
    sc_signal< sc_lv<9> > zext_ln33_fu_791_p1;
    sc_signal< sc_lv<9> > add_ln45_fu_794_p2;
    sc_signal< sc_lv<8> > trunc_ln45_fu_800_p1;
    sc_signal< sc_lv<10> > tmp_10_fu_812_p3;
    sc_signal< sc_lv<12> > p_shl3_cast_fu_804_p3;
    sc_signal< sc_lv<12> > sext_ln45_1_fu_820_p1;
    sc_signal< sc_lv<12> > sub_ln45_1_fu_824_p2;
    sc_signal< sc_lv<12> > zext_ln34_fu_835_p1;
    sc_signal< sc_lv<12> > add_ln45_1_fu_839_p2;
    sc_signal< sc_lv<1> > trunc_ln36_fu_857_p1;
    sc_signal< sc_lv<1> > or_ln38_fu_860_p2;
    sc_signal< sc_lv<32> > bitcast_ln41_fu_874_p1;
    sc_signal< sc_lv<32> > bitcast_ln41_1_fu_891_p1;
    sc_signal< sc_lv<8> > tmp_fu_877_p4;
    sc_signal< sc_lv<23> > trunc_ln41_1_fu_887_p1;
    sc_signal< sc_lv<1> > icmp_ln41_1_fu_914_p2;
    sc_signal< sc_lv<1> > icmp_ln41_fu_908_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_894_p4;
    sc_signal< sc_lv<23> > trunc_ln41_2_fu_904_p1;
    sc_signal< sc_lv<1> > icmp_ln41_3_fu_932_p2;
    sc_signal< sc_lv<1> > icmp_ln41_2_fu_926_p2;
    sc_signal< sc_lv<1> > or_ln41_fu_920_p2;
    sc_signal< sc_lv<1> > or_ln41_1_fu_938_p2;
    sc_signal< sc_lv<1> > and_ln41_fu_944_p2;
    sc_signal< sc_lv<1> > grp_fu_231_p2;
    sc_signal< sc_lv<1> > and_ln41_1_fu_950_p2;
    sc_signal< sc_lv<32> > bitcast_ln5_fu_967_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_970_p4;
    sc_signal< sc_lv<23> > trunc_ln5_fu_980_p1;
    sc_signal< sc_lv<1> > icmp_ln5_2_fu_990_p2;
    sc_signal< sc_lv<1> > icmp_ln5_fu_984_p2;
    sc_signal< sc_lv<1> > or_ln5_fu_996_p2;
    sc_signal< sc_lv<1> > and_ln5_fu_1002_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<13> ap_const_lv13_1260;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<7> ap_const_lv7_38;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln32_fu_261_p2();
    void thread_add_ln33_1_fu_746_p2();
    void thread_add_ln34_1_fu_733_p2();
    void thread_add_ln35_1_fu_720_p2();
    void thread_add_ln40_1_fu_699_p2();
    void thread_add_ln40_2_fu_638_p2();
    void thread_add_ln40_fu_249_p2();
    void thread_add_ln41_1_fu_709_p2();
    void thread_add_ln41_fu_655_p2();
    void thread_add_ln45_1_fu_839_p2();
    void thread_add_ln45_fu_794_p2();
    void thread_and_ln33_1_fu_381_p2();
    void thread_and_ln33_2_fu_387_p2();
    void thread_and_ln33_3_fu_393_p2();
    void thread_and_ln33_fu_375_p2();
    void thread_and_ln34_1_fu_431_p2();
    void thread_and_ln34_2_fu_437_p2();
    void thread_and_ln34_fu_425_p2();
    void thread_and_ln41_1_fu_950_p2();
    void thread_and_ln41_2_fu_297_p2();
    void thread_and_ln41_3_fu_309_p2();
    void thread_and_ln41_4_fu_321_p2();
    void thread_and_ln41_5_fu_333_p2();
    void thread_and_ln41_6_fu_345_p2();
    void thread_and_ln41_fu_944_p2();
    void thread_and_ln44_fu_501_p2();
    void thread_and_ln5_fu_1002_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state10_pp0_stage0_iter4();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_block_state7_pp0_stage1_iter2();
    void thread_ap_block_state8_pp0_stage0_iter3();
    void thread_ap_block_state9_pp0_stage1_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_142_p4();
    void thread_ap_phi_mux_h_0_phi_fu_166_p4();
    void thread_ap_phi_mux_i_0_phi_fu_213_p4();
    void thread_ap_phi_mux_indvar_flatten117_phi_fu_131_p4();
    void thread_ap_phi_mux_indvar_flatten24_phi_fu_177_p4();
    void thread_ap_phi_mux_indvar_flatten63_phi_fu_154_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_201_p4();
    void thread_ap_phi_mux_j_0_phi_fu_224_p4();
    void thread_ap_phi_mux_w_0_phi_fu_189_p4();
    void thread_ap_ready();
    void thread_bitcast_ln41_1_fu_891_p1();
    void thread_bitcast_ln41_fu_874_p1();
    void thread_bitcast_ln5_fu_967_p1();
    void thread_c_fu_267_p2();
    void thread_grp_fu_231_p0();
    void thread_grp_fu_231_p1();
    void thread_h_fu_351_p2();
    void thread_i_fu_443_p2();
    void thread_icmp_ln32_fu_255_p2();
    void thread_icmp_ln33_fu_273_p2();
    void thread_icmp_ln34_fu_339_p2();
    void thread_icmp_ln35_fu_327_p2();
    void thread_icmp_ln36_fu_315_p2();
    void thread_icmp_ln41_1_fu_914_p2();
    void thread_icmp_ln41_2_fu_926_p2();
    void thread_icmp_ln41_3_fu_932_p2();
    void thread_icmp_ln41_fu_908_p2();
    void thread_icmp_ln44_1_fu_495_p2();
    void thread_icmp_ln44_2_fu_481_p2();
    void thread_icmp_ln44_fu_303_p2();
    void thread_icmp_ln5_2_fu_990_p2();
    void thread_icmp_ln5_fu_984_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_715_p2();
    void thread_max_value_2_fu_956_p3();
    void thread_max_value_fu_865_p3();
    void thread_or_ln33_1_fu_369_p2();
    void thread_or_ln33_fu_357_p2();
    void thread_or_ln34_1_fu_405_p2();
    void thread_or_ln34_fu_399_p2();
    void thread_or_ln35_1_fu_455_p2();
    void thread_or_ln35_fu_449_p2();
    void thread_or_ln38_fu_860_p2();
    void thread_or_ln41_1_fu_938_p2();
    void thread_or_ln41_fu_920_p2();
    void thread_or_ln5_fu_996_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_804_p3();
    void thread_p_shl_cast_fu_665_p3();
    void thread_select_ln33_1_fu_573_p3();
    void thread_select_ln33_2_fu_580_p3();
    void thread_select_ln33_3_fu_593_p3();
    void thread_select_ln33_4_fu_600_p3();
    void thread_select_ln33_5_fu_752_p3();
    void thread_select_ln33_fu_559_p3();
    void thread_select_ln34_1_fu_621_p3();
    void thread_select_ln34_2_fu_830_p3();
    void thread_select_ln34_3_fu_628_p3();
    void thread_select_ln34_4_fu_739_p3();
    void thread_select_ln34_fu_411_p3();
    void thread_select_ln35_1_fu_473_p3();
    void thread_select_ln35_2_fu_644_p3();
    void thread_select_ln35_3_fu_487_p3();
    void thread_select_ln35_4_fu_691_p3();
    void thread_select_ln35_5_fu_726_p3();
    void thread_select_ln35_fu_461_p3();
    void thread_select_ln41_1_fu_507_p3();
    void thread_select_ln41_2_fu_547_p3();
    void thread_select_ln41_3_fu_553_p3();
    void thread_select_ln41_fu_279_p3();
    void thread_select_ln5_fu_1008_p3();
    void thread_sext_ln41_1_fu_681_p1();
    void thread_sext_ln41_fu_543_p1();
    void thread_sext_ln45_1_fu_820_p1();
    void thread_sext_ln45_fu_787_p1();
    void thread_shl_ln40_1_mid1_fu_613_p3();
    void thread_shl_ln40_mid1_fu_566_p3();
    void thread_shl_ln40_s_fu_585_p3();
    void thread_shl_ln_fu_237_p3();
    void thread_sub_ln41_1_fu_685_p2();
    void thread_sub_ln41_fu_537_p2();
    void thread_sub_ln45_1_fu_824_p2();
    void thread_sub_ln45_fu_781_p2();
    void thread_tmp_10_fu_812_p3();
    void thread_tmp_11_fu_673_p3();
    void thread_tmp_1_fu_525_p3();
    void thread_tmp_3_fu_759_p3();
    void thread_tmp_4_fu_770_p3();
    void thread_tmp_6_fu_894_p4();
    void thread_tmp_8_fu_970_p4();
    void thread_tmp_fu_877_p4();
    void thread_tmp_s_fu_513_p3();
    void thread_trunc_ln35_1_fu_469_p1();
    void thread_trunc_ln35_fu_293_p1();
    void thread_trunc_ln36_fu_857_p1();
    void thread_trunc_ln41_1_fu_887_p1();
    void thread_trunc_ln41_2_fu_904_p1();
    void thread_trunc_ln41_fu_661_p1();
    void thread_trunc_ln45_fu_800_p1();
    void thread_trunc_ln5_fu_980_p1();
    void thread_w_fu_607_p2();
    void thread_xor_ln33_fu_363_p2();
    void thread_xor_ln34_fu_419_p2();
    void thread_xor_ln41_fu_287_p2();
    void thread_zext_ln33_fu_791_p1();
    void thread_zext_ln34_fu_835_p1();
    void thread_zext_ln35_1_fu_635_p1();
    void thread_zext_ln35_2_fu_651_p1();
    void thread_zext_ln35_fu_245_p1();
    void thread_zext_ln36_fu_696_p1();
    void thread_zext_ln41_1_fu_533_p1();
    void thread_zext_ln41_2_fu_705_p1();
    void thread_zext_ln41_3_fu_850_p1();
    void thread_zext_ln41_fu_521_p1();
    void thread_zext_ln45_1_fu_777_p1();
    void thread_zext_ln45_2_fu_845_p1();
    void thread_zext_ln45_fu_766_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
